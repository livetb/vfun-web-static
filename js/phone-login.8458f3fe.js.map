{"version":3,"sources":["webpack:///./node_modules/intl-tel-input/index.js","webpack:///./node_modules/vant/es/utils/validate/system.js","webpack:///./node_modules/vant/es/utils/dom/reset-scroll.js","webpack:///./node_modules/vant/es/field/index.js","webpack:///./src/views/PhoneLogin.vue?e67b","webpack:///./node_modules/vant/es/count-down/utils.js","webpack:///./node_modules/vant/es/count-down/index.js","webpack:///src/views/PhoneLogin.vue","webpack:///./src/views/PhoneLogin.vue?951a","webpack:///./src/views/PhoneLogin.vue","webpack:///./node_modules/vant/es/field/style/less.js","webpack:///./node_modules/intl-tel-input/build/js/intlTelInput.js","webpack:///./src/views/PhoneLogin.vue?594e"],"names":["module","exports","isIOS","test","navigator","userAgent","toLowerCase","resetScroll","_createNamespace","create","createComponent","bem","inheritAttrs","props","error","Boolean","readonly","autosize","Object","leftIcon","String","rightIcon","clearable","labelClass","labelWidth","Number","labelAlign","inputAlign","errorMessage","errorMessageAlign","showWordLimit","type","default","data","focused","watch","value","this","$nextTick","adjustSize","mounted","format","computed","showClear","listeners","$listeners","input","onInput","keypress","onKeypress","focus","onFocus","blur","onBlur","click","labelStyle","width","methods","$refs","target","_target","maxlength","$attrs","length","slice","event","composing","$emit","onClick","onClickLeftIcon","onClickRightIcon","onClear","keyCode","allowPoint","indexOf","isValidKey","style","height","scrollHeight","_this$autosize","maxHeight","minHeight","Math","min","max","renderInput","h","$createElement","inputSlot","slots","inputProps","ref","class","domProps","attrs","on","directives","name","renderLeftIcon","showLeftIcon","renderRightIcon","showRightIcon","renderWordLimit","render","_bem","arguments","scopedSlots","icon","title","size","label","center","border","isLink","required","clickable","arrowDirection","_vm","_h","_c","_self","staticClass","model","callback","$$v","phone","expression","slot","code","sended","sendVerifyCode","time","finishCD","_v","loginByPhone","staticRenderFns","SECOND","MINUTE","HOUR","DAY","parseTimeData","days","floor","hours","minutes","seconds","milliseconds","parseFormat","timeData","replace","isSameSecond","time1","time2","millisecond","autoStart","remain","formattedTime","immediate","handler","start","counting","endTime","Date","now","tick","pause","rafId","reset","microTick","macroTick","_this","raf","setRemain","getRemain","_this2","coutry","dialCode","$toast","confirmResult","resetRecaptcha","recaptchaVerifier","clear","iti","initialCountry","separateDialCode","component","factory","intlTelInput","window","document","undefined","allCountries","i","c","iso2","priority","areaCodes","_classCallCheck","instance","Constructor","TypeError","_defineProperties","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","prototype","intlTelInputGlobals","getInstance","id","getAttribute","instances","defaults","allowDropdown","autoHideDialCode","autoPlaceholder","customContainer","customPlaceholder","dropdownContainer","excludeCountries","formatOnDisplay","geoIpLookup","hiddenInput","localizedCountries","nationalMode","onlyCountries","placeholderNumberType","preferredCountries","utilsScript","regionlessNanpNumbers","addEventListener","windowLoaded","forEachProp","obj","keys","forEachInstance","method","Iti","options","telInput","activeItem","highlightedItem","customOptions","hasOwnProperty","hadInitialPlaceholder","isMobile","body","classList","add","Promise","autoCountryPromise","resolve","reject","resolveAutoCountryPromise","rejectAutoCountryPromise","utilsScriptPromise","resolveUtilsScriptPromise","rejectUtilsScriptPromise","promise","all","selectedCountryData","_processCountryData","_generateMarkup","_setInitialState","_initListeners","_initRequests","_processAllCountries","_processCountryCodes","_processPreferredCountries","_translateCountriesByLocale","countries","sort","_countryNameSort","dialCodeMaxLen","countryCodes","index","lowerCaseOnlyCountries","map","country","filter","lowerCaseExcludeCountries","iso","a","b","localeCompare","_addCountryCode","_i","rootCountryCode","j","areaCode","k","partialDialCode","substr","countryCode","countryData","_getCountryData","push","container","el","createElement","setAttribute","appendChild","parentClass","wrapper","_createEl","parentNode","insertBefore","flagsContainer","selectedFlag","role","selectedFlagInner","selectedDialCode","dropdownArrow","countryList","_appendListItems","dropdown","hiddenInputName","lastIndexOf","concat","className","tmp","insertAdjacentHTML","val","_getDialCode","isRegionlessNanp","_isRegionlessNanp","_this$options","_updateFlagFromNumber","_setFlag","defaultCountry","_updateValFromNumber","_initKeyListeners","_initBlurListeners","_initDropdownListeners","_initHiddenInputListener","_this3","_handleHiddenInputSubmit","getNumber","form","tagName","_this4","_handleLabelClick","e","contains","preventDefault","_getClosestLabel","_handleClickSelectedFlag","disabled","readOnly","_showDropdown","_handleFlagsContainerKeydown","isDropdownHidden","stopPropagation","_closeDropdown","_this5","intlTelInputUtils","loadUtils","_loadAutoCountry","autoCountry","handleAutoCountry","startedLoadingAutoCountry","setTimeout","_this6","_handleKeyupEvent","_triggerCountryChange","_handleClipboardEvent","number","_this7","_handleSubmitOrBlurEvent","_removeEmptyDialCode","charAt","numeric","_getNumeric","s","createEvent","initEvent","dispatchEvent","remove","_setDropdownPosition","_highlightListItem","_scrollTo","_bindDropdownListeners","_trigger","shouldHaveClass","_this8","pos","getBoundingClientRect","windowTop","pageYOffset","documentElement","scrollTop","inputTop","top","dropdownHeight","offsetHeight","dropdownFitsBelow","innerHeight","dropdownFitsAbove","_toggleClass","extraTop","left","scrollLeft","_handleWindowScroll","_this9","_handleMouseoverCountryList","listItem","_getClosestListItem","_handleClickCountryList","_selectListItem","isOpening","_handleClickOffToClose","query","queryTimer","_handleKeydownOnDropdown","_handleUpDownKey","_handleEnterKey","clearTimeout","_searchForCountry","next","previousElementSibling","nextElementSibling","_startsWith","querySelector","originalNumber","useNational","_intlTelInputUtils$nu","numberFormat","NATIONAL","INTERNATIONAL","formatNumber","_beforeSetNumber","isNanp","alreadySelected","isRegionlessNanpNumber","shouldFocus","prevItem","ignoreOnlyCountriesOption","allowFail","Error","prevCountry","innerHTML","selectedFlagWidth","offsetWidth","_getHiddenSelectedFlagWidth","paddingLeft","_updatePlaceholder","nextItem","containerClone","cloneNode","visibility","selectedFlagClone","removeChild","shouldSetPlaceholder","numberType","placeholder","getExampleNumber","flagChanged","_updateDialCode","len","setSelectionRange","removeEventListener","element","middle","containerHeight","containerTop","containerBottom","elementHeight","elementTop","elementBottom","newScrollTop","middleOffset","heightDifference","newDialCodeBare","hasSelectedListItem","newNumber","inputVal","newDialCode","prevDialCode","numericChars","isNaN","parseInt","prefix","trim","numericVal","_cap","setCountry","removeAttribute","getExtension","_getFullNumber","getNumberType","getValidationError","isValidNumber","originalCountryCode","getCountryData","injectScript","path","handleSuccess","handleFailure","script","onload","onerror","async","src","startedLoadingUtilsScript","version","_init"],"mappings":"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","file":"js/phone-login.8458f3fe.js","sourcesContent":["/**\n * Exposing intl-tel-input as a component\n */\nmodule.exports = require(\"./build/js/intlTelInput\");\n","import { isServer } from '..';\nexport function isAndroid() {\n  /* istanbul ignore next */\n  return isServer ? false : /android/.test(navigator.userAgent.toLowerCase());\n}\nexport function isIOS() {\n  /* istanbul ignore next */\n  return isServer ? false : /ios|iphone|ipad|ipod/.test(navigator.userAgent.toLowerCase());\n}","/**\n * Hack for iOS12 page scroll\n * https://developers.weixin.qq.com/community/develop/doc/00044ae90742f8c82fb78fcae56800\n */\nimport { isIOS as checkIsIOS } from '../validate/system';\nimport { getRootScrollTop, setRootScrollTop } from './scroll';\nvar isIOS = checkIsIOS();\n/* istanbul ignore next */\n\nexport function resetScroll() {\n  if (isIOS) {\n    setRootScrollTop(getRootScrollTop());\n  }\n}","import _mergeJSXProps2 from \"@vue/babel-helper-vue-jsx-merge-props\";\nimport _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport Icon from '../icon';\nimport Cell from '../cell';\nimport { cellProps } from '../cell/shared';\nimport { preventDefault } from '../utils/dom/event';\nimport { resetScroll } from '../utils/dom/reset-scroll';\nimport { createNamespace, isObj, isDef, addUnit } from '../utils';\n\nvar _createNamespace = createNamespace('field'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nexport default createComponent({\n  inheritAttrs: false,\n  props: _extends({}, cellProps, {\n    error: Boolean,\n    readonly: Boolean,\n    autosize: [Boolean, Object],\n    leftIcon: String,\n    rightIcon: String,\n    clearable: Boolean,\n    labelClass: null,\n    labelWidth: [Number, String],\n    labelAlign: String,\n    inputAlign: String,\n    errorMessage: String,\n    errorMessageAlign: String,\n    showWordLimit: Boolean,\n    type: {\n      type: String,\n      default: 'text'\n    }\n  }),\n  data: function data() {\n    return {\n      focused: false\n    };\n  },\n  watch: {\n    value: function value() {\n      this.$nextTick(this.adjustSize);\n    }\n  },\n  mounted: function mounted() {\n    this.format();\n    this.$nextTick(this.adjustSize);\n  },\n  computed: {\n    showClear: function showClear() {\n      return this.clearable && this.focused && this.value !== '' && isDef(this.value) && !this.readonly;\n    },\n    listeners: function listeners() {\n      var listeners = _extends({}, this.$listeners, {\n        input: this.onInput,\n        keypress: this.onKeypress,\n        focus: this.onFocus,\n        blur: this.onBlur\n      });\n\n      delete listeners.click;\n      return listeners;\n    },\n    labelStyle: function labelStyle() {\n      var labelWidth = this.labelWidth;\n\n      if (labelWidth) {\n        return {\n          width: addUnit(labelWidth)\n        };\n      }\n    }\n  },\n  methods: {\n    focus: function focus() {\n      if (this.$refs.input) {\n        this.$refs.input.focus();\n      }\n    },\n    blur: function blur() {\n      if (this.$refs.input) {\n        this.$refs.input.blur();\n      }\n    },\n    // native maxlength not work when type = number\n    format: function format(target) {\n      if (target === void 0) {\n        target = this.$refs.input;\n      }\n\n      if (!target) {\n        return;\n      }\n\n      var _target = target,\n          value = _target.value;\n      var maxlength = this.$attrs.maxlength;\n\n      if (this.type === 'number' && isDef(maxlength) && value.length > maxlength) {\n        value = value.slice(0, maxlength);\n        target.value = value;\n      }\n\n      return value;\n    },\n    onInput: function onInput(event) {\n      // not update v-model when composing\n      if (event.target.composing) {\n        return;\n      }\n\n      this.$emit('input', this.format(event.target));\n    },\n    onFocus: function onFocus(event) {\n      this.focused = true;\n      this.$emit('focus', event); // hack for safari\n\n      /* istanbul ignore if */\n\n      if (this.readonly) {\n        this.blur();\n      }\n    },\n    onBlur: function onBlur(event) {\n      this.focused = false;\n      this.$emit('blur', event);\n      resetScroll();\n    },\n    onClick: function onClick(event) {\n      this.$emit('click', event);\n    },\n    onClickLeftIcon: function onClickLeftIcon(event) {\n      this.$emit('click-left-icon', event);\n    },\n    onClickRightIcon: function onClickRightIcon(event) {\n      this.$emit('click-right-icon', event);\n    },\n    onClear: function onClear(event) {\n      preventDefault(event);\n      this.$emit('input', '');\n      this.$emit('clear', event);\n    },\n    onKeypress: function onKeypress(event) {\n      if (this.type === 'number') {\n        var keyCode = event.keyCode;\n        var allowPoint = String(this.value).indexOf('.') === -1;\n        var isValidKey = keyCode >= 48 && keyCode <= 57 || keyCode === 46 && allowPoint || keyCode === 45;\n\n        if (!isValidKey) {\n          preventDefault(event);\n        }\n      } // trigger blur after click keyboard search button\n\n      /* istanbul ignore next */\n\n\n      if (this.type === 'search' && event.keyCode === 13) {\n        this.blur();\n      }\n\n      this.$emit('keypress', event);\n    },\n    adjustSize: function adjustSize() {\n      var input = this.$refs.input;\n\n      if (!(this.type === 'textarea' && this.autosize) || !input) {\n        return;\n      }\n\n      input.style.height = 'auto';\n      var height = input.scrollHeight;\n\n      if (isObj(this.autosize)) {\n        var _this$autosize = this.autosize,\n            maxHeight = _this$autosize.maxHeight,\n            minHeight = _this$autosize.minHeight;\n\n        if (maxHeight) {\n          height = Math.min(height, maxHeight);\n        }\n\n        if (minHeight) {\n          height = Math.max(height, minHeight);\n        }\n      }\n\n      if (height) {\n        input.style.height = height + 'px';\n      }\n    },\n    renderInput: function renderInput() {\n      var h = this.$createElement;\n      var inputSlot = this.slots('input');\n\n      if (inputSlot) {\n        return h(\"div\", {\n          \"class\": bem('control', this.inputAlign)\n        }, [inputSlot]);\n      }\n\n      var inputProps = {\n        ref: 'input',\n        class: bem('control', this.inputAlign),\n        domProps: {\n          value: this.value\n        },\n        attrs: _extends({}, this.$attrs, {\n          readonly: this.readonly\n        }),\n        on: this.listeners,\n        // add model directive to skip IME composition\n        directives: [{\n          name: 'model',\n          value: this.value\n        }]\n      };\n\n      if (this.type === 'textarea') {\n        return h(\"textarea\", _mergeJSXProps([{}, inputProps]));\n      }\n\n      return h(\"input\", _mergeJSXProps2([{\n        \"attrs\": {\n          \"type\": this.type\n        }\n      }, inputProps]));\n    },\n    renderLeftIcon: function renderLeftIcon() {\n      var h = this.$createElement;\n      var showLeftIcon = this.slots('left-icon') || this.leftIcon;\n\n      if (showLeftIcon) {\n        return h(\"div\", {\n          \"class\": bem('left-icon'),\n          \"on\": {\n            \"click\": this.onClickLeftIcon\n          }\n        }, [this.slots('left-icon') || h(Icon, {\n          \"attrs\": {\n            \"name\": this.leftIcon\n          }\n        })]);\n      }\n    },\n    renderRightIcon: function renderRightIcon() {\n      var h = this.$createElement;\n      var slots = this.slots;\n      var showRightIcon = slots('right-icon') || this.rightIcon;\n\n      if (showRightIcon) {\n        return h(\"div\", {\n          \"class\": bem('right-icon'),\n          \"on\": {\n            \"click\": this.onClickRightIcon\n          }\n        }, [slots('right-icon') || h(Icon, {\n          \"attrs\": {\n            \"name\": this.rightIcon\n          }\n        })]);\n      }\n    },\n    renderWordLimit: function renderWordLimit() {\n      var h = this.$createElement;\n\n      if (this.showWordLimit && this.$attrs.maxlength) {\n        return h(\"div\", {\n          \"class\": bem('word-limit')\n        }, [this.value.length, \"/\", this.$attrs.maxlength]);\n      }\n    }\n  },\n  render: function render() {\n    var _bem;\n\n    var h = arguments[0];\n    var slots = this.slots,\n        labelAlign = this.labelAlign;\n    var scopedSlots = {\n      icon: this.renderLeftIcon\n    };\n\n    if (slots('label')) {\n      scopedSlots.title = function () {\n        return slots('label');\n      };\n    }\n\n    return h(Cell, {\n      \"attrs\": {\n        \"icon\": this.leftIcon,\n        \"size\": this.size,\n        \"title\": this.label,\n        \"center\": this.center,\n        \"border\": this.border,\n        \"isLink\": this.isLink,\n        \"required\": this.required,\n        \"clickable\": this.clickable,\n        \"titleStyle\": this.labelStyle,\n        \"titleClass\": [bem('label', labelAlign), this.labelClass],\n        \"arrowDirection\": this.arrowDirection\n      },\n      \"class\": bem((_bem = {\n        error: this.error\n      }, _bem[\"label-\" + labelAlign] = labelAlign, _bem['min-height'] = this.type === 'textarea' && !this.autosize, _bem)),\n      \"scopedSlots\": scopedSlots,\n      \"on\": {\n        \"click\": this.onClick\n      }\n    }, [h(\"div\", {\n      \"class\": bem('body')\n    }, [this.renderInput(), this.showClear && h(Icon, {\n      \"attrs\": {\n        \"name\": \"clear\"\n      },\n      \"class\": bem('clear'),\n      \"on\": {\n        \"touchstart\": this.onClear\n      }\n    }), this.renderRightIcon(), slots('button') && h(\"div\", {\n      \"class\": bem('button')\n    }, [slots('button')])]), this.renderWordLimit(), this.errorMessage && h(\"div\", {\n      \"class\": bem('error-message', this.errorMessageAlign)\n    }, [this.errorMessage])]);\n  }\n});","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"login-page\"},[_c('div',[_c('div',{ref:\"recaptcha\",attrs:{\"id\":\"phone-login-recaptcha\"}}),_c('van-field',{attrs:{\"placeholder\":\"Please enter phone number\",\"center\":\"\"},model:{value:(_vm.phone),callback:function ($$v) {_vm.phone=$$v},expression:\"phone\"}},[_c('input',{ref:\"phone\",attrs:{\"slot\":\"label\"},slot:\"label\"})]),_c('van-field',{attrs:{\"placeholder\":\"verify code\",\"label\":\"verify code\",\"center\":\"\"},model:{value:(_vm.code),callback:function ($$v) {_vm.code=$$v},expression:\"code\"}},[_c('van-button',{attrs:{\"slot\":\"button\",\"disabled\":_vm.sended,\"size\":\"small\",\"type\":\"primary\"},on:{\"click\":_vm.sendVerifyCode},slot:\"button\"},[(_vm.sended)?_c('van-count-down',{ref:\"countDown\",attrs:{\"format\":\"mm:ss\",\"time\":_vm.time,\"auto-start\":\"\"},on:{\"finish\":_vm.finishCD}}):_c('div',[_vm._v(\"Send verify code\")])],1)],1),_c('div',{staticClass:\"login-button-wrap\"},[_c('van-button',{staticClass:\"login-btn\",attrs:{\"color\":\"#6B7DFC\"},on:{\"click\":_vm.loginByPhone}},[_vm._v(\"Sign up/ Login\")])],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { padZero } from '../utils/format/string';\nvar SECOND = 1000;\nvar MINUTE = 60 * SECOND;\nvar HOUR = 60 * MINUTE;\nvar DAY = 24 * HOUR;\nexport function parseTimeData(time) {\n  var days = Math.floor(time / DAY);\n  var hours = Math.floor(time % DAY / HOUR);\n  var minutes = Math.floor(time % HOUR / MINUTE);\n  var seconds = Math.floor(time % MINUTE / SECOND);\n  var milliseconds = Math.floor(time % SECOND);\n  return {\n    days: days,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds,\n    milliseconds: milliseconds\n  };\n}\nexport function parseFormat(format, timeData) {\n  var days = timeData.days;\n  var hours = timeData.hours,\n      minutes = timeData.minutes,\n      seconds = timeData.seconds,\n      milliseconds = timeData.milliseconds;\n\n  if (format.indexOf('DD') === -1) {\n    hours += days * 24;\n  } else {\n    format = format.replace('DD', padZero(days));\n  }\n\n  if (format.indexOf('HH') === -1) {\n    minutes += hours * 60;\n  } else {\n    format = format.replace('HH', padZero(hours));\n  }\n\n  if (format.indexOf('mm') === -1) {\n    seconds += minutes * 60;\n  } else {\n    format = format.replace('mm', padZero(minutes));\n  }\n\n  if (format.indexOf('ss') === -1) {\n    milliseconds += seconds * 1000;\n  } else {\n    format = format.replace('ss', padZero(seconds));\n  }\n\n  return format.replace('SSS', padZero(milliseconds, 3));\n}\nexport function isSameSecond(time1, time2) {\n  return Math.floor(time1 / 1000) === Math.floor(time2 / 1000);\n}","import { createNamespace } from '../utils';\nimport { raf, cancelRaf } from '../utils/dom/raf';\nimport { isSameSecond, parseTimeData, parseFormat } from './utils';\n\nvar _createNamespace = createNamespace('count-down'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nexport default createComponent({\n  props: {\n    millisecond: Boolean,\n    time: {\n      type: Number,\n      default: 0\n    },\n    format: {\n      type: String,\n      default: 'HH:mm:ss'\n    },\n    autoStart: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      remain: 0\n    };\n  },\n  computed: {\n    timeData: function timeData() {\n      return parseTimeData(this.remain);\n    },\n    formattedTime: function formattedTime() {\n      return parseFormat(this.format, this.timeData);\n    }\n  },\n  watch: {\n    time: {\n      immediate: true,\n      handler: 'reset'\n    }\n  },\n  methods: {\n    start: function start() {\n      if (this.counting) {\n        return;\n      }\n\n      this.counting = true;\n      this.endTime = Date.now() + this.remain;\n      this.tick();\n    },\n    pause: function pause() {\n      this.counting = false;\n      cancelRaf(this.rafId);\n    },\n    reset: function reset() {\n      this.pause();\n      this.remain = this.time;\n\n      if (this.autoStart) {\n        this.start();\n      }\n    },\n    tick: function tick() {\n      if (this.millisecond) {\n        this.microTick();\n      } else {\n        this.macroTick();\n      }\n    },\n    microTick: function microTick() {\n      var _this = this;\n\n      this.rafId = raf(function () {\n        _this.setRemain(_this.getRemain());\n\n        if (_this.remain !== 0) {\n          _this.microTick();\n        }\n      });\n    },\n    macroTick: function macroTick() {\n      var _this2 = this;\n\n      this.rafId = raf(function () {\n        var remain = _this2.getRemain();\n\n        if (!isSameSecond(remain, _this2.remain) || remain === 0) {\n          _this2.setRemain(remain);\n        }\n\n        if (_this2.remain !== 0) {\n          _this2.macroTick();\n        }\n      });\n    },\n    getRemain: function getRemain() {\n      return Math.max(this.endTime - Date.now(), 0);\n    },\n    setRemain: function setRemain(remain) {\n      this.remain = remain;\n\n      if (remain === 0) {\n        this.pause();\n        this.$emit('finish');\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    return h(\"div\", {\n      \"class\": bem()\n    }, [this.slots('default', this.timeData) || this.formattedTime]);\n  }\n});","<template>\r\n  <div class=\"login-page\">\r\n    <div>\r\n      <div ref=\"recaptcha\" id=\"phone-login-recaptcha\"></div>\r\n      <van-field v-model=\"phone\" placeholder=\"Please enter phone number\" center>\r\n        <input slot=\"label\" ref=\"phone\" />\r\n      </van-field>\r\n      <van-field\r\n        v-model=\"code\"\r\n        placeholder=\"verify code\"\r\n        label=\"verify code\"\r\n        center\r\n      >\r\n        <van-button\r\n          @click=\"sendVerifyCode\"\r\n          :disabled=\"sended\"\r\n          slot=\"button\"\r\n          size=\"small\"\r\n          type=\"primary\"\r\n        >\r\n          <van-count-down\r\n            ref=\"countDown\"\r\n            @finish=\"finishCD\"\r\n            format=\"mm:ss\"\r\n            :time=\"time\"\r\n            auto-start\r\n            v-if=\"sended\"\r\n          />\r\n          <div v-else>Send verify code</div>\r\n        </van-button>\r\n      </van-field>\r\n      <div class=\"login-button-wrap\">\r\n        <van-button @click=\"loginByPhone\" class=\"login-btn\" color=\"#6B7DFC\"\r\n          >Sign up/ Login</van-button\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// /* global grecaptcha */\r\nimport * as intlTelInput from \"intl-tel-input\";\r\nimport \"intl-tel-input/build/css/intlTelInput.min.css\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport Vue from \"vue\";\r\nimport { Field, Button, CountDown } from \"vant\";\r\nimport { mapActions } from \"vuex\";\r\n\r\nVue.use(Field)\r\n  .use(Button)\r\n  .use(CountDown);\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      phone: \"\",\r\n      code: \"\",\r\n      time: 60 * 1000,\r\n      sended: false\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions([\"login\"]),\r\n    finishCD() {\r\n      this.sended = false;\r\n      this.time = 60 * 1000;\r\n    },\r\n    sendVerifyCode() {\r\n      if (!this.phone) {\r\n        this.$toast(\"Please enter phone number\");\r\n        return;\r\n      }\r\n      let dialCode = \"+\";\r\n      const coutry = this.iti.getSelectedCountryData();\r\n      if (coutry) {\r\n        dialCode = dialCode + coutry.dialCode;\r\n      }\r\n      firebase\r\n        .auth()\r\n        .signInWithPhoneNumber(dialCode + this.phone, this.recaptchaVerifier)\r\n        .then(result => {\r\n          this.confirmResult = result;\r\n          this.sended = true;\r\n          this.resetRecaptcha();\r\n          this.$toast(\"Send Success\");\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          this.resetRecaptcha();\r\n          this.$toast(error.message);\r\n        });\r\n    },\r\n    loginByPhone() {\r\n      if (!this.confirmResult || !this.code) {\r\n        this.$toast(\"please enter verification code\");\r\n      } else if (!this.phone) {\r\n        this.$toast(\"please enter phone number\");\r\n      }\r\n      if (this.confirmResult) {\r\n        this.confirmResult\r\n          .confirm(this.code)\r\n          .then(async res => {\r\n            let dialCode = \"+\";\r\n            const coutry = this.iti.getSelectedCountryData();\r\n            if (coutry) {\r\n              dialCode = dialCode + coutry.dialCode;\r\n            }\r\n            const { user } = res;\r\n            await this.login({\r\n              user,\r\n              method: { type: \"phone\", id: dialCode + this.phone }\r\n            });\r\n            this.$router.push(\"/home\");\r\n          })\r\n          .catch(function(error) {\r\n            console.log(error);\r\n            this.$toast(error.message);\r\n          });\r\n      }\r\n    },\r\n    resetRecaptcha() {\r\n      if (this.recaptchaVerifier) {\r\n        this.recaptchaVerifier.clear();\r\n      }\r\n      this.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n        this.$refs.recaptcha,\r\n        {\r\n          size: \"invisible\",\r\n          callback: function(response) {\r\n            console.log(response);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  },\r\n  mounted() {\r\n    // 手机登录\r\n    // firebase.auth().settings.appVerificationDisabledForTesting =\r\n    //   process.env.NODE_ENV === \"development\" ? true : false;\r\n    this.resetRecaptcha();\r\n    this.iti = intlTelInput(this.$refs.phone, {\r\n      initialCountry: \"cn\",\r\n      separateDialCode: true\r\n    });\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.login-page {\r\n  padding: 80px 35px 0;\r\n  min-height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  box-sizing: border-box;\r\n  .login-tips {\r\n    text-align: right;\r\n    font-size: 12px;\r\n    color: #cfcfcf;\r\n    padding: 10px 0;\r\n  }\r\n  .login-button-wrap {\r\n    margin-top: 40px;\r\n    text-align: center;\r\n    // padding: 20px;\r\n    .login-btn {\r\n      height: 36px;\r\n      line-height: 1;\r\n      font-size: 18px;\r\n      font-weight: bold;\r\n      padding: 0 45px;\r\n    }\r\n  }\r\n  .van-field__label {\r\n    display: flex;\r\n  }\r\n\r\n  .iti {\r\n    input {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhoneLogin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhoneLogin.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PhoneLogin.vue?vue&type=template&id=45975d8d&\"\nimport script from \"./PhoneLogin.vue?vue&type=script&lang=js&\"\nexport * from \"./PhoneLogin.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PhoneLogin.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import '../../style/base.less';\nimport '../../image/index.less';\nimport '../index.less';","/*\n * International Telephone Input v16.0.7\n * https://github.com/jackocnr/intl-tel-input.git\n * Licensed under the MIT license\n */\n\n// wrap in UMD\n(function(factory) {\n    var intlTelInput = factory(window, document);\n    if (typeof module === \"object\" && module.exports) module.exports = intlTelInput; else window.intlTelInput = intlTelInput;\n})(function(window, document, undefined) {\n    \"use strict\";\n    return function() {\n        // Array of country objects for the flag dropdown.\n        // Here is the criteria for the plugin to support a given country/territory\n        // - It has an iso2 code: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\n        // - It has it's own country calling code (it is not a sub-region of another country): https://en.wikipedia.org/wiki/List_of_country_calling_codes\n        // - It has a flag in the region-flags project: https://github.com/behdad/region-flags/tree/gh-pages/png\n        // - It is supported by libphonenumber (it must be listed on this page): https://github.com/googlei18n/libphonenumber/blob/master/resources/ShortNumberMetadata.xml\n        // Each country array has the following information:\n        // [\n        //    Country name,\n        //    iso2 code,\n        //    International dial code,\n        //    Order (if >1 country with same dial code),\n        //    Area codes\n        // ]\n        var allCountries = [ [ \"Afghanistan (‫افغانستان‬‎)\", \"af\", \"93\" ], [ \"Albania (Shqipëri)\", \"al\", \"355\" ], [ \"Algeria (‫الجزائر‬‎)\", \"dz\", \"213\" ], [ \"American Samoa\", \"as\", \"1\", 5, [ \"684\" ] ], [ \"Andorra\", \"ad\", \"376\" ], [ \"Angola\", \"ao\", \"244\" ], [ \"Anguilla\", \"ai\", \"1\", 6, [ \"264\" ] ], [ \"Antigua and Barbuda\", \"ag\", \"1\", 7, [ \"268\" ] ], [ \"Argentina\", \"ar\", \"54\" ], [ \"Armenia (Հայաստան)\", \"am\", \"374\" ], [ \"Aruba\", \"aw\", \"297\" ], [ \"Australia\", \"au\", \"61\", 0 ], [ \"Austria (Österreich)\", \"at\", \"43\" ], [ \"Azerbaijan (Azərbaycan)\", \"az\", \"994\" ], [ \"Bahamas\", \"bs\", \"1\", 8, [ \"242\" ] ], [ \"Bahrain (‫البحرين‬‎)\", \"bh\", \"973\" ], [ \"Bangladesh (বাংলাদেশ)\", \"bd\", \"880\" ], [ \"Barbados\", \"bb\", \"1\", 9, [ \"246\" ] ], [ \"Belarus (Беларусь)\", \"by\", \"375\" ], [ \"Belgium (België)\", \"be\", \"32\" ], [ \"Belize\", \"bz\", \"501\" ], [ \"Benin (Bénin)\", \"bj\", \"229\" ], [ \"Bermuda\", \"bm\", \"1\", 10, [ \"441\" ] ], [ \"Bhutan (འབྲུག)\", \"bt\", \"975\" ], [ \"Bolivia\", \"bo\", \"591\" ], [ \"Bosnia and Herzegovina (Босна и Херцеговина)\", \"ba\", \"387\" ], [ \"Botswana\", \"bw\", \"267\" ], [ \"Brazil (Brasil)\", \"br\", \"55\" ], [ \"British Indian Ocean Territory\", \"io\", \"246\" ], [ \"British Virgin Islands\", \"vg\", \"1\", 11, [ \"284\" ] ], [ \"Brunei\", \"bn\", \"673\" ], [ \"Bulgaria (България)\", \"bg\", \"359\" ], [ \"Burkina Faso\", \"bf\", \"226\" ], [ \"Burundi (Uburundi)\", \"bi\", \"257\" ], [ \"Cambodia (កម្ពុជា)\", \"kh\", \"855\" ], [ \"Cameroon (Cameroun)\", \"cm\", \"237\" ], [ \"Canada\", \"ca\", \"1\", 1, [ \"204\", \"226\", \"236\", \"249\", \"250\", \"289\", \"306\", \"343\", \"365\", \"387\", \"403\", \"416\", \"418\", \"431\", \"437\", \"438\", \"450\", \"506\", \"514\", \"519\", \"548\", \"579\", \"581\", \"587\", \"604\", \"613\", \"639\", \"647\", \"672\", \"705\", \"709\", \"742\", \"778\", \"780\", \"782\", \"807\", \"819\", \"825\", \"867\", \"873\", \"902\", \"905\" ] ], [ \"Cape Verde (Kabu Verdi)\", \"cv\", \"238\" ], [ \"Caribbean Netherlands\", \"bq\", \"599\", 1, [ \"3\", \"4\", \"7\" ] ], [ \"Cayman Islands\", \"ky\", \"1\", 12, [ \"345\" ] ], [ \"Central African Republic (République centrafricaine)\", \"cf\", \"236\" ], [ \"Chad (Tchad)\", \"td\", \"235\" ], [ \"Chile\", \"cl\", \"56\" ], [ \"China (中国)\", \"cn\", \"86\" ], [ \"Christmas Island\", \"cx\", \"61\", 2 ], [ \"Cocos (Keeling) Islands\", \"cc\", \"61\", 1 ], [ \"Colombia\", \"co\", \"57\" ], [ \"Comoros (‫جزر القمر‬‎)\", \"km\", \"269\" ], [ \"Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)\", \"cd\", \"243\" ], [ \"Congo (Republic) (Congo-Brazzaville)\", \"cg\", \"242\" ], [ \"Cook Islands\", \"ck\", \"682\" ], [ \"Costa Rica\", \"cr\", \"506\" ], [ \"Côte d’Ivoire\", \"ci\", \"225\" ], [ \"Croatia (Hrvatska)\", \"hr\", \"385\" ], [ \"Cuba\", \"cu\", \"53\" ], [ \"Curaçao\", \"cw\", \"599\", 0 ], [ \"Cyprus (Κύπρος)\", \"cy\", \"357\" ], [ \"Czech Republic (Česká republika)\", \"cz\", \"420\" ], [ \"Denmark (Danmark)\", \"dk\", \"45\" ], [ \"Djibouti\", \"dj\", \"253\" ], [ \"Dominica\", \"dm\", \"1\", 13, [ \"767\" ] ], [ \"Dominican Republic (República Dominicana)\", \"do\", \"1\", 2, [ \"809\", \"829\", \"849\" ] ], [ \"Ecuador\", \"ec\", \"593\" ], [ \"Egypt (‫مصر‬‎)\", \"eg\", \"20\" ], [ \"El Salvador\", \"sv\", \"503\" ], [ \"Equatorial Guinea (Guinea Ecuatorial)\", \"gq\", \"240\" ], [ \"Eritrea\", \"er\", \"291\" ], [ \"Estonia (Eesti)\", \"ee\", \"372\" ], [ \"Ethiopia\", \"et\", \"251\" ], [ \"Falkland Islands (Islas Malvinas)\", \"fk\", \"500\" ], [ \"Faroe Islands (Føroyar)\", \"fo\", \"298\" ], [ \"Fiji\", \"fj\", \"679\" ], [ \"Finland (Suomi)\", \"fi\", \"358\", 0 ], [ \"France\", \"fr\", \"33\" ], [ \"French Guiana (Guyane française)\", \"gf\", \"594\" ], [ \"French Polynesia (Polynésie française)\", \"pf\", \"689\" ], [ \"Gabon\", \"ga\", \"241\" ], [ \"Gambia\", \"gm\", \"220\" ], [ \"Georgia (საქართველო)\", \"ge\", \"995\" ], [ \"Germany (Deutschland)\", \"de\", \"49\" ], [ \"Ghana (Gaana)\", \"gh\", \"233\" ], [ \"Gibraltar\", \"gi\", \"350\" ], [ \"Greece (Ελλάδα)\", \"gr\", \"30\" ], [ \"Greenland (Kalaallit Nunaat)\", \"gl\", \"299\" ], [ \"Grenada\", \"gd\", \"1\", 14, [ \"473\" ] ], [ \"Guadeloupe\", \"gp\", \"590\", 0 ], [ \"Guam\", \"gu\", \"1\", 15, [ \"671\" ] ], [ \"Guatemala\", \"gt\", \"502\" ], [ \"Guernsey\", \"gg\", \"44\", 1, [ \"1481\", \"7781\", \"7839\", \"7911\" ] ], [ \"Guinea (Guinée)\", \"gn\", \"224\" ], [ \"Guinea-Bissau (Guiné Bissau)\", \"gw\", \"245\" ], [ \"Guyana\", \"gy\", \"592\" ], [ \"Haiti\", \"ht\", \"509\" ], [ \"Honduras\", \"hn\", \"504\" ], [ \"Hong Kong (香港)\", \"hk\", \"852\" ], [ \"Hungary (Magyarország)\", \"hu\", \"36\" ], [ \"Iceland (Ísland)\", \"is\", \"354\" ], [ \"India (भारत)\", \"in\", \"91\" ], [ \"Indonesia\", \"id\", \"62\" ], [ \"Iran (‫ایران‬‎)\", \"ir\", \"98\" ], [ \"Iraq (‫العراق‬‎)\", \"iq\", \"964\" ], [ \"Ireland\", \"ie\", \"353\" ], [ \"Isle of Man\", \"im\", \"44\", 2, [ \"1624\", \"74576\", \"7524\", \"7924\", \"7624\" ] ], [ \"Israel (‫ישראל‬‎)\", \"il\", \"972\" ], [ \"Italy (Italia)\", \"it\", \"39\", 0 ], [ \"Jamaica\", \"jm\", \"1\", 4, [ \"876\", \"658\" ] ], [ \"Japan (日本)\", \"jp\", \"81\" ], [ \"Jersey\", \"je\", \"44\", 3, [ \"1534\", \"7509\", \"7700\", \"7797\", \"7829\", \"7937\" ] ], [ \"Jordan (‫الأردن‬‎)\", \"jo\", \"962\" ], [ \"Kazakhstan (Казахстан)\", \"kz\", \"7\", 1, [ \"33\", \"7\" ] ], [ \"Kenya\", \"ke\", \"254\" ], [ \"Kiribati\", \"ki\", \"686\" ], [ \"Kosovo\", \"xk\", \"383\" ], [ \"Kuwait (‫الكويت‬‎)\", \"kw\", \"965\" ], [ \"Kyrgyzstan (Кыргызстан)\", \"kg\", \"996\" ], [ \"Laos (ລາວ)\", \"la\", \"856\" ], [ \"Latvia (Latvija)\", \"lv\", \"371\" ], [ \"Lebanon (‫لبنان‬‎)\", \"lb\", \"961\" ], [ \"Lesotho\", \"ls\", \"266\" ], [ \"Liberia\", \"lr\", \"231\" ], [ \"Libya (‫ليبيا‬‎)\", \"ly\", \"218\" ], [ \"Liechtenstein\", \"li\", \"423\" ], [ \"Lithuania (Lietuva)\", \"lt\", \"370\" ], [ \"Luxembourg\", \"lu\", \"352\" ], [ \"Macau (澳門)\", \"mo\", \"853\" ], [ \"Macedonia (FYROM) (Македонија)\", \"mk\", \"389\" ], [ \"Madagascar (Madagasikara)\", \"mg\", \"261\" ], [ \"Malawi\", \"mw\", \"265\" ], [ \"Malaysia\", \"my\", \"60\" ], [ \"Maldives\", \"mv\", \"960\" ], [ \"Mali\", \"ml\", \"223\" ], [ \"Malta\", \"mt\", \"356\" ], [ \"Marshall Islands\", \"mh\", \"692\" ], [ \"Martinique\", \"mq\", \"596\" ], [ \"Mauritania (‫موريتانيا‬‎)\", \"mr\", \"222\" ], [ \"Mauritius (Moris)\", \"mu\", \"230\" ], [ \"Mayotte\", \"yt\", \"262\", 1, [ \"269\", \"639\" ] ], [ \"Mexico (México)\", \"mx\", \"52\" ], [ \"Micronesia\", \"fm\", \"691\" ], [ \"Moldova (Republica Moldova)\", \"md\", \"373\" ], [ \"Monaco\", \"mc\", \"377\" ], [ \"Mongolia (Монгол)\", \"mn\", \"976\" ], [ \"Montenegro (Crna Gora)\", \"me\", \"382\" ], [ \"Montserrat\", \"ms\", \"1\", 16, [ \"664\" ] ], [ \"Morocco (‫المغرب‬‎)\", \"ma\", \"212\", 0 ], [ \"Mozambique (Moçambique)\", \"mz\", \"258\" ], [ \"Myanmar (Burma) (မြန်မာ)\", \"mm\", \"95\" ], [ \"Namibia (Namibië)\", \"na\", \"264\" ], [ \"Nauru\", \"nr\", \"674\" ], [ \"Nepal (नेपाल)\", \"np\", \"977\" ], [ \"Netherlands (Nederland)\", \"nl\", \"31\" ], [ \"New Caledonia (Nouvelle-Calédonie)\", \"nc\", \"687\" ], [ \"New Zealand\", \"nz\", \"64\" ], [ \"Nicaragua\", \"ni\", \"505\" ], [ \"Niger (Nijar)\", \"ne\", \"227\" ], [ \"Nigeria\", \"ng\", \"234\" ], [ \"Niue\", \"nu\", \"683\" ], [ \"Norfolk Island\", \"nf\", \"672\" ], [ \"North Korea (조선 민주주의 인민 공화국)\", \"kp\", \"850\" ], [ \"Northern Mariana Islands\", \"mp\", \"1\", 17, [ \"670\" ] ], [ \"Norway (Norge)\", \"no\", \"47\", 0 ], [ \"Oman (‫عُمان‬‎)\", \"om\", \"968\" ], [ \"Pakistan (‫پاکستان‬‎)\", \"pk\", \"92\" ], [ \"Palau\", \"pw\", \"680\" ], [ \"Palestine (‫فلسطين‬‎)\", \"ps\", \"970\" ], [ \"Panama (Panamá)\", \"pa\", \"507\" ], [ \"Papua New Guinea\", \"pg\", \"675\" ], [ \"Paraguay\", \"py\", \"595\" ], [ \"Peru (Perú)\", \"pe\", \"51\" ], [ \"Philippines\", \"ph\", \"63\" ], [ \"Poland (Polska)\", \"pl\", \"48\" ], [ \"Portugal\", \"pt\", \"351\" ], [ \"Puerto Rico\", \"pr\", \"1\", 3, [ \"787\", \"939\" ] ], [ \"Qatar (‫قطر‬‎)\", \"qa\", \"974\" ], [ \"Réunion (La Réunion)\", \"re\", \"262\", 0 ], [ \"Romania (România)\", \"ro\", \"40\" ], [ \"Russia (Россия)\", \"ru\", \"7\", 0 ], [ \"Rwanda\", \"rw\", \"250\" ], [ \"Saint Barthélemy\", \"bl\", \"590\", 1 ], [ \"Saint Helena\", \"sh\", \"290\" ], [ \"Saint Kitts and Nevis\", \"kn\", \"1\", 18, [ \"869\" ] ], [ \"Saint Lucia\", \"lc\", \"1\", 19, [ \"758\" ] ], [ \"Saint Martin (Saint-Martin (partie française))\", \"mf\", \"590\", 2 ], [ \"Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)\", \"pm\", \"508\" ], [ \"Saint Vincent and the Grenadines\", \"vc\", \"1\", 20, [ \"784\" ] ], [ \"Samoa\", \"ws\", \"685\" ], [ \"San Marino\", \"sm\", \"378\" ], [ \"São Tomé and Príncipe (São Tomé e Príncipe)\", \"st\", \"239\" ], [ \"Saudi Arabia (‫المملكة العربية السعودية‬‎)\", \"sa\", \"966\" ], [ \"Senegal (Sénégal)\", \"sn\", \"221\" ], [ \"Serbia (Србија)\", \"rs\", \"381\" ], [ \"Seychelles\", \"sc\", \"248\" ], [ \"Sierra Leone\", \"sl\", \"232\" ], [ \"Singapore\", \"sg\", \"65\" ], [ \"Sint Maarten\", \"sx\", \"1\", 21, [ \"721\" ] ], [ \"Slovakia (Slovensko)\", \"sk\", \"421\" ], [ \"Slovenia (Slovenija)\", \"si\", \"386\" ], [ \"Solomon Islands\", \"sb\", \"677\" ], [ \"Somalia (Soomaaliya)\", \"so\", \"252\" ], [ \"South Africa\", \"za\", \"27\" ], [ \"South Korea (대한민국)\", \"kr\", \"82\" ], [ \"South Sudan (‫جنوب السودان‬‎)\", \"ss\", \"211\" ], [ \"Spain (España)\", \"es\", \"34\" ], [ \"Sri Lanka (ශ්‍රී ලංකාව)\", \"lk\", \"94\" ], [ \"Sudan (‫السودان‬‎)\", \"sd\", \"249\" ], [ \"Suriname\", \"sr\", \"597\" ], [ \"Svalbard and Jan Mayen\", \"sj\", \"47\", 1, [ \"79\" ] ], [ \"Swaziland\", \"sz\", \"268\" ], [ \"Sweden (Sverige)\", \"se\", \"46\" ], [ \"Switzerland (Schweiz)\", \"ch\", \"41\" ], [ \"Syria (‫سوريا‬‎)\", \"sy\", \"963\" ], [ \"Taiwan (台灣)\", \"tw\", \"886\" ], [ \"Tajikistan\", \"tj\", \"992\" ], [ \"Tanzania\", \"tz\", \"255\" ], [ \"Thailand (ไทย)\", \"th\", \"66\" ], [ \"Timor-Leste\", \"tl\", \"670\" ], [ \"Togo\", \"tg\", \"228\" ], [ \"Tokelau\", \"tk\", \"690\" ], [ \"Tonga\", \"to\", \"676\" ], [ \"Trinidad and Tobago\", \"tt\", \"1\", 22, [ \"868\" ] ], [ \"Tunisia (‫تونس‬‎)\", \"tn\", \"216\" ], [ \"Turkey (Türkiye)\", \"tr\", \"90\" ], [ \"Turkmenistan\", \"tm\", \"993\" ], [ \"Turks and Caicos Islands\", \"tc\", \"1\", 23, [ \"649\" ] ], [ \"Tuvalu\", \"tv\", \"688\" ], [ \"U.S. Virgin Islands\", \"vi\", \"1\", 24, [ \"340\" ] ], [ \"Uganda\", \"ug\", \"256\" ], [ \"Ukraine (Україна)\", \"ua\", \"380\" ], [ \"United Arab Emirates (‫الإمارات العربية المتحدة‬‎)\", \"ae\", \"971\" ], [ \"United Kingdom\", \"gb\", \"44\", 0 ], [ \"United States\", \"us\", \"1\", 0 ], [ \"Uruguay\", \"uy\", \"598\" ], [ \"Uzbekistan (Oʻzbekiston)\", \"uz\", \"998\" ], [ \"Vanuatu\", \"vu\", \"678\" ], [ \"Vatican City (Città del Vaticano)\", \"va\", \"39\", 1, [ \"06698\" ] ], [ \"Venezuela\", \"ve\", \"58\" ], [ \"Vietnam (Việt Nam)\", \"vn\", \"84\" ], [ \"Wallis and Futuna (Wallis-et-Futuna)\", \"wf\", \"681\" ], [ \"Western Sahara (‫الصحراء الغربية‬‎)\", \"eh\", \"212\", 1, [ \"5288\", \"5289\" ] ], [ \"Yemen (‫اليمن‬‎)\", \"ye\", \"967\" ], [ \"Zambia\", \"zm\", \"260\" ], [ \"Zimbabwe\", \"zw\", \"263\" ], [ \"Åland Islands\", \"ax\", \"358\", 1, [ \"18\" ] ] ];\n        // loop over all of the countries above, restructuring the data to be objects with named keys\n        for (var i = 0; i < allCountries.length; i++) {\n            var c = allCountries[i];\n            allCountries[i] = {\n                name: c[0],\n                iso2: c[1],\n                dialCode: c[2],\n                priority: c[3] || 0,\n                areaCodes: c[4] || null\n            };\n        }\n        \"use strict\";\n        function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n                throw new TypeError(\"Cannot call a class as a function\");\n            }\n        }\n        function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n                var descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n                if (\"value\" in descriptor) descriptor.writable = true;\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n        function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            return Constructor;\n        }\n        window.intlTelInputGlobals = {\n            getInstance: function getInstance(input) {\n                var id = input.getAttribute(\"data-intl-tel-input-id\");\n                return window.intlTelInputGlobals.instances[id];\n            },\n            instances: {}\n        };\n        // these vars persist through all instances of the plugin\n        var id = 0;\n        var defaults = {\n            // whether or not to allow the dropdown\n            allowDropdown: true,\n            // if there is just a dial code in the input: remove it on blur\n            autoHideDialCode: true,\n            // add a placeholder in the input with an example number for the selected country\n            autoPlaceholder: \"polite\",\n            // modify the parentClass\n            customContainer: \"\",\n            // modify the auto placeholder\n            customPlaceholder: null,\n            // append menu to specified element\n            dropdownContainer: null,\n            // don't display these countries\n            excludeCountries: [],\n            // format the input value during initialisation and on setNumber\n            formatOnDisplay: true,\n            // geoIp lookup function\n            geoIpLookup: null,\n            // inject a hidden input with this name, and on submit, populate it with the result of getNumber\n            hiddenInput: \"\",\n            // initial country\n            initialCountry: \"\",\n            // localized country names e.g. { 'de': 'Deutschland' }\n            localizedCountries: null,\n            // don't insert international dial codes\n            nationalMode: true,\n            // display only these countries\n            onlyCountries: [],\n            // number type to use for placeholders\n            placeholderNumberType: \"MOBILE\",\n            // the countries at the top of the list. defaults to united states and united kingdom\n            preferredCountries: [ \"us\", \"gb\" ],\n            // display the country dial code next to the selected flag so it's not part of the typed number\n            separateDialCode: false,\n            // specify the path to the libphonenumber script to enable validation/formatting\n            utilsScript: \"\"\n        };\n        // https://en.wikipedia.org/wiki/List_of_North_American_Numbering_Plan_area_codes#Non-geographic_area_codes\n        var regionlessNanpNumbers = [ \"800\", \"822\", \"833\", \"844\", \"855\", \"866\", \"877\", \"880\", \"881\", \"882\", \"883\", \"884\", \"885\", \"886\", \"887\", \"888\", \"889\" ];\n        // keep track of if the window.load event has fired as impossible to check after the fact\n        window.addEventListener(\"load\", function() {\n            // UPDATE: use a public static field so we can fudge it in the tests\n            window.intlTelInputGlobals.windowLoaded = true;\n        });\n        // utility function to iterate over an object. can't use Object.entries or native forEach because\n        // of IE11\n        var forEachProp = function forEachProp(obj, callback) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                callback(keys[i], obj[keys[i]]);\n            }\n        };\n        // run a method on each instance of the plugin\n        var forEachInstance = function forEachInstance(method) {\n            forEachProp(window.intlTelInputGlobals.instances, function(key) {\n                window.intlTelInputGlobals.instances[key][method]();\n            });\n        };\n        // this is our plugin class that we will create an instance of\n        // eslint-disable-next-line no-unused-vars\n        var Iti = /*#__PURE__*/\n        function() {\n            function Iti(input, options) {\n                var _this = this;\n                _classCallCheck(this, Iti);\n                this.id = id++;\n                this.telInput = input;\n                this.activeItem = null;\n                this.highlightedItem = null;\n                // process specified options / defaults\n                // alternative to Object.assign, which isn't supported by IE11\n                var customOptions = options || {};\n                this.options = {};\n                forEachProp(defaults, function(key, value) {\n                    _this.options[key] = customOptions.hasOwnProperty(key) ? customOptions[key] : value;\n                });\n                this.hadInitialPlaceholder = Boolean(input.getAttribute(\"placeholder\"));\n            }\n            _createClass(Iti, [ {\n                key: \"_init\",\n                value: function _init() {\n                    var _this2 = this;\n                    // if in nationalMode, disable options relating to dial codes\n                    if (this.options.nationalMode) this.options.autoHideDialCode = false;\n                    // if separateDialCode then doesn't make sense to A) insert dial code into input\n                    // (autoHideDialCode), and B) display national numbers (because we're displaying the country\n                    // dial code next to them)\n                    if (this.options.separateDialCode) {\n                        this.options.autoHideDialCode = this.options.nationalMode = false;\n                    }\n                    // we cannot just test screen size as some smartphones/website meta tags will report desktop\n                    // resolutions\n                    // Note: for some reason jasmine breaks if you put this in the main Plugin function with the\n                    // rest of these declarations\n                    // Note: to target Android Mobiles (and not Tablets), we must find 'Android' and 'Mobile'\n                    this.isMobile = /Android.+Mobile|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n                    if (this.isMobile) {\n                        // trigger the mobile dropdown css\n                        document.body.classList.add(\"iti-mobile\");\n                        // on mobile, we want a full screen dropdown, so we must append it to the body\n                        if (!this.options.dropdownContainer) this.options.dropdownContainer = document.body;\n                    }\n                    // these promises get resolved when their individual requests complete\n                    // this way the dev can do something like iti.promise.then(...) to know when all requests are\n                    // complete\n                    if (typeof Promise !== \"undefined\") {\n                        var autoCountryPromise = new Promise(function(resolve, reject) {\n                            _this2.resolveAutoCountryPromise = resolve;\n                            _this2.rejectAutoCountryPromise = reject;\n                        });\n                        var utilsScriptPromise = new Promise(function(resolve, reject) {\n                            _this2.resolveUtilsScriptPromise = resolve;\n                            _this2.rejectUtilsScriptPromise = reject;\n                        });\n                        this.promise = Promise.all([ autoCountryPromise, utilsScriptPromise ]);\n                    } else {\n                        // prevent errors when Promise doesn't exist\n                        this.resolveAutoCountryPromise = this.rejectAutoCountryPromise = function() {};\n                        this.resolveUtilsScriptPromise = this.rejectUtilsScriptPromise = function() {};\n                    }\n                    // in various situations there could be no country selected initially, but we need to be able\n                    // to assume this variable exists\n                    this.selectedCountryData = {};\n                    // process all the data: onlyCountries, excludeCountries, preferredCountries etc\n                    this._processCountryData();\n                    // generate the markup\n                    this._generateMarkup();\n                    // set the initial state of the input value and the selected flag\n                    this._setInitialState();\n                    // start all of the event listeners: autoHideDialCode, input keydown, selectedFlag click\n                    this._initListeners();\n                    // utils script, and auto country\n                    this._initRequests();\n                }\n            }, {\n                key: \"_processCountryData\",\n                value: function _processCountryData() {\n                    // process onlyCountries or excludeCountries array if present\n                    this._processAllCountries();\n                    // process the countryCodes map\n                    this._processCountryCodes();\n                    // process the preferredCountries\n                    this._processPreferredCountries();\n                    // translate countries according to localizedCountries option\n                    if (this.options.localizedCountries) this._translateCountriesByLocale();\n                    // sort countries by name\n                    if (this.options.onlyCountries.length || this.options.localizedCountries) {\n                        this.countries.sort(this._countryNameSort);\n                    }\n                }\n            }, {\n                key: \"_addCountryCode\",\n                value: function _addCountryCode(iso2, dialCode, priority) {\n                    if (dialCode.length > this.dialCodeMaxLen) {\n                        this.dialCodeMaxLen = dialCode.length;\n                    }\n                    if (!this.countryCodes.hasOwnProperty(dialCode)) {\n                        this.countryCodes[dialCode] = [];\n                    }\n                    // bail if we already have this country for this dialCode\n                    for (var i = 0; i < this.countryCodes[dialCode].length; i++) {\n                        if (this.countryCodes[dialCode][i] === iso2) return;\n                    }\n                    // check for undefined as 0 is falsy\n                    var index = priority !== undefined ? priority : this.countryCodes[dialCode].length;\n                    this.countryCodes[dialCode][index] = iso2;\n                }\n            }, {\n                key: \"_processAllCountries\",\n                value: function _processAllCountries() {\n                    if (this.options.onlyCountries.length) {\n                        var lowerCaseOnlyCountries = this.options.onlyCountries.map(function(country) {\n                            return country.toLowerCase();\n                        });\n                        this.countries = allCountries.filter(function(country) {\n                            return lowerCaseOnlyCountries.indexOf(country.iso2) > -1;\n                        });\n                    } else if (this.options.excludeCountries.length) {\n                        var lowerCaseExcludeCountries = this.options.excludeCountries.map(function(country) {\n                            return country.toLowerCase();\n                        });\n                        this.countries = allCountries.filter(function(country) {\n                            return lowerCaseExcludeCountries.indexOf(country.iso2) === -1;\n                        });\n                    } else {\n                        this.countries = allCountries;\n                    }\n                }\n            }, {\n                key: \"_translateCountriesByLocale\",\n                value: function _translateCountriesByLocale() {\n                    for (var i = 0; i < this.countries.length; i++) {\n                        var iso = this.countries[i].iso2.toLowerCase();\n                        if (this.options.localizedCountries.hasOwnProperty(iso)) {\n                            this.countries[i].name = this.options.localizedCountries[iso];\n                        }\n                    }\n                }\n            }, {\n                key: \"_countryNameSort\",\n                value: function _countryNameSort(a, b) {\n                    return a.name.localeCompare(b.name);\n                }\n            }, {\n                key: \"_processCountryCodes\",\n                value: function _processCountryCodes() {\n                    this.dialCodeMaxLen = 0;\n                    this.countryCodes = {};\n                    // first: add dial codes\n                    for (var i = 0; i < this.countries.length; i++) {\n                        var c = this.countries[i];\n                        this._addCountryCode(c.iso2, c.dialCode, c.priority);\n                    }\n                    // next: add area codes\n                    // this is a second loop over countries, to make sure we have all of the \"root\" countries\n                    // already in the map, so that we can access them, as each time we add an area code substring\n                    // to the map, we also need to include the \"root\" country's code, as that also matches\n                    for (var _i = 0; _i < this.countries.length; _i++) {\n                        var _c = this.countries[_i];\n                        // area codes\n                        if (_c.areaCodes) {\n                            var rootCountryCode = this.countryCodes[_c.dialCode][0];\n                            // for each area code\n                            for (var j = 0; j < _c.areaCodes.length; j++) {\n                                var areaCode = _c.areaCodes[j];\n                                // for each digit in the area code to add all partial matches as well\n                                for (var k = 1; k < areaCode.length; k++) {\n                                    var partialDialCode = _c.dialCode + areaCode.substr(0, k);\n                                    // start with the root country, as that also matches this dial code\n                                    this._addCountryCode(rootCountryCode, partialDialCode);\n                                    this._addCountryCode(_c.iso2, partialDialCode);\n                                }\n                                // add the full area code\n                                this._addCountryCode(_c.iso2, _c.dialCode + areaCode);\n                            }\n                        }\n                    }\n                }\n            }, {\n                key: \"_processPreferredCountries\",\n                value: function _processPreferredCountries() {\n                    this.preferredCountries = [];\n                    for (var i = 0; i < this.options.preferredCountries.length; i++) {\n                        var countryCode = this.options.preferredCountries[i].toLowerCase();\n                        var countryData = this._getCountryData(countryCode, false, true);\n                        if (countryData) this.preferredCountries.push(countryData);\n                    }\n                }\n            }, {\n                key: \"_createEl\",\n                value: function _createEl(name, attrs, container) {\n                    var el = document.createElement(name);\n                    if (attrs) forEachProp(attrs, function(key, value) {\n                        return el.setAttribute(key, value);\n                    });\n                    if (container) container.appendChild(el);\n                    return el;\n                }\n            }, {\n                key: \"_generateMarkup\",\n                value: function _generateMarkup() {\n                    // prevent autocomplete as there's no safe, cross-browser event we can react to, so it can\n                    // easily put the plugin in an inconsistent state e.g. the wrong flag selected for the\n                    // autocompleted number, which on submit could mean wrong number is saved (esp in nationalMode)\n                    this.telInput.setAttribute(\"autocomplete\", \"off\");\n                    // containers (mostly for positioning)\n                    var parentClass = \"iti\";\n                    if (this.options.allowDropdown) parentClass += \" iti--allow-dropdown\";\n                    if (this.options.separateDialCode) parentClass += \" iti--separate-dial-code\";\n                    if (this.options.customContainer) {\n                        parentClass += \" \";\n                        parentClass += this.options.customContainer;\n                    }\n                    var wrapper = this._createEl(\"div\", {\n                        \"class\": parentClass\n                    });\n                    this.telInput.parentNode.insertBefore(wrapper, this.telInput);\n                    this.flagsContainer = this._createEl(\"div\", {\n                        \"class\": \"iti__flag-container\"\n                    }, wrapper);\n                    wrapper.appendChild(this.telInput);\n                    // selected flag (displayed to left of input)\n                    this.selectedFlag = this._createEl(\"div\", {\n                        \"class\": \"iti__selected-flag\",\n                        role: \"combobox\",\n                        \"aria-owns\": \"country-listbox\"\n                    }, this.flagsContainer);\n                    this.selectedFlagInner = this._createEl(\"div\", {\n                        \"class\": \"iti__flag\"\n                    }, this.selectedFlag);\n                    if (this.options.separateDialCode) {\n                        this.selectedDialCode = this._createEl(\"div\", {\n                            \"class\": \"iti__selected-dial-code\"\n                        }, this.selectedFlag);\n                    }\n                    if (this.options.allowDropdown) {\n                        // make element focusable and tab navigable\n                        this.selectedFlag.setAttribute(\"tabindex\", \"0\");\n                        this.dropdownArrow = this._createEl(\"div\", {\n                            \"class\": \"iti__arrow\"\n                        }, this.selectedFlag);\n                        // country dropdown: preferred countries, then divider, then all countries\n                        this.countryList = this._createEl(\"ul\", {\n                            \"class\": \"iti__country-list iti__hide\",\n                            id: \"country-listbox\",\n                            \"aria-expanded\": \"false\",\n                            role: \"listbox\"\n                        });\n                        if (this.preferredCountries.length) {\n                            this._appendListItems(this.preferredCountries, \"iti__preferred\");\n                            this._createEl(\"li\", {\n                                \"class\": \"iti__divider\",\n                                role: \"separator\",\n                                \"aria-disabled\": \"true\"\n                            }, this.countryList);\n                        }\n                        this._appendListItems(this.countries, \"iti__standard\");\n                        // create dropdownContainer markup\n                        if (this.options.dropdownContainer) {\n                            this.dropdown = this._createEl(\"div\", {\n                                \"class\": \"iti iti--container\"\n                            });\n                            this.dropdown.appendChild(this.countryList);\n                        } else {\n                            this.flagsContainer.appendChild(this.countryList);\n                        }\n                    }\n                    if (this.options.hiddenInput) {\n                        var hiddenInputName = this.options.hiddenInput;\n                        var name = this.telInput.getAttribute(\"name\");\n                        if (name) {\n                            var i = name.lastIndexOf(\"[\");\n                            // if input name contains square brackets, then give the hidden input the same name,\n                            // replacing the contents of the last set of brackets with the given hiddenInput name\n                            if (i !== -1) hiddenInputName = \"\".concat(name.substr(0, i), \"[\").concat(hiddenInputName, \"]\");\n                        }\n                        this.hiddenInput = this._createEl(\"input\", {\n                            type: \"hidden\",\n                            name: hiddenInputName\n                        });\n                        wrapper.appendChild(this.hiddenInput);\n                    }\n                }\n            }, {\n                key: \"_appendListItems\",\n                value: function _appendListItems(countries, className) {\n                    // we create so many DOM elements, it is faster to build a temp string\n                    // and then add everything to the DOM in one go at the end\n                    var tmp = \"\";\n                    // for each country\n                    for (var i = 0; i < countries.length; i++) {\n                        var c = countries[i];\n                        // open the list item\n                        tmp += \"<li class='iti__country \".concat(className, \"' tabIndex='-1' id='iti-item-\").concat(c.iso2, \"' role='option' data-dial-code='\").concat(c.dialCode, \"' data-country-code='\").concat(c.iso2, \"'>\");\n                        // add the flag\n                        tmp += \"<div class='iti__flag-box'><div class='iti__flag iti__\".concat(c.iso2, \"'></div></div>\");\n                        // and the country name and dial code\n                        tmp += \"<span class='iti__country-name'>\".concat(c.name, \"</span>\");\n                        tmp += \"<span class='iti__dial-code'>+\".concat(c.dialCode, \"</span>\");\n                        // close the list item\n                        tmp += \"</li>\";\n                    }\n                    this.countryList.insertAdjacentHTML(\"beforeend\", tmp);\n                }\n            }, {\n                key: \"_setInitialState\",\n                value: function _setInitialState() {\n                    var val = this.telInput.value;\n                    var dialCode = this._getDialCode(val);\n                    var isRegionlessNanp = this._isRegionlessNanp(val);\n                    var _this$options = this.options, initialCountry = _this$options.initialCountry, nationalMode = _this$options.nationalMode, autoHideDialCode = _this$options.autoHideDialCode, separateDialCode = _this$options.separateDialCode;\n                    // if we already have a dial code, and it's not a regionlessNanp, we can go ahead and set the\n                    // flag, else fall back to the default country\n                    if (dialCode && !isRegionlessNanp) {\n                        this._updateFlagFromNumber(val);\n                    } else if (initialCountry !== \"auto\") {\n                        // see if we should select a flag\n                        if (initialCountry) {\n                            this._setFlag(initialCountry.toLowerCase());\n                        } else {\n                            if (dialCode && isRegionlessNanp) {\n                                // has intl dial code, is regionless nanp, and no initialCountry, so default to US\n                                this._setFlag(\"us\");\n                            } else {\n                                // no dial code and no initialCountry, so default to first in list\n                                this.defaultCountry = this.preferredCountries.length ? this.preferredCountries[0].iso2 : this.countries[0].iso2;\n                                if (!val) {\n                                    this._setFlag(this.defaultCountry);\n                                }\n                            }\n                        }\n                        // if empty and no nationalMode and no autoHideDialCode then insert the default dial code\n                        if (!val && !nationalMode && !autoHideDialCode && !separateDialCode) {\n                            this.telInput.value = \"+\".concat(this.selectedCountryData.dialCode);\n                        }\n                    }\n                    // NOTE: if initialCountry is set to auto, that will be handled separately\n                    // format - note this wont be run after _updateDialCode as that's only called if no val\n                    if (val) this._updateValFromNumber(val);\n                }\n            }, {\n                key: \"_initListeners\",\n                value: function _initListeners() {\n                    this._initKeyListeners();\n                    if (this.options.autoHideDialCode) this._initBlurListeners();\n                    if (this.options.allowDropdown) this._initDropdownListeners();\n                    if (this.hiddenInput) this._initHiddenInputListener();\n                }\n            }, {\n                key: \"_initHiddenInputListener\",\n                value: function _initHiddenInputListener() {\n                    var _this3 = this;\n                    this._handleHiddenInputSubmit = function() {\n                        _this3.hiddenInput.value = _this3.getNumber();\n                    };\n                    if (this.telInput.form) this.telInput.form.addEventListener(\"submit\", this._handleHiddenInputSubmit);\n                }\n            }, {\n                key: \"_getClosestLabel\",\n                value: function _getClosestLabel() {\n                    var el = this.telInput;\n                    while (el && el.tagName !== \"LABEL\") {\n                        el = el.parentNode;\n                    }\n                    return el;\n                }\n            }, {\n                key: \"_initDropdownListeners\",\n                value: function _initDropdownListeners() {\n                    var _this4 = this;\n                    // hack for input nested inside label (which is valid markup): clicking the selected-flag to\n                    // open the dropdown would then automatically trigger a 2nd click on the input which would\n                    // close it again\n                    this._handleLabelClick = function(e) {\n                        // if the dropdown is closed, then focus the input, else ignore the click\n                        if (_this4.countryList.classList.contains(\"iti__hide\")) _this4.telInput.focus(); else e.preventDefault();\n                    };\n                    var label = this._getClosestLabel();\n                    if (label) label.addEventListener(\"click\", this._handleLabelClick);\n                    // toggle country dropdown on click\n                    this._handleClickSelectedFlag = function() {\n                        // only intercept this event if we're opening the dropdown\n                        // else let it bubble up to the top (\"click-off-to-close\" listener)\n                        // we cannot just stopPropagation as it may be needed to close another instance\n                        if (_this4.countryList.classList.contains(\"iti__hide\") && !_this4.telInput.disabled && !_this4.telInput.readOnly) {\n                            _this4._showDropdown();\n                        }\n                    };\n                    this.selectedFlag.addEventListener(\"click\", this._handleClickSelectedFlag);\n                    // open dropdown list if currently focused\n                    this._handleFlagsContainerKeydown = function(e) {\n                        var isDropdownHidden = _this4.countryList.classList.contains(\"iti__hide\");\n                        if (isDropdownHidden && [ \"ArrowUp\", \"Up\", \"ArrowDown\", \"Down\", \" \", \"Enter\" ].indexOf(e.key) !== -1) {\n                            // prevent form from being submitted if \"ENTER\" was pressed\n                            e.preventDefault();\n                            // prevent event from being handled again by document\n                            e.stopPropagation();\n                            _this4._showDropdown();\n                        }\n                        // allow navigation from dropdown to input on TAB\n                        if (e.key === \"Tab\") _this4._closeDropdown();\n                    };\n                    this.flagsContainer.addEventListener(\"keydown\", this._handleFlagsContainerKeydown);\n                }\n            }, {\n                key: \"_initRequests\",\n                value: function _initRequests() {\n                    var _this5 = this;\n                    // if the user has specified the path to the utils script, fetch it on window.load, else resolve\n                    if (this.options.utilsScript && !window.intlTelInputUtils) {\n                        // if the plugin is being initialised after the window.load event has already been fired\n                        if (window.intlTelInputGlobals.windowLoaded) {\n                            window.intlTelInputGlobals.loadUtils(this.options.utilsScript);\n                        } else {\n                            // wait until the load event so we don't block any other requests e.g. the flags image\n                            window.addEventListener(\"load\", function() {\n                                window.intlTelInputGlobals.loadUtils(_this5.options.utilsScript);\n                            });\n                        }\n                    } else this.resolveUtilsScriptPromise();\n                    if (this.options.initialCountry === \"auto\") this._loadAutoCountry(); else this.resolveAutoCountryPromise();\n                }\n            }, {\n                key: \"_loadAutoCountry\",\n                value: function _loadAutoCountry() {\n                    // 3 options:\n                    // 1) already loaded (we're done)\n                    // 2) not already started loading (start)\n                    // 3) already started loading (do nothing - just wait for loading callback to fire)\n                    if (window.intlTelInputGlobals.autoCountry) {\n                        this.handleAutoCountry();\n                    } else if (!window.intlTelInputGlobals.startedLoadingAutoCountry) {\n                        // don't do this twice!\n                        window.intlTelInputGlobals.startedLoadingAutoCountry = true;\n                        if (typeof this.options.geoIpLookup === \"function\") {\n                            this.options.geoIpLookup(function(countryCode) {\n                                window.intlTelInputGlobals.autoCountry = countryCode.toLowerCase();\n                                // tell all instances the auto country is ready\n                                // TODO: this should just be the current instances\n                                // UPDATE: use setTimeout in case their geoIpLookup function calls this callback straight\n                                // away (e.g. if they have already done the geo ip lookup somewhere else). Using\n                                // setTimeout means that the current thread of execution will finish before executing\n                                // this, which allows the plugin to finish initialising.\n                                setTimeout(function() {\n                                    return forEachInstance(\"handleAutoCountry\");\n                                });\n                            }, function() {\n                                return forEachInstance(\"rejectAutoCountryPromise\");\n                            });\n                        }\n                    }\n                }\n            }, {\n                key: \"_initKeyListeners\",\n                value: function _initKeyListeners() {\n                    var _this6 = this;\n                    // update flag on keyup\n                    this._handleKeyupEvent = function() {\n                        if (_this6._updateFlagFromNumber(_this6.telInput.value)) {\n                            _this6._triggerCountryChange();\n                        }\n                    };\n                    this.telInput.addEventListener(\"keyup\", this._handleKeyupEvent);\n                    // update flag on cut/paste events (now supported in all major browsers)\n                    this._handleClipboardEvent = function() {\n                        // hack because \"paste\" event is fired before input is updated\n                        setTimeout(_this6._handleKeyupEvent);\n                    };\n                    this.telInput.addEventListener(\"cut\", this._handleClipboardEvent);\n                    this.telInput.addEventListener(\"paste\", this._handleClipboardEvent);\n                }\n            }, {\n                key: \"_cap\",\n                value: function _cap(number) {\n                    var max = this.telInput.getAttribute(\"maxlength\");\n                    return max && number.length > max ? number.substr(0, max) : number;\n                }\n            }, {\n                key: \"_initBlurListeners\",\n                value: function _initBlurListeners() {\n                    var _this7 = this;\n                    // on blur or form submit: if just a dial code then remove it\n                    this._handleSubmitOrBlurEvent = function() {\n                        _this7._removeEmptyDialCode();\n                    };\n                    if (this.telInput.form) this.telInput.form.addEventListener(\"submit\", this._handleSubmitOrBlurEvent);\n                    this.telInput.addEventListener(\"blur\", this._handleSubmitOrBlurEvent);\n                }\n            }, {\n                key: \"_removeEmptyDialCode\",\n                value: function _removeEmptyDialCode() {\n                    if (this.telInput.value.charAt(0) === \"+\") {\n                        var numeric = this._getNumeric(this.telInput.value);\n                        // if just a plus, or if just a dial code\n                        if (!numeric || this.selectedCountryData.dialCode === numeric) {\n                            this.telInput.value = \"\";\n                        }\n                    }\n                }\n            }, {\n                key: \"_getNumeric\",\n                value: function _getNumeric(s) {\n                    return s.replace(/\\D/g, \"\");\n                }\n            }, {\n                key: \"_trigger\",\n                value: function _trigger(name) {\n                    // have to use old school document.createEvent as IE11 doesn't support `new Event()` syntax\n                    var e = document.createEvent(\"Event\");\n                    e.initEvent(name, true, true);\n                    // can bubble, and is cancellable\n                    this.telInput.dispatchEvent(e);\n                }\n            }, {\n                key: \"_showDropdown\",\n                value: function _showDropdown() {\n                    this.countryList.classList.remove(\"iti__hide\");\n                    this.countryList.setAttribute(\"aria-expanded\", \"true\");\n                    this._setDropdownPosition();\n                    // update highlighting and scroll to active list item\n                    if (this.activeItem) {\n                        this._highlightListItem(this.activeItem, false);\n                        this._scrollTo(this.activeItem, true);\n                    }\n                    // bind all the dropdown-related listeners: mouseover, click, click-off, keydown\n                    this._bindDropdownListeners();\n                    // update the arrow\n                    this.dropdownArrow.classList.add(\"iti__arrow--up\");\n                    this._trigger(\"open:countrydropdown\");\n                }\n            }, {\n                key: \"_toggleClass\",\n                value: function _toggleClass(el, className, shouldHaveClass) {\n                    if (shouldHaveClass && !el.classList.contains(className)) el.classList.add(className); else if (!shouldHaveClass && el.classList.contains(className)) el.classList.remove(className);\n                }\n            }, {\n                key: \"_setDropdownPosition\",\n                value: function _setDropdownPosition() {\n                    var _this8 = this;\n                    if (this.options.dropdownContainer) {\n                        this.options.dropdownContainer.appendChild(this.dropdown);\n                    }\n                    if (!this.isMobile) {\n                        var pos = this.telInput.getBoundingClientRect();\n                        // windowTop from https://stackoverflow.com/a/14384091/217866\n                        var windowTop = window.pageYOffset || document.documentElement.scrollTop;\n                        var inputTop = pos.top + windowTop;\n                        var dropdownHeight = this.countryList.offsetHeight;\n                        // dropdownFitsBelow = (dropdownBottom < windowBottom)\n                        var dropdownFitsBelow = inputTop + this.telInput.offsetHeight + dropdownHeight < windowTop + window.innerHeight;\n                        var dropdownFitsAbove = inputTop - dropdownHeight > windowTop;\n                        // by default, the dropdown will be below the input. If we want to position it above the\n                        // input, we add the dropup class.\n                        this._toggleClass(this.countryList, \"iti__country-list--dropup\", !dropdownFitsBelow && dropdownFitsAbove);\n                        // if dropdownContainer is enabled, calculate postion\n                        if (this.options.dropdownContainer) {\n                            // by default the dropdown will be directly over the input because it's not in the flow.\n                            // If we want to position it below, we need to add some extra top value.\n                            var extraTop = !dropdownFitsBelow && dropdownFitsAbove ? 0 : this.telInput.offsetHeight;\n                            // calculate placement\n                            this.dropdown.style.top = \"\".concat(inputTop + extraTop, \"px\");\n                            this.dropdown.style.left = \"\".concat(pos.left + document.body.scrollLeft, \"px\");\n                            // close menu on window scroll\n                            this._handleWindowScroll = function() {\n                                return _this8._closeDropdown();\n                            };\n                            window.addEventListener(\"scroll\", this._handleWindowScroll);\n                        }\n                    }\n                }\n            }, {\n                key: \"_getClosestListItem\",\n                value: function _getClosestListItem(target) {\n                    var el = target;\n                    while (el && el !== this.countryList && !el.classList.contains(\"iti__country\")) {\n                        el = el.parentNode;\n                    }\n                    // if we reached the countryList element, then return null\n                    return el === this.countryList ? null : el;\n                }\n            }, {\n                key: \"_bindDropdownListeners\",\n                value: function _bindDropdownListeners() {\n                    var _this9 = this;\n                    // when mouse over a list item, just highlight that one\n                    // we add the class \"highlight\", so if they hit \"enter\" we know which one to select\n                    this._handleMouseoverCountryList = function(e) {\n                        // handle event delegation, as we're listening for this event on the countryList\n                        var listItem = _this9._getClosestListItem(e.target);\n                        if (listItem) _this9._highlightListItem(listItem, false);\n                    };\n                    this.countryList.addEventListener(\"mouseover\", this._handleMouseoverCountryList);\n                    // listen for country selection\n                    this._handleClickCountryList = function(e) {\n                        var listItem = _this9._getClosestListItem(e.target);\n                        if (listItem) _this9._selectListItem(listItem);\n                    };\n                    this.countryList.addEventListener(\"click\", this._handleClickCountryList);\n                    // click off to close\n                    // (except when this initial opening click is bubbling up)\n                    // we cannot just stopPropagation as it may be needed to close another instance\n                    var isOpening = true;\n                    this._handleClickOffToClose = function() {\n                        if (!isOpening) _this9._closeDropdown();\n                        isOpening = false;\n                    };\n                    document.documentElement.addEventListener(\"click\", this._handleClickOffToClose);\n                    // listen for up/down scrolling, enter to select, or letters to jump to country name.\n                    // use keydown as keypress doesn't fire for non-char keys and we want to catch if they\n                    // just hit down and hold it to scroll down (no keyup event).\n                    // listen on the document because that's where key events are triggered if no input has focus\n                    var query = \"\";\n                    var queryTimer = null;\n                    this._handleKeydownOnDropdown = function(e) {\n                        // prevent down key from scrolling the whole page,\n                        // and enter key from submitting a form etc\n                        e.preventDefault();\n                        // up and down to navigate\n                        if (e.key === \"ArrowUp\" || e.key === \"Up\" || e.key === \"ArrowDown\" || e.key === \"Down\") _this9._handleUpDownKey(e.key); else if (e.key === \"Enter\") _this9._handleEnterKey(); else if (e.key === \"Escape\") _this9._closeDropdown(); else if (/^[a-zA-ZÀ-ÿ ]$/.test(e.key)) {\n                            // jump to countries that start with the query string\n                            if (queryTimer) clearTimeout(queryTimer);\n                            query += e.key.toLowerCase();\n                            _this9._searchForCountry(query);\n                            // if the timer hits 1 second, reset the query\n                            queryTimer = setTimeout(function() {\n                                query = \"\";\n                            }, 1e3);\n                        }\n                    };\n                    document.addEventListener(\"keydown\", this._handleKeydownOnDropdown);\n                }\n            }, {\n                key: \"_handleUpDownKey\",\n                value: function _handleUpDownKey(key) {\n                    var next = key === \"ArrowUp\" || key === \"Up\" ? this.highlightedItem.previousElementSibling : this.highlightedItem.nextElementSibling;\n                    if (next) {\n                        // skip the divider\n                        if (next.classList.contains(\"iti__divider\")) {\n                            next = key === \"ArrowUp\" || key === \"Up\" ? next.previousElementSibling : next.nextElementSibling;\n                        }\n                        this._highlightListItem(next, true);\n                    }\n                }\n            }, {\n                key: \"_handleEnterKey\",\n                value: function _handleEnterKey() {\n                    if (this.highlightedItem) this._selectListItem(this.highlightedItem);\n                }\n            }, {\n                key: \"_searchForCountry\",\n                value: function _searchForCountry(query) {\n                    for (var i = 0; i < this.countries.length; i++) {\n                        if (this._startsWith(this.countries[i].name, query)) {\n                            var listItem = this.countryList.querySelector(\"#iti-item-\".concat(this.countries[i].iso2));\n                            // update highlighting and scroll\n                            this._highlightListItem(listItem, false);\n                            this._scrollTo(listItem, true);\n                            break;\n                        }\n                    }\n                }\n            }, {\n                key: \"_startsWith\",\n                value: function _startsWith(a, b) {\n                    return a.substr(0, b.length).toLowerCase() === b;\n                }\n            }, {\n                key: \"_updateValFromNumber\",\n                value: function _updateValFromNumber(originalNumber) {\n                    var number = originalNumber;\n                    if (this.options.formatOnDisplay && window.intlTelInputUtils && this.selectedCountryData) {\n                        var useNational = !this.options.separateDialCode && (this.options.nationalMode || number.charAt(0) !== \"+\");\n                        var _intlTelInputUtils$nu = intlTelInputUtils.numberFormat, NATIONAL = _intlTelInputUtils$nu.NATIONAL, INTERNATIONAL = _intlTelInputUtils$nu.INTERNATIONAL;\n                        var format = useNational ? NATIONAL : INTERNATIONAL;\n                        number = intlTelInputUtils.formatNumber(number, this.selectedCountryData.iso2, format);\n                    }\n                    number = this._beforeSetNumber(number);\n                    this.telInput.value = number;\n                }\n            }, {\n                key: \"_updateFlagFromNumber\",\n                value: function _updateFlagFromNumber(originalNumber) {\n                    // if we're in nationalMode and we already have US/Canada selected, make sure the number starts\n                    // with a +1 so _getDialCode will be able to extract the area code\n                    // update: if we dont yet have selectedCountryData, but we're here (trying to update the flag\n                    // from the number), that means we're initialising the plugin with a number that already has a\n                    // dial code, so fine to ignore this bit\n                    var number = originalNumber;\n                    var selectedDialCode = this.selectedCountryData.dialCode;\n                    var isNanp = selectedDialCode === \"1\";\n                    if (number && this.options.nationalMode && isNanp && number.charAt(0) !== \"+\") {\n                        if (number.charAt(0) !== \"1\") number = \"1\".concat(number);\n                        number = \"+\".concat(number);\n                    }\n                    // update flag if user types area code for another country\n                    if (this.options.separateDialCode && selectedDialCode && number.charAt(0) !== \"+\") {\n                        number = \"+\".concat(selectedDialCode).concat(number);\n                    }\n                    // try and extract valid dial code from input\n                    var dialCode = this._getDialCode(number);\n                    var numeric = this._getNumeric(number);\n                    var countryCode = null;\n                    if (dialCode) {\n                        var countryCodes = this.countryCodes[this._getNumeric(dialCode)];\n                        // check if the right country is already selected. this should be false if the number is\n                        // longer than the matched dial code because in this case we need to make sure that if\n                        // there are multiple country matches, that the first one is selected (note: we could\n                        // just check that here, but it requires the same loop that we already have later)\n                        var alreadySelected = countryCodes.indexOf(this.selectedCountryData.iso2) !== -1 && numeric.length <= dialCode.length - 1;\n                        var isRegionlessNanpNumber = selectedDialCode === \"1\" && this._isRegionlessNanp(numeric);\n                        // only update the flag if:\n                        // A) NOT (we currently have a NANP flag selected, and the number is a regionlessNanp)\n                        // AND\n                        // B) the right country is not already selected\n                        if (!isRegionlessNanpNumber && !alreadySelected) {\n                            // if using onlyCountries option, countryCodes[0] may be empty, so we must find the first\n                            // non-empty index\n                            for (var j = 0; j < countryCodes.length; j++) {\n                                if (countryCodes[j]) {\n                                    countryCode = countryCodes[j];\n                                    break;\n                                }\n                            }\n                        }\n                    } else if (number.charAt(0) === \"+\" && numeric.length) {\n                        // invalid dial code, so empty\n                        // Note: use getNumeric here because the number has not been formatted yet, so could contain\n                        // bad chars\n                        countryCode = \"\";\n                    } else if (!number || number === \"+\") {\n                        // empty, or just a plus, so default\n                        countryCode = this.defaultCountry;\n                    }\n                    if (countryCode !== null) {\n                        return this._setFlag(countryCode);\n                    }\n                    return false;\n                }\n            }, {\n                key: \"_isRegionlessNanp\",\n                value: function _isRegionlessNanp(number) {\n                    var numeric = this._getNumeric(number);\n                    if (numeric.charAt(0) === \"1\") {\n                        var areaCode = numeric.substr(1, 3);\n                        return regionlessNanpNumbers.indexOf(areaCode) !== -1;\n                    }\n                    return false;\n                }\n            }, {\n                key: \"_highlightListItem\",\n                value: function _highlightListItem(listItem, shouldFocus) {\n                    var prevItem = this.highlightedItem;\n                    if (prevItem) prevItem.classList.remove(\"iti__highlight\");\n                    this.highlightedItem = listItem;\n                    this.highlightedItem.classList.add(\"iti__highlight\");\n                    if (shouldFocus) this.highlightedItem.focus();\n                }\n            }, {\n                key: \"_getCountryData\",\n                value: function _getCountryData(countryCode, ignoreOnlyCountriesOption, allowFail) {\n                    var countryList = ignoreOnlyCountriesOption ? allCountries : this.countries;\n                    for (var i = 0; i < countryList.length; i++) {\n                        if (countryList[i].iso2 === countryCode) {\n                            return countryList[i];\n                        }\n                    }\n                    if (allowFail) {\n                        return null;\n                    }\n                    throw new Error(\"No country data for '\".concat(countryCode, \"'\"));\n                }\n            }, {\n                key: \"_setFlag\",\n                value: function _setFlag(countryCode) {\n                    var prevCountry = this.selectedCountryData.iso2 ? this.selectedCountryData : {};\n                    // do this first as it will throw an error and stop if countryCode is invalid\n                    this.selectedCountryData = countryCode ? this._getCountryData(countryCode, false, false) : {};\n                    // update the defaultCountry - we only need the iso2 from now on, so just store that\n                    if (this.selectedCountryData.iso2) {\n                        this.defaultCountry = this.selectedCountryData.iso2;\n                    }\n                    this.selectedFlagInner.setAttribute(\"class\", \"iti__flag iti__\".concat(countryCode));\n                    // update the selected country's title attribute\n                    var title = countryCode ? \"\".concat(this.selectedCountryData.name, \": +\").concat(this.selectedCountryData.dialCode) : \"Unknown\";\n                    this.selectedFlag.setAttribute(\"title\", title);\n                    if (this.options.separateDialCode) {\n                        var dialCode = this.selectedCountryData.dialCode ? \"+\".concat(this.selectedCountryData.dialCode) : \"\";\n                        this.selectedDialCode.innerHTML = dialCode;\n                        // offsetWidth is zero if input is in a hidden container during initialisation\n                        var selectedFlagWidth = this.selectedFlag.offsetWidth || this._getHiddenSelectedFlagWidth();\n                        // add 6px of padding after the grey selected-dial-code box, as this is what we use in the css\n                        this.telInput.style.paddingLeft = \"\".concat(selectedFlagWidth + 6, \"px\");\n                    }\n                    // and the input's placeholder\n                    this._updatePlaceholder();\n                    // update the active list item\n                    if (this.options.allowDropdown) {\n                        var prevItem = this.activeItem;\n                        if (prevItem) {\n                            prevItem.classList.remove(\"iti__active\");\n                            prevItem.setAttribute(\"aria-selected\", \"false\");\n                        }\n                        if (countryCode) {\n                            var nextItem = this.countryList.querySelector(\"#iti-item-\".concat(countryCode));\n                            nextItem.setAttribute(\"aria-selected\", \"true\");\n                            nextItem.classList.add(\"iti__active\");\n                            this.activeItem = nextItem;\n                            this.countryList.setAttribute(\"aria-activedescendant\", nextItem.getAttribute(\"id\"));\n                        }\n                    }\n                    // return if the flag has changed or not\n                    return prevCountry.iso2 !== countryCode;\n                }\n            }, {\n                key: \"_getHiddenSelectedFlagWidth\",\n                value: function _getHiddenSelectedFlagWidth() {\n                    // to get the right styling to apply, all we need is a shallow clone of the container,\n                    // and then to inject a deep clone of the selectedFlag element\n                    var containerClone = this.telInput.parentNode.cloneNode();\n                    containerClone.style.visibility = \"hidden\";\n                    document.body.appendChild(containerClone);\n                    var selectedFlagClone = this.selectedFlag.cloneNode(true);\n                    containerClone.appendChild(selectedFlagClone);\n                    var width = selectedFlagClone.offsetWidth;\n                    containerClone.parentNode.removeChild(containerClone);\n                    return width;\n                }\n            }, {\n                key: \"_updatePlaceholder\",\n                value: function _updatePlaceholder() {\n                    var shouldSetPlaceholder = this.options.autoPlaceholder === \"aggressive\" || !this.hadInitialPlaceholder && this.options.autoPlaceholder === \"polite\";\n                    if (window.intlTelInputUtils && shouldSetPlaceholder) {\n                        var numberType = intlTelInputUtils.numberType[this.options.placeholderNumberType];\n                        var placeholder = this.selectedCountryData.iso2 ? intlTelInputUtils.getExampleNumber(this.selectedCountryData.iso2, this.options.nationalMode, numberType) : \"\";\n                        placeholder = this._beforeSetNumber(placeholder);\n                        if (typeof this.options.customPlaceholder === \"function\") {\n                            placeholder = this.options.customPlaceholder(placeholder, this.selectedCountryData);\n                        }\n                        this.telInput.setAttribute(\"placeholder\", placeholder);\n                    }\n                }\n            }, {\n                key: \"_selectListItem\",\n                value: function _selectListItem(listItem) {\n                    // update selected flag and active list item\n                    var flagChanged = this._setFlag(listItem.getAttribute(\"data-country-code\"));\n                    this._closeDropdown();\n                    this._updateDialCode(listItem.getAttribute(\"data-dial-code\"), true);\n                    // focus the input\n                    this.telInput.focus();\n                    // put cursor at end - this fix is required for FF and IE11 (with nationalMode=false i.e. auto\n                    // inserting dial code), who try to put the cursor at the beginning the first time\n                    var len = this.telInput.value.length;\n                    this.telInput.setSelectionRange(len, len);\n                    if (flagChanged) {\n                        this._triggerCountryChange();\n                    }\n                }\n            }, {\n                key: \"_closeDropdown\",\n                value: function _closeDropdown() {\n                    this.countryList.classList.add(\"iti__hide\");\n                    this.countryList.setAttribute(\"aria-expanded\", \"false\");\n                    // update the arrow\n                    this.dropdownArrow.classList.remove(\"iti__arrow--up\");\n                    // unbind key events\n                    document.removeEventListener(\"keydown\", this._handleKeydownOnDropdown);\n                    document.documentElement.removeEventListener(\"click\", this._handleClickOffToClose);\n                    this.countryList.removeEventListener(\"mouseover\", this._handleMouseoverCountryList);\n                    this.countryList.removeEventListener(\"click\", this._handleClickCountryList);\n                    // remove menu from container\n                    if (this.options.dropdownContainer) {\n                        if (!this.isMobile) window.removeEventListener(\"scroll\", this._handleWindowScroll);\n                        if (this.dropdown.parentNode) this.dropdown.parentNode.removeChild(this.dropdown);\n                    }\n                    this._trigger(\"close:countrydropdown\");\n                }\n            }, {\n                key: \"_scrollTo\",\n                value: function _scrollTo(element, middle) {\n                    var container = this.countryList;\n                    // windowTop from https://stackoverflow.com/a/14384091/217866\n                    var windowTop = window.pageYOffset || document.documentElement.scrollTop;\n                    var containerHeight = container.offsetHeight;\n                    var containerTop = container.getBoundingClientRect().top + windowTop;\n                    var containerBottom = containerTop + containerHeight;\n                    var elementHeight = element.offsetHeight;\n                    var elementTop = element.getBoundingClientRect().top + windowTop;\n                    var elementBottom = elementTop + elementHeight;\n                    var newScrollTop = elementTop - containerTop + container.scrollTop;\n                    var middleOffset = containerHeight / 2 - elementHeight / 2;\n                    if (elementTop < containerTop) {\n                        // scroll up\n                        if (middle) newScrollTop -= middleOffset;\n                        container.scrollTop = newScrollTop;\n                    } else if (elementBottom > containerBottom) {\n                        // scroll down\n                        if (middle) newScrollTop += middleOffset;\n                        var heightDifference = containerHeight - elementHeight;\n                        container.scrollTop = newScrollTop - heightDifference;\n                    }\n                }\n            }, {\n                key: \"_updateDialCode\",\n                value: function _updateDialCode(newDialCodeBare, hasSelectedListItem) {\n                    var inputVal = this.telInput.value;\n                    // save having to pass this every time\n                    var newDialCode = \"+\".concat(newDialCodeBare);\n                    var newNumber;\n                    if (inputVal.charAt(0) === \"+\") {\n                        // there's a plus so we're dealing with a replacement (doesn't matter if nationalMode or not)\n                        var prevDialCode = this._getDialCode(inputVal);\n                        if (prevDialCode) {\n                            // current number contains a valid dial code, so replace it\n                            newNumber = inputVal.replace(prevDialCode, newDialCode);\n                        } else {\n                            // current number contains an invalid dial code, so ditch it\n                            // (no way to determine where the invalid dial code ends and the rest of the number begins)\n                            newNumber = newDialCode;\n                        }\n                    } else if (this.options.nationalMode || this.options.separateDialCode) {\n                        // don't do anything\n                        return;\n                    } else {\n                        // nationalMode is disabled\n                        if (inputVal) {\n                            // there is an existing value with no dial code: prefix the new dial code\n                            newNumber = newDialCode + inputVal;\n                        } else if (hasSelectedListItem || !this.options.autoHideDialCode) {\n                            // no existing value and either they've just selected a list item, or autoHideDialCode is\n                            // disabled: insert new dial code\n                            newNumber = newDialCode;\n                        } else {\n                            return;\n                        }\n                    }\n                    this.telInput.value = newNumber;\n                }\n            }, {\n                key: \"_getDialCode\",\n                value: function _getDialCode(number) {\n                    var dialCode = \"\";\n                    // only interested in international numbers (starting with a plus)\n                    if (number.charAt(0) === \"+\") {\n                        var numericChars = \"\";\n                        // iterate over chars\n                        for (var i = 0; i < number.length; i++) {\n                            var c = number.charAt(i);\n                            // if char is number (https://stackoverflow.com/a/8935649/217866)\n                            if (!isNaN(parseInt(c, 10))) {\n                                numericChars += c;\n                                // if current numericChars make a valid dial code\n                                if (this.countryCodes[numericChars]) {\n                                    // store the actual raw string (useful for matching later)\n                                    dialCode = number.substr(0, i + 1);\n                                }\n                                if (numericChars.length === this.dialCodeMaxLen) {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    return dialCode;\n                }\n            }, {\n                key: \"_getFullNumber\",\n                value: function _getFullNumber() {\n                    var val = this.telInput.value.trim();\n                    var dialCode = this.selectedCountryData.dialCode;\n                    var prefix;\n                    var numericVal = this._getNumeric(val);\n                    if (this.options.separateDialCode && val.charAt(0) !== \"+\" && dialCode && numericVal) {\n                        // when using separateDialCode, it is visible so is effectively part of the typed number\n                        prefix = \"+\".concat(dialCode);\n                    } else {\n                        prefix = \"\";\n                    }\n                    return prefix + val;\n                }\n            }, {\n                key: \"_beforeSetNumber\",\n                value: function _beforeSetNumber(originalNumber) {\n                    var number = originalNumber;\n                    if (this.options.separateDialCode) {\n                        var dialCode = this._getDialCode(number);\n                        // if there is a valid dial code\n                        if (dialCode) {\n                            // in case _getDialCode returned an area code as well\n                            dialCode = \"+\".concat(this.selectedCountryData.dialCode);\n                            // a lot of numbers will have a space separating the dial code and the main number, and\n                            // some NANP numbers will have a hyphen e.g. +1 684-733-1234 - in both cases we want to get\n                            // rid of it\n                            // NOTE: don't just trim all non-numerics as may want to preserve an open parenthesis etc\n                            var start = number[dialCode.length] === \" \" || number[dialCode.length] === \"-\" ? dialCode.length + 1 : dialCode.length;\n                            number = number.substr(start);\n                        }\n                    }\n                    return this._cap(number);\n                }\n            }, {\n                key: \"_triggerCountryChange\",\n                value: function _triggerCountryChange() {\n                    this._trigger(\"countrychange\");\n                }\n            }, {\n                key: \"handleAutoCountry\",\n                value: function handleAutoCountry() {\n                    if (this.options.initialCountry === \"auto\") {\n                        // we must set this even if there is an initial val in the input: in case the initial val is\n                        // invalid and they delete it - they should see their auto country\n                        this.defaultCountry = window.intlTelInputGlobals.autoCountry;\n                        // if there's no initial value in the input, then update the flag\n                        if (!this.telInput.value) {\n                            this.setCountry(this.defaultCountry);\n                        }\n                        this.resolveAutoCountryPromise();\n                    }\n                }\n            }, {\n                key: \"handleUtils\",\n                value: function handleUtils() {\n                    // if the request was successful\n                    if (window.intlTelInputUtils) {\n                        // if there's an initial value in the input, then format it\n                        if (this.telInput.value) {\n                            this._updateValFromNumber(this.telInput.value);\n                        }\n                        this._updatePlaceholder();\n                    }\n                    this.resolveUtilsScriptPromise();\n                }\n            }, {\n                key: \"destroy\",\n                value: function destroy() {\n                    var form = this.telInput.form;\n                    if (this.options.allowDropdown) {\n                        // make sure the dropdown is closed (and unbind listeners)\n                        this._closeDropdown();\n                        this.selectedFlag.removeEventListener(\"click\", this._handleClickSelectedFlag);\n                        this.flagsContainer.removeEventListener(\"keydown\", this._handleFlagsContainerKeydown);\n                        // label click hack\n                        var label = this._getClosestLabel();\n                        if (label) label.removeEventListener(\"click\", this._handleLabelClick);\n                    }\n                    // unbind hiddenInput listeners\n                    if (this.hiddenInput && form) form.removeEventListener(\"submit\", this._handleHiddenInputSubmit);\n                    // unbind autoHideDialCode listeners\n                    if (this.options.autoHideDialCode) {\n                        if (form) form.removeEventListener(\"submit\", this._handleSubmitOrBlurEvent);\n                        this.telInput.removeEventListener(\"blur\", this._handleSubmitOrBlurEvent);\n                    }\n                    // unbind key events, and cut/paste events\n                    this.telInput.removeEventListener(\"keyup\", this._handleKeyupEvent);\n                    this.telInput.removeEventListener(\"cut\", this._handleClipboardEvent);\n                    this.telInput.removeEventListener(\"paste\", this._handleClipboardEvent);\n                    // remove attribute of id instance: data-intl-tel-input-id\n                    this.telInput.removeAttribute(\"data-intl-tel-input-id\");\n                    // remove markup (but leave the original input)\n                    var wrapper = this.telInput.parentNode;\n                    wrapper.parentNode.insertBefore(this.telInput, wrapper);\n                    wrapper.parentNode.removeChild(wrapper);\n                    delete window.intlTelInputGlobals.instances[this.id];\n                }\n            }, {\n                key: \"getExtension\",\n                value: function getExtension() {\n                    if (window.intlTelInputUtils) {\n                        return intlTelInputUtils.getExtension(this._getFullNumber(), this.selectedCountryData.iso2);\n                    }\n                    return \"\";\n                }\n            }, {\n                key: \"getNumber\",\n                value: function getNumber(format) {\n                    if (window.intlTelInputUtils) {\n                        var iso2 = this.selectedCountryData.iso2;\n                        return intlTelInputUtils.formatNumber(this._getFullNumber(), iso2, format);\n                    }\n                    return \"\";\n                }\n            }, {\n                key: \"getNumberType\",\n                value: function getNumberType() {\n                    if (window.intlTelInputUtils) {\n                        return intlTelInputUtils.getNumberType(this._getFullNumber(), this.selectedCountryData.iso2);\n                    }\n                    return -99;\n                }\n            }, {\n                key: \"getSelectedCountryData\",\n                value: function getSelectedCountryData() {\n                    return this.selectedCountryData;\n                }\n            }, {\n                key: \"getValidationError\",\n                value: function getValidationError() {\n                    if (window.intlTelInputUtils) {\n                        var iso2 = this.selectedCountryData.iso2;\n                        return intlTelInputUtils.getValidationError(this._getFullNumber(), iso2);\n                    }\n                    return -99;\n                }\n            }, {\n                key: \"isValidNumber\",\n                value: function isValidNumber() {\n                    var val = this._getFullNumber().trim();\n                    var countryCode = this.options.nationalMode ? this.selectedCountryData.iso2 : \"\";\n                    return window.intlTelInputUtils ? intlTelInputUtils.isValidNumber(val, countryCode) : null;\n                }\n            }, {\n                key: \"setCountry\",\n                value: function setCountry(originalCountryCode) {\n                    var countryCode = originalCountryCode.toLowerCase();\n                    // check if already selected\n                    if (!this.selectedFlagInner.classList.contains(\"iti__\".concat(countryCode))) {\n                        this._setFlag(countryCode);\n                        this._updateDialCode(this.selectedCountryData.dialCode, false);\n                        this._triggerCountryChange();\n                    }\n                }\n            }, {\n                key: \"setNumber\",\n                value: function setNumber(number) {\n                    // we must update the flag first, which updates this.selectedCountryData, which is used for\n                    // formatting the number before displaying it\n                    var flagChanged = this._updateFlagFromNumber(number);\n                    this._updateValFromNumber(number);\n                    if (flagChanged) {\n                        this._triggerCountryChange();\n                    }\n                }\n            }, {\n                key: \"setPlaceholderNumberType\",\n                value: function setPlaceholderNumberType(type) {\n                    this.options.placeholderNumberType = type;\n                    this._updatePlaceholder();\n                }\n            } ]);\n            return Iti;\n        }();\n        /********************\n *  STATIC METHODS\n ********************/\n        // get the country data object\n        window.intlTelInputGlobals.getCountryData = function() {\n            return allCountries;\n        };\n        // inject a <script> element to load utils.js\n        var injectScript = function injectScript(path, handleSuccess, handleFailure) {\n            // inject a new script element into the page\n            var script = document.createElement(\"script\");\n            script.onload = function() {\n                forEachInstance(\"handleUtils\");\n                if (handleSuccess) handleSuccess();\n            };\n            script.onerror = function() {\n                forEachInstance(\"rejectUtilsScriptPromise\");\n                if (handleFailure) handleFailure();\n            };\n            script.className = \"iti-load-utils\";\n            script.async = true;\n            script.src = path;\n            document.body.appendChild(script);\n        };\n        // load the utils script\n        window.intlTelInputGlobals.loadUtils = function(path) {\n            // 2 options:\n            // 1) not already started loading (start)\n            // 2) already started loading (do nothing - just wait for the onload callback to fire, which will\n            // trigger handleUtils on all instances, invoking their resolveUtilsScriptPromise functions)\n            if (!window.intlTelInputUtils && !window.intlTelInputGlobals.startedLoadingUtilsScript) {\n                // only do this once\n                window.intlTelInputGlobals.startedLoadingUtilsScript = true;\n                // if we have promises, then return a promise\n                if (typeof Promise !== \"undefined\") {\n                    return new Promise(function(resolve, reject) {\n                        return injectScript(path, resolve, reject);\n                    });\n                }\n                injectScript(path);\n            }\n            return null;\n        };\n        // default options\n        window.intlTelInputGlobals.defaults = defaults;\n        // version\n        window.intlTelInputGlobals.version = \"16.0.7\";\n        // convenience wrapper\n        return function(input, options) {\n            var iti = new Iti(input, options);\n            iti._init();\n            input.setAttribute(\"data-intl-tel-input-id\", iti.id);\n            window.intlTelInputGlobals.instances[iti.id] = iti;\n            return iti;\n        };\n    }();\n});","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhoneLogin.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhoneLogin.vue?vue&type=style&index=0&lang=less&\""],"sourceRoot":""}