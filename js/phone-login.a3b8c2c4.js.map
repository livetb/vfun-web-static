{"version":3,"sources":["webpack:///./node_modules/intl-tel-input/index.js","webpack:///./node_modules/vant/es/utils/dom/raf.js","webpack:///./node_modules/vant/es/utils/validate/system.js","webpack:///./node_modules/vant/es/utils/dom/reset-scroll.js","webpack:///./node_modules/vant/es/field/index.js","webpack:///./node_modules/vant/es/cell/index.js","webpack:///./src/views/PhoneLogin.vue?4b28","webpack:///./node_modules/vant/es/count-down/utils.js","webpack:///./node_modules/vant/es/count-down/index.js","webpack:///src/views/PhoneLogin.vue","webpack:///./src/views/PhoneLogin.vue?951a","webpack:///./src/views/PhoneLogin.vue","webpack:///./node_modules/vant/es/field/style/less.js","webpack:///./node_modules/vant/es/button/style/less.js","webpack:///./node_modules/intl-tel-input/build/js/intlTelInput.js","webpack:///./node_modules/vant/es/cell/shared.js","webpack:///./src/views/PhoneLogin.vue?594e"],"names":["module","exports","prev","Date","now","fallback","fn","curr","ms","Math","max","id","setTimeout","root","global","window","iRaf","requestAnimationFrame","iCancel","cancelAnimationFrame","clearTimeout","raf","call","doubleRaf","cancelRaf","isIOS","test","navigator","userAgent","toLowerCase","resetScroll","_createNamespace","create","createComponent","bem","inheritAttrs","props","error","Boolean","readonly","autosize","Object","leftIcon","String","rightIcon","clearable","labelClass","labelWidth","Number","labelAlign","inputAlign","errorMessage","errorMessageAlign","showWordLimit","type","default","data","focused","watch","value","this","$nextTick","adjustSize","mounted","format","computed","showClear","listeners","$listeners","input","onInput","keypress","onKeypress","focus","onFocus","blur","onBlur","click","labelStyle","width","methods","$refs","target","_target","maxlength","$attrs","length","slice","event","composing","$emit","onClick","onClickLeftIcon","onClickRightIcon","onClear","keyCode","allowPoint","indexOf","isValidKey","style","height","scrollHeight","_this$autosize","maxHeight","minHeight","min","renderInput","h","$createElement","inputSlot","slots","inputProps","ref","class","domProps","attrs","on","directives","name","renderLeftIcon","showLeftIcon","renderRightIcon","showRightIcon","renderWordLimit","render","_bem","arguments","scopedSlots","icon","title","size","label","center","border","isLink","required","clickable","arrowDirection","Cell","ctx","showTitle","showValue","showLabel","Label","Title","titleClass","titleStyle","Value","alone","valueClass","LeftIcon","rightIconSlot","RightIcon","classes","borderless","extra","_vm","_h","_c","_self","staticClass","model","callback","$$v","phone","expression","slot","code","sended","sendVerifyCode","time","finishCD","_v","loginByPhone","staticRenderFns","SECOND","MINUTE","HOUR","DAY","parseTimeData","days","floor","hours","minutes","seconds","milliseconds","parseFormat","timeData","replace","isSameSecond","time1","time2","millisecond","autoStart","remain","formattedTime","immediate","handler","start","counting","endTime","tick","pause","rafId","reset","microTick","macroTick","_this","setRemain","getRemain","_this2","coutry","dialCode","$toast","confirmResult","resetRecaptcha","recaptchaVerifier","clear","iti","initialCountry","separateDialCode","component","factory","intlTelInput","document","undefined","allCountries","i","c","iso2","priority","areaCodes","_classCallCheck","instance","Constructor","TypeError","_defineProperties","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","prototype","intlTelInputGlobals","getInstance","getAttribute","instances","defaults","allowDropdown","autoHideDialCode","autoPlaceholder","customContainer","customPlaceholder","dropdownContainer","excludeCountries","formatOnDisplay","geoIpLookup","hiddenInput","localizedCountries","nationalMode","onlyCountries","placeholderNumberType","preferredCountries","utilsScript","regionlessNanpNumbers","addEventListener","windowLoaded","forEachProp","obj","keys","forEachInstance","method","Iti","options","telInput","activeItem","highlightedItem","customOptions","hasOwnProperty","hadInitialPlaceholder","isMobile","body","classList","add","Promise","autoCountryPromise","resolve","reject","resolveAutoCountryPromise","rejectAutoCountryPromise","utilsScriptPromise","resolveUtilsScriptPromise","rejectUtilsScriptPromise","promise","all","selectedCountryData","_processCountryData","_generateMarkup","_setInitialState","_initListeners","_initRequests","_processAllCountries","_processCountryCodes","_processPreferredCountries","_translateCountriesByLocale","countries","sort","_countryNameSort","dialCodeMaxLen","countryCodes","index","lowerCaseOnlyCountries","map","country","filter","lowerCaseExcludeCountries","iso","a","b","localeCompare","_addCountryCode","_i","rootCountryCode","j","areaCode","k","partialDialCode","substr","countryCode","countryData","_getCountryData","push","container","el","createElement","setAttribute","appendChild","parentClass","wrapper","_createEl","parentNode","insertBefore","flagsContainer","selectedFlag","role","selectedFlagInner","selectedDialCode","dropdownArrow","countryList","_appendListItems","dropdown","hiddenInputName","lastIndexOf","concat","className","tmp","insertAdjacentHTML","val","_getDialCode","isRegionlessNanp","_isRegionlessNanp","_this$options","_updateFlagFromNumber","_setFlag","defaultCountry","_updateValFromNumber","_initKeyListeners","_initBlurListeners","_initDropdownListeners","_initHiddenInputListener","_this3","_handleHiddenInputSubmit","getNumber","form","tagName","_this4","_handleLabelClick","e","contains","preventDefault","_getClosestLabel","_handleClickSelectedFlag","disabled","readOnly","_showDropdown","_handleFlagsContainerKeydown","isDropdownHidden","stopPropagation","_closeDropdown","_this5","intlTelInputUtils","loadUtils","_loadAutoCountry","autoCountry","handleAutoCountry","startedLoadingAutoCountry","_this6","_handleKeyupEvent","_triggerCountryChange","_handleClipboardEvent","number","_this7","_handleSubmitOrBlurEvent","_removeEmptyDialCode","charAt","numeric","_getNumeric","s","createEvent","initEvent","dispatchEvent","remove","_setDropdownPosition","_highlightListItem","_scrollTo","_bindDropdownListeners","_trigger","shouldHaveClass","_this8","pos","getBoundingClientRect","windowTop","pageYOffset","documentElement","scrollTop","inputTop","top","dropdownHeight","offsetHeight","dropdownFitsBelow","innerHeight","dropdownFitsAbove","_toggleClass","extraTop","left","scrollLeft","_handleWindowScroll","_this9","_handleMouseoverCountryList","listItem","_getClosestListItem","_handleClickCountryList","_selectListItem","isOpening","_handleClickOffToClose","query","queryTimer","_handleKeydownOnDropdown","_handleUpDownKey","_handleEnterKey","_searchForCountry","next","previousElementSibling","nextElementSibling","_startsWith","querySelector","originalNumber","useNational","_intlTelInputUtils$nu","numberFormat","NATIONAL","INTERNATIONAL","formatNumber","_beforeSetNumber","isNanp","alreadySelected","isRegionlessNanpNumber","shouldFocus","prevItem","ignoreOnlyCountriesOption","allowFail","Error","prevCountry","innerHTML","selectedFlagWidth","offsetWidth","_getHiddenSelectedFlagWidth","paddingLeft","_updatePlaceholder","nextItem","containerClone","cloneNode","visibility","selectedFlagClone","removeChild","shouldSetPlaceholder","numberType","placeholder","getExampleNumber","flagChanged","_updateDialCode","len","setSelectionRange","removeEventListener","element","middle","containerHeight","containerTop","containerBottom","elementHeight","elementTop","elementBottom","newScrollTop","middleOffset","heightDifference","newDialCodeBare","hasSelectedListItem","newNumber","inputVal","newDialCode","prevDialCode","numericChars","isNaN","parseInt","prefix","trim","numericVal","_cap","setCountry","removeAttribute","getExtension","_getFullNumber","getNumberType","getValidationError","isValidNumber","originalCountryCode","getCountryData","injectScript","path","handleSuccess","handleFailure","script","onload","onerror","async","src","startedLoadingUtilsScript","version","_init","cellProps"],"mappings":"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","file":"js/phone-login.a3b8c2c4.js","sourcesContent":["/**\n * Exposing intl-tel-input as a component\n */\nmodule.exports = require(\"./build/js/intlTelInput\");\n","/**\n * requestAnimationFrame polyfill\n */\nimport { isServer } from '..';\nvar prev = Date.now();\n/* istanbul ignore next */\n\nfunction fallback(fn) {\n  var curr = Date.now();\n  var ms = Math.max(0, 16 - (curr - prev));\n  var id = setTimeout(fn, ms);\n  prev = curr + ms;\n  return id;\n}\n/* istanbul ignore next */\n\n\nvar root = isServer ? global : window;\n/* istanbul ignore next */\n\nvar iRaf = root.requestAnimationFrame || fallback;\n/* istanbul ignore next */\n\nvar iCancel = root.cancelAnimationFrame || root.clearTimeout;\nexport function raf(fn) {\n  return iRaf.call(root, fn);\n} // double raf for animation\n\nexport function doubleRaf(fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\nexport function cancelRaf(id) {\n  iCancel.call(root, id);\n}","import { isServer } from '..';\nexport function isAndroid() {\n  /* istanbul ignore next */\n  return isServer ? false : /android/.test(navigator.userAgent.toLowerCase());\n}\nexport function isIOS() {\n  /* istanbul ignore next */\n  return isServer ? false : /ios|iphone|ipad|ipod/.test(navigator.userAgent.toLowerCase());\n}","/**\n * Hack for iOS12 page scroll\n * https://developers.weixin.qq.com/community/develop/doc/00044ae90742f8c82fb78fcae56800\n */\nimport { isIOS as checkIsIOS } from '../validate/system';\nimport { getRootScrollTop, setRootScrollTop } from './scroll';\nvar isIOS = checkIsIOS();\n/* istanbul ignore next */\n\nexport function resetScroll() {\n  if (isIOS) {\n    setRootScrollTop(getRootScrollTop());\n  }\n}","import _mergeJSXProps2 from \"@vue/babel-helper-vue-jsx-merge-props\";\nimport _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport Icon from '../icon';\nimport Cell from '../cell';\nimport { cellProps } from '../cell/shared';\nimport { preventDefault } from '../utils/dom/event';\nimport { resetScroll } from '../utils/dom/reset-scroll';\nimport { createNamespace, isObj, isDef, addUnit } from '../utils';\n\nvar _createNamespace = createNamespace('field'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nexport default createComponent({\n  inheritAttrs: false,\n  props: _extends({}, cellProps, {\n    error: Boolean,\n    readonly: Boolean,\n    autosize: [Boolean, Object],\n    leftIcon: String,\n    rightIcon: String,\n    clearable: Boolean,\n    labelClass: null,\n    labelWidth: [Number, String],\n    labelAlign: String,\n    inputAlign: String,\n    errorMessage: String,\n    errorMessageAlign: String,\n    showWordLimit: Boolean,\n    type: {\n      type: String,\n      default: 'text'\n    }\n  }),\n  data: function data() {\n    return {\n      focused: false\n    };\n  },\n  watch: {\n    value: function value() {\n      this.$nextTick(this.adjustSize);\n    }\n  },\n  mounted: function mounted() {\n    this.format();\n    this.$nextTick(this.adjustSize);\n  },\n  computed: {\n    showClear: function showClear() {\n      return this.clearable && this.focused && this.value !== '' && isDef(this.value) && !this.readonly;\n    },\n    listeners: function listeners() {\n      var listeners = _extends({}, this.$listeners, {\n        input: this.onInput,\n        keypress: this.onKeypress,\n        focus: this.onFocus,\n        blur: this.onBlur\n      });\n\n      delete listeners.click;\n      return listeners;\n    },\n    labelStyle: function labelStyle() {\n      var labelWidth = this.labelWidth;\n\n      if (labelWidth) {\n        return {\n          width: addUnit(labelWidth)\n        };\n      }\n    }\n  },\n  methods: {\n    focus: function focus() {\n      if (this.$refs.input) {\n        this.$refs.input.focus();\n      }\n    },\n    blur: function blur() {\n      if (this.$refs.input) {\n        this.$refs.input.blur();\n      }\n    },\n    // native maxlength not work when type = number\n    format: function format(target) {\n      if (target === void 0) {\n        target = this.$refs.input;\n      }\n\n      if (!target) {\n        return;\n      }\n\n      var _target = target,\n          value = _target.value;\n      var maxlength = this.$attrs.maxlength;\n\n      if (this.type === 'number' && isDef(maxlength) && value.length > maxlength) {\n        value = value.slice(0, maxlength);\n        target.value = value;\n      }\n\n      return value;\n    },\n    onInput: function onInput(event) {\n      // not update v-model when composing\n      if (event.target.composing) {\n        return;\n      }\n\n      this.$emit('input', this.format(event.target));\n    },\n    onFocus: function onFocus(event) {\n      this.focused = true;\n      this.$emit('focus', event); // hack for safari\n\n      /* istanbul ignore if */\n\n      if (this.readonly) {\n        this.blur();\n      }\n    },\n    onBlur: function onBlur(event) {\n      this.focused = false;\n      this.$emit('blur', event);\n      resetScroll();\n    },\n    onClick: function onClick(event) {\n      this.$emit('click', event);\n    },\n    onClickLeftIcon: function onClickLeftIcon(event) {\n      this.$emit('click-left-icon', event);\n    },\n    onClickRightIcon: function onClickRightIcon(event) {\n      this.$emit('click-right-icon', event);\n    },\n    onClear: function onClear(event) {\n      preventDefault(event);\n      this.$emit('input', '');\n      this.$emit('clear', event);\n    },\n    onKeypress: function onKeypress(event) {\n      if (this.type === 'number') {\n        var keyCode = event.keyCode;\n        var allowPoint = String(this.value).indexOf('.') === -1;\n        var isValidKey = keyCode >= 48 && keyCode <= 57 || keyCode === 46 && allowPoint || keyCode === 45;\n\n        if (!isValidKey) {\n          preventDefault(event);\n        }\n      } // trigger blur after click keyboard search button\n\n      /* istanbul ignore next */\n\n\n      if (this.type === 'search' && event.keyCode === 13) {\n        this.blur();\n      }\n\n      this.$emit('keypress', event);\n    },\n    adjustSize: function adjustSize() {\n      var input = this.$refs.input;\n\n      if (!(this.type === 'textarea' && this.autosize) || !input) {\n        return;\n      }\n\n      input.style.height = 'auto';\n      var height = input.scrollHeight;\n\n      if (isObj(this.autosize)) {\n        var _this$autosize = this.autosize,\n            maxHeight = _this$autosize.maxHeight,\n            minHeight = _this$autosize.minHeight;\n\n        if (maxHeight) {\n          height = Math.min(height, maxHeight);\n        }\n\n        if (minHeight) {\n          height = Math.max(height, minHeight);\n        }\n      }\n\n      if (height) {\n        input.style.height = height + 'px';\n      }\n    },\n    renderInput: function renderInput() {\n      var h = this.$createElement;\n      var inputSlot = this.slots('input');\n\n      if (inputSlot) {\n        return h(\"div\", {\n          \"class\": bem('control', this.inputAlign)\n        }, [inputSlot]);\n      }\n\n      var inputProps = {\n        ref: 'input',\n        class: bem('control', this.inputAlign),\n        domProps: {\n          value: this.value\n        },\n        attrs: _extends({}, this.$attrs, {\n          readonly: this.readonly\n        }),\n        on: this.listeners,\n        // add model directive to skip IME composition\n        directives: [{\n          name: 'model',\n          value: this.value\n        }]\n      };\n\n      if (this.type === 'textarea') {\n        return h(\"textarea\", _mergeJSXProps([{}, inputProps]));\n      }\n\n      return h(\"input\", _mergeJSXProps2([{\n        \"attrs\": {\n          \"type\": this.type\n        }\n      }, inputProps]));\n    },\n    renderLeftIcon: function renderLeftIcon() {\n      var h = this.$createElement;\n      var showLeftIcon = this.slots('left-icon') || this.leftIcon;\n\n      if (showLeftIcon) {\n        return h(\"div\", {\n          \"class\": bem('left-icon'),\n          \"on\": {\n            \"click\": this.onClickLeftIcon\n          }\n        }, [this.slots('left-icon') || h(Icon, {\n          \"attrs\": {\n            \"name\": this.leftIcon\n          }\n        })]);\n      }\n    },\n    renderRightIcon: function renderRightIcon() {\n      var h = this.$createElement;\n      var slots = this.slots;\n      var showRightIcon = slots('right-icon') || this.rightIcon;\n\n      if (showRightIcon) {\n        return h(\"div\", {\n          \"class\": bem('right-icon'),\n          \"on\": {\n            \"click\": this.onClickRightIcon\n          }\n        }, [slots('right-icon') || h(Icon, {\n          \"attrs\": {\n            \"name\": this.rightIcon\n          }\n        })]);\n      }\n    },\n    renderWordLimit: function renderWordLimit() {\n      var h = this.$createElement;\n\n      if (this.showWordLimit && this.$attrs.maxlength) {\n        return h(\"div\", {\n          \"class\": bem('word-limit')\n        }, [this.value.length, \"/\", this.$attrs.maxlength]);\n      }\n    }\n  },\n  render: function render() {\n    var _bem;\n\n    var h = arguments[0];\n    var slots = this.slots,\n        labelAlign = this.labelAlign;\n    var scopedSlots = {\n      icon: this.renderLeftIcon\n    };\n\n    if (slots('label')) {\n      scopedSlots.title = function () {\n        return slots('label');\n      };\n    }\n\n    return h(Cell, {\n      \"attrs\": {\n        \"icon\": this.leftIcon,\n        \"size\": this.size,\n        \"title\": this.label,\n        \"center\": this.center,\n        \"border\": this.border,\n        \"isLink\": this.isLink,\n        \"required\": this.required,\n        \"clickable\": this.clickable,\n        \"titleStyle\": this.labelStyle,\n        \"titleClass\": [bem('label', labelAlign), this.labelClass],\n        \"arrowDirection\": this.arrowDirection\n      },\n      \"class\": bem((_bem = {\n        error: this.error\n      }, _bem[\"label-\" + labelAlign] = labelAlign, _bem['min-height'] = this.type === 'textarea' && !this.autosize, _bem)),\n      \"scopedSlots\": scopedSlots,\n      \"on\": {\n        \"click\": this.onClick\n      }\n    }, [h(\"div\", {\n      \"class\": bem('body')\n    }, [this.renderInput(), this.showClear && h(Icon, {\n      \"attrs\": {\n        \"name\": \"clear\"\n      },\n      \"class\": bem('clear'),\n      \"on\": {\n        \"touchstart\": this.onClear\n      }\n    }), this.renderRightIcon(), slots('button') && h(\"div\", {\n      \"class\": bem('button')\n    }, [slots('button')])]), this.renderWordLimit(), this.errorMessage && h(\"div\", {\n      \"class\": bem('error-message', this.errorMessageAlign)\n    }, [this.errorMessage])]);\n  }\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\nimport { createNamespace, isDef } from '../utils';\nimport { cellProps } from './shared';\nimport { emit, inherit } from '../utils/functional';\nimport { routeProps, functionalRoute } from '../utils/router';\nimport Icon from '../icon'; // Types\n\nvar _createNamespace = createNamespace('cell'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nfunction Cell(h, props, slots, ctx) {\n  var icon = props.icon,\n      size = props.size,\n      title = props.title,\n      label = props.label,\n      value = props.value,\n      isLink = props.isLink,\n      arrowDirection = props.arrowDirection;\n  var showTitle = slots.title || isDef(title);\n  var showValue = slots.default || isDef(value);\n  var showLabel = slots.label || isDef(label);\n  var Label = showLabel && h(\"div\", {\n    \"class\": [bem('label'), props.labelClass]\n  }, [slots.label ? slots.label() : label]);\n  var Title = showTitle && h(\"div\", {\n    \"class\": [bem('title'), props.titleClass],\n    \"style\": props.titleStyle\n  }, [slots.title ? slots.title() : h(\"span\", [title]), Label]);\n  var Value = showValue && h(\"div\", {\n    \"class\": [bem('value', {\n      alone: !slots.title && !title\n    }), props.valueClass]\n  }, [slots.default ? slots.default() : h(\"span\", [value])]);\n  var LeftIcon = slots.icon ? slots.icon() : icon && h(Icon, {\n    \"class\": bem('left-icon'),\n    \"attrs\": {\n      \"name\": icon\n    }\n  });\n  var rightIconSlot = slots['right-icon'];\n  var RightIcon = rightIconSlot ? rightIconSlot() : isLink && h(Icon, {\n    \"class\": bem('right-icon'),\n    \"attrs\": {\n      \"name\": arrowDirection ? \"arrow-\" + arrowDirection : 'arrow'\n    }\n  });\n\n  function onClick(event) {\n    emit(ctx, 'click', event);\n    functionalRoute(ctx);\n  }\n\n  var clickable = isLink || props.clickable;\n  var classes = {\n    clickable: clickable,\n    center: props.center,\n    required: props.required,\n    borderless: !props.border\n  };\n\n  if (size) {\n    classes[size] = size;\n  }\n\n  return h(\"div\", _mergeJSXProps([{\n    \"class\": bem(classes),\n    \"attrs\": {\n      \"role\": clickable ? 'button' : null,\n      \"tabindex\": clickable ? 0 : null\n    },\n    \"on\": {\n      \"click\": onClick\n    }\n  }, inherit(ctx)]), [LeftIcon, Title, Value, RightIcon, slots.extra && slots.extra()]);\n}\n\nCell.props = _extends({}, cellProps, {}, routeProps);\nexport default createComponent(Cell);","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"login-page\"},[_c('div',[_c('div',{ref:\"recaptcha\",attrs:{\"id\":\"phone-login-recaptcha\"}}),_c('van-field',{attrs:{\"placeholder\":\"Please enter phone number\",\"center\":\"\"},model:{value:(_vm.phone),callback:function ($$v) {_vm.phone=$$v},expression:\"phone\"}},[_c('input',{ref:\"phone\",attrs:{\"slot\":\"label\"},slot:\"label\"})]),_c('van-field',{attrs:{\"placeholder\":\"verify code\",\"label\":\"verify code\",\"center\":\"\"},model:{value:(_vm.code),callback:function ($$v) {_vm.code=$$v},expression:\"code\"}},[_c('van-button',{attrs:{\"slot\":\"button\",\"disabled\":_vm.sended,\"size\":\"small\",\"type\":\"primary\"},on:{\"click\":_vm.sendVerifyCode},slot:\"button\"},[(_vm.sended)?_c('van-count-down',{ref:\"countDown\",attrs:{\"format\":\"mm:ss\",\"time\":_vm.time,\"auto-start\":\"\"},on:{\"finish\":_vm.finishCD}}):_c('div',[_vm._v(\"Send verify code\")])],1)],1),_c('div',{staticClass:\"login-button-wrap\"},[_c('van-button',{staticClass:\"login-btn\",attrs:{\"color\":\"#6B7DFC\"},on:{\"click\":_vm.loginByPhone}},[_vm._v(\"Sign up/ Login\")])],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { padZero } from '../utils/format/string';\nvar SECOND = 1000;\nvar MINUTE = 60 * SECOND;\nvar HOUR = 60 * MINUTE;\nvar DAY = 24 * HOUR;\nexport function parseTimeData(time) {\n  var days = Math.floor(time / DAY);\n  var hours = Math.floor(time % DAY / HOUR);\n  var minutes = Math.floor(time % HOUR / MINUTE);\n  var seconds = Math.floor(time % MINUTE / SECOND);\n  var milliseconds = Math.floor(time % SECOND);\n  return {\n    days: days,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds,\n    milliseconds: milliseconds\n  };\n}\nexport function parseFormat(format, timeData) {\n  var days = timeData.days;\n  var hours = timeData.hours,\n      minutes = timeData.minutes,\n      seconds = timeData.seconds,\n      milliseconds = timeData.milliseconds;\n\n  if (format.indexOf('DD') === -1) {\n    hours += days * 24;\n  } else {\n    format = format.replace('DD', padZero(days));\n  }\n\n  if (format.indexOf('HH') === -1) {\n    minutes += hours * 60;\n  } else {\n    format = format.replace('HH', padZero(hours));\n  }\n\n  if (format.indexOf('mm') === -1) {\n    seconds += minutes * 60;\n  } else {\n    format = format.replace('mm', padZero(minutes));\n  }\n\n  if (format.indexOf('ss') === -1) {\n    milliseconds += seconds * 1000;\n  } else {\n    format = format.replace('ss', padZero(seconds));\n  }\n\n  return format.replace('SSS', padZero(milliseconds, 3));\n}\nexport function isSameSecond(time1, time2) {\n  return Math.floor(time1 / 1000) === Math.floor(time2 / 1000);\n}","import { createNamespace } from '../utils';\nimport { raf, cancelRaf } from '../utils/dom/raf';\nimport { isSameSecond, parseTimeData, parseFormat } from './utils';\n\nvar _createNamespace = createNamespace('count-down'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nexport default createComponent({\n  props: {\n    millisecond: Boolean,\n    time: {\n      type: Number,\n      default: 0\n    },\n    format: {\n      type: String,\n      default: 'HH:mm:ss'\n    },\n    autoStart: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      remain: 0\n    };\n  },\n  computed: {\n    timeData: function timeData() {\n      return parseTimeData(this.remain);\n    },\n    formattedTime: function formattedTime() {\n      return parseFormat(this.format, this.timeData);\n    }\n  },\n  watch: {\n    time: {\n      immediate: true,\n      handler: 'reset'\n    }\n  },\n  methods: {\n    start: function start() {\n      if (this.counting) {\n        return;\n      }\n\n      this.counting = true;\n      this.endTime = Date.now() + this.remain;\n      this.tick();\n    },\n    pause: function pause() {\n      this.counting = false;\n      cancelRaf(this.rafId);\n    },\n    reset: function reset() {\n      this.pause();\n      this.remain = this.time;\n\n      if (this.autoStart) {\n        this.start();\n      }\n    },\n    tick: function tick() {\n      if (this.millisecond) {\n        this.microTick();\n      } else {\n        this.macroTick();\n      }\n    },\n    microTick: function microTick() {\n      var _this = this;\n\n      this.rafId = raf(function () {\n        _this.setRemain(_this.getRemain());\n\n        if (_this.remain !== 0) {\n          _this.microTick();\n        }\n      });\n    },\n    macroTick: function macroTick() {\n      var _this2 = this;\n\n      this.rafId = raf(function () {\n        var remain = _this2.getRemain();\n\n        if (!isSameSecond(remain, _this2.remain) || remain === 0) {\n          _this2.setRemain(remain);\n        }\n\n        if (_this2.remain !== 0) {\n          _this2.macroTick();\n        }\n      });\n    },\n    getRemain: function getRemain() {\n      return Math.max(this.endTime - Date.now(), 0);\n    },\n    setRemain: function setRemain(remain) {\n      this.remain = remain;\n\n      if (remain === 0) {\n        this.pause();\n        this.$emit('finish');\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    return h(\"div\", {\n      \"class\": bem()\n    }, [this.slots('default', this.timeData) || this.formattedTime]);\n  }\n});","<template>\r\n  <div class=\"login-page\">\r\n    <div>\r\n      <div ref=\"recaptcha\" id=\"phone-login-recaptcha\"></div>\r\n      <van-field v-model=\"phone\" placeholder=\"Please enter phone number\" center>\r\n        <input slot=\"label\" ref=\"phone\" />\r\n      </van-field>\r\n      <van-field\r\n        v-model=\"code\"\r\n        placeholder=\"verify code\"\r\n        label=\"verify code\"\r\n        center\r\n      >\r\n        <van-button\r\n          @click=\"sendVerifyCode\"\r\n          :disabled=\"sended\"\r\n          slot=\"button\"\r\n          size=\"small\"\r\n          type=\"primary\"\r\n        >\r\n          <van-count-down\r\n            ref=\"countDown\"\r\n            @finish=\"finishCD\"\r\n            format=\"mm:ss\"\r\n            :time=\"time\"\r\n            auto-start\r\n            v-if=\"sended\"\r\n          />\r\n          <div v-else>Send verify code</div>\r\n        </van-button>\r\n      </van-field>\r\n      <div class=\"login-button-wrap\">\r\n        <van-button @click=\"loginByPhone\" class=\"login-btn\" color=\"#6B7DFC\"\r\n          >Sign up/ Login</van-button\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// /* global grecaptcha */\r\nimport * as intlTelInput from \"intl-tel-input\";\r\nimport \"intl-tel-input/build/css/intlTelInput.min.css\";\r\nimport firebase from \"firebase/app\";\r\n// import firebase from \"firebase-app\";\r\nimport \"firebase/auth\";\r\nimport Vue from \"vue\";\r\nimport { Field, Button, CountDown } from \"vant\";\r\nimport { mapActions } from \"vuex\";\r\n\r\nVue.use(Field)\r\n  .use(Button)\r\n  .use(CountDown);\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      phone: \"\",\r\n      code: \"\",\r\n      time: 60 * 1000,\r\n      sended: false\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions([\"login\"]),\r\n    finishCD() {\r\n      this.sended = false;\r\n      this.time = 60 * 1000;\r\n    },\r\n    sendVerifyCode() {\r\n      if (!this.phone) {\r\n        this.$toast(\"Please enter phone number\");\r\n        return;\r\n      }\r\n      let dialCode = \"+\";\r\n      const coutry = this.iti.getSelectedCountryData();\r\n      if (coutry) {\r\n        dialCode = dialCode + coutry.dialCode;\r\n      }\r\n      firebase\r\n        .auth()\r\n        .signInWithPhoneNumber(dialCode + this.phone, this.recaptchaVerifier)\r\n        .then(result => {\r\n          this.confirmResult = result;\r\n          this.sended = true;\r\n          this.resetRecaptcha();\r\n          this.$toast(\"Send Success\");\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          this.resetRecaptcha();\r\n          this.$toast(error.message);\r\n        });\r\n    },\r\n    loginByPhone() {\r\n      if (!this.confirmResult || !this.code) {\r\n        this.$toast(\"please enter verification code\");\r\n      } else if (!this.phone) {\r\n        this.$toast(\"please enter phone number\");\r\n      }\r\n      if (this.confirmResult) {\r\n        this.confirmResult\r\n          .confirm(this.code)\r\n          .then(async res => {\r\n            let dialCode = \"+\";\r\n            const coutry = this.iti.getSelectedCountryData();\r\n            if (coutry) {\r\n              dialCode = dialCode + coutry.dialCode;\r\n            }\r\n            const { user } = res;\r\n            await this.login({\r\n              user,\r\n              method: { type: \"phone\", id: dialCode + this.phone }\r\n            });\r\n            this.$router.push(\"/home\");\r\n          })\r\n          .catch(function(error) {\r\n            console.log(error);\r\n            this.$toast(error.message);\r\n          });\r\n      }\r\n    },\r\n    resetRecaptcha() {\r\n      if (this.recaptchaVerifier) {\r\n        this.recaptchaVerifier.clear();\r\n      }\r\n      this.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n        this.$refs.recaptcha,\r\n        {\r\n          size: \"invisible\",\r\n          callback: function(response) {\r\n            console.log(response);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  },\r\n  mounted() {\r\n    // 手机登录\r\n    // firebase.auth().settings.appVerificationDisabledForTesting =\r\n    //   process.env.NODE_ENV === \"development\" ? true : false;\r\n    this.resetRecaptcha();\r\n    this.iti = intlTelInput(this.$refs.phone, {\r\n      initialCountry: \"cn\",\r\n      separateDialCode: true\r\n    });\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.login-page {\r\n  padding: 80px 35px 0;\r\n  min-height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  box-sizing: border-box;\r\n  .login-tips {\r\n    text-align: right;\r\n    font-size: 12px;\r\n    color: #cfcfcf;\r\n    padding: 10px 0;\r\n  }\r\n  .login-button-wrap {\r\n    margin-top: 40px;\r\n    text-align: center;\r\n    // padding: 20px;\r\n    .login-btn {\r\n      height: 36px;\r\n      line-height: 1;\r\n      font-size: 18px;\r\n      font-weight: bold;\r\n      padding: 0 45px;\r\n    }\r\n  }\r\n  .van-field__label {\r\n    display: flex;\r\n  }\r\n\r\n  .iti {\r\n    input {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhoneLogin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhoneLogin.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PhoneLogin.vue?vue&type=template&id=4f0bdad0&\"\nimport script from \"./PhoneLogin.vue?vue&type=script&lang=js&\"\nexport * from \"./PhoneLogin.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PhoneLogin.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import '../../style/base.less';\nimport '../../image/index.less';\nimport '../index.less';","import '../../style/base.less';\nimport '../../image/index.less';","/*\n * International Telephone Input v16.0.7\n * https://github.com/jackocnr/intl-tel-input.git\n * Licensed under the MIT license\n */\n\n// wrap in UMD\n(function(factory) {\n    var intlTelInput = factory(window, document);\n    if (typeof module === \"object\" && module.exports) module.exports = intlTelInput; else window.intlTelInput = intlTelInput;\n})(function(window, document, undefined) {\n    \"use strict\";\n    return function() {\n        // Array of country objects for the flag dropdown.\n        // Here is the criteria for the plugin to support a given country/territory\n        // - It has an iso2 code: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\n        // - It has it's own country calling code (it is not a sub-region of another country): https://en.wikipedia.org/wiki/List_of_country_calling_codes\n        // - It has a flag in the region-flags project: https://github.com/behdad/region-flags/tree/gh-pages/png\n        // - It is supported by libphonenumber (it must be listed on this page): https://github.com/googlei18n/libphonenumber/blob/master/resources/ShortNumberMetadata.xml\n        // Each country array has the following information:\n        // [\n        //    Country name,\n        //    iso2 code,\n        //    International dial code,\n        //    Order (if >1 country with same dial code),\n        //    Area codes\n        // ]\n        var allCountries = [ [ \"Afghanistan (‫افغانستان‬‎)\", \"af\", \"93\" ], [ \"Albania (Shqipëri)\", \"al\", \"355\" ], [ \"Algeria (‫الجزائر‬‎)\", \"dz\", \"213\" ], [ \"American Samoa\", \"as\", \"1\", 5, [ \"684\" ] ], [ \"Andorra\", \"ad\", \"376\" ], [ \"Angola\", \"ao\", \"244\" ], [ \"Anguilla\", \"ai\", \"1\", 6, [ \"264\" ] ], [ \"Antigua and Barbuda\", \"ag\", \"1\", 7, [ \"268\" ] ], [ \"Argentina\", \"ar\", \"54\" ], [ \"Armenia (Հայաստան)\", \"am\", \"374\" ], [ \"Aruba\", \"aw\", \"297\" ], [ \"Australia\", \"au\", \"61\", 0 ], [ \"Austria (Österreich)\", \"at\", \"43\" ], [ \"Azerbaijan (Azərbaycan)\", \"az\", \"994\" ], [ \"Bahamas\", \"bs\", \"1\", 8, [ \"242\" ] ], [ \"Bahrain (‫البحرين‬‎)\", \"bh\", \"973\" ], [ \"Bangladesh (বাংলাদেশ)\", \"bd\", \"880\" ], [ \"Barbados\", \"bb\", \"1\", 9, [ \"246\" ] ], [ \"Belarus (Беларусь)\", \"by\", \"375\" ], [ \"Belgium (België)\", \"be\", \"32\" ], [ \"Belize\", \"bz\", \"501\" ], [ \"Benin (Bénin)\", \"bj\", \"229\" ], [ \"Bermuda\", \"bm\", \"1\", 10, [ \"441\" ] ], [ \"Bhutan (འབྲུག)\", \"bt\", \"975\" ], [ \"Bolivia\", \"bo\", \"591\" ], [ \"Bosnia and Herzegovina (Босна и Херцеговина)\", \"ba\", \"387\" ], [ \"Botswana\", \"bw\", \"267\" ], [ \"Brazil (Brasil)\", \"br\", \"55\" ], [ \"British Indian Ocean Territory\", \"io\", \"246\" ], [ \"British Virgin Islands\", \"vg\", \"1\", 11, [ \"284\" ] ], [ \"Brunei\", \"bn\", \"673\" ], [ \"Bulgaria (България)\", \"bg\", \"359\" ], [ \"Burkina Faso\", \"bf\", \"226\" ], [ \"Burundi (Uburundi)\", \"bi\", \"257\" ], [ \"Cambodia (កម្ពុជា)\", \"kh\", \"855\" ], [ \"Cameroon (Cameroun)\", \"cm\", \"237\" ], [ \"Canada\", \"ca\", \"1\", 1, [ \"204\", \"226\", \"236\", \"249\", \"250\", \"289\", \"306\", \"343\", \"365\", \"387\", \"403\", \"416\", \"418\", \"431\", \"437\", \"438\", \"450\", \"506\", \"514\", \"519\", \"548\", \"579\", \"581\", \"587\", \"604\", \"613\", \"639\", \"647\", \"672\", \"705\", \"709\", \"742\", \"778\", \"780\", \"782\", \"807\", \"819\", \"825\", \"867\", \"873\", \"902\", \"905\" ] ], [ \"Cape Verde (Kabu Verdi)\", \"cv\", \"238\" ], [ \"Caribbean Netherlands\", \"bq\", \"599\", 1, [ \"3\", \"4\", \"7\" ] ], [ \"Cayman Islands\", \"ky\", \"1\", 12, [ \"345\" ] ], [ \"Central African Republic (République centrafricaine)\", \"cf\", \"236\" ], [ \"Chad (Tchad)\", \"td\", \"235\" ], [ \"Chile\", \"cl\", \"56\" ], [ \"China (中国)\", \"cn\", \"86\" ], [ \"Christmas Island\", \"cx\", \"61\", 2 ], [ \"Cocos (Keeling) Islands\", \"cc\", \"61\", 1 ], [ \"Colombia\", \"co\", \"57\" ], [ \"Comoros (‫جزر القمر‬‎)\", \"km\", \"269\" ], [ \"Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)\", \"cd\", \"243\" ], [ \"Congo (Republic) (Congo-Brazzaville)\", \"cg\", \"242\" ], [ \"Cook Islands\", \"ck\", \"682\" ], [ \"Costa Rica\", \"cr\", \"506\" ], [ \"Côte d’Ivoire\", \"ci\", \"225\" ], [ \"Croatia (Hrvatska)\", \"hr\", \"385\" ], [ \"Cuba\", \"cu\", \"53\" ], [ \"Curaçao\", \"cw\", \"599\", 0 ], [ \"Cyprus (Κύπρος)\", \"cy\", \"357\" ], [ \"Czech Republic (Česká republika)\", \"cz\", \"420\" ], [ \"Denmark (Danmark)\", \"dk\", \"45\" ], [ \"Djibouti\", \"dj\", \"253\" ], [ \"Dominica\", \"dm\", \"1\", 13, [ \"767\" ] ], [ \"Dominican Republic (República Dominicana)\", \"do\", \"1\", 2, [ \"809\", \"829\", \"849\" ] ], [ \"Ecuador\", \"ec\", \"593\" ], [ \"Egypt (‫مصر‬‎)\", \"eg\", \"20\" ], [ \"El Salvador\", \"sv\", \"503\" ], [ \"Equatorial Guinea (Guinea Ecuatorial)\", \"gq\", \"240\" ], [ \"Eritrea\", \"er\", \"291\" ], [ \"Estonia (Eesti)\", \"ee\", \"372\" ], [ \"Ethiopia\", \"et\", \"251\" ], [ \"Falkland Islands (Islas Malvinas)\", \"fk\", \"500\" ], [ \"Faroe Islands (Føroyar)\", \"fo\", \"298\" ], [ \"Fiji\", \"fj\", \"679\" ], [ \"Finland (Suomi)\", \"fi\", \"358\", 0 ], [ \"France\", \"fr\", \"33\" ], [ \"French Guiana (Guyane française)\", \"gf\", \"594\" ], [ \"French Polynesia (Polynésie française)\", \"pf\", \"689\" ], [ \"Gabon\", \"ga\", \"241\" ], [ \"Gambia\", \"gm\", \"220\" ], [ \"Georgia (საქართველო)\", \"ge\", \"995\" ], [ \"Germany (Deutschland)\", \"de\", \"49\" ], [ \"Ghana (Gaana)\", \"gh\", \"233\" ], [ \"Gibraltar\", \"gi\", \"350\" ], [ \"Greece (Ελλάδα)\", \"gr\", \"30\" ], [ \"Greenland (Kalaallit Nunaat)\", \"gl\", \"299\" ], [ \"Grenada\", \"gd\", \"1\", 14, [ \"473\" ] ], [ \"Guadeloupe\", \"gp\", \"590\", 0 ], [ \"Guam\", \"gu\", \"1\", 15, [ \"671\" ] ], [ \"Guatemala\", \"gt\", \"502\" ], [ \"Guernsey\", \"gg\", \"44\", 1, [ \"1481\", \"7781\", \"7839\", \"7911\" ] ], [ \"Guinea (Guinée)\", \"gn\", \"224\" ], [ \"Guinea-Bissau (Guiné Bissau)\", \"gw\", \"245\" ], [ \"Guyana\", \"gy\", \"592\" ], [ \"Haiti\", \"ht\", \"509\" ], [ \"Honduras\", \"hn\", \"504\" ], [ \"Hong Kong (香港)\", \"hk\", \"852\" ], [ \"Hungary (Magyarország)\", \"hu\", \"36\" ], [ \"Iceland (Ísland)\", \"is\", \"354\" ], [ \"India (भारत)\", \"in\", \"91\" ], [ \"Indonesia\", \"id\", \"62\" ], [ \"Iran (‫ایران‬‎)\", \"ir\", \"98\" ], [ \"Iraq (‫العراق‬‎)\", \"iq\", \"964\" ], [ \"Ireland\", \"ie\", \"353\" ], [ \"Isle of Man\", \"im\", \"44\", 2, [ \"1624\", \"74576\", \"7524\", \"7924\", \"7624\" ] ], [ \"Israel (‫ישראל‬‎)\", \"il\", \"972\" ], [ \"Italy (Italia)\", \"it\", \"39\", 0 ], [ \"Jamaica\", \"jm\", \"1\", 4, [ \"876\", \"658\" ] ], [ \"Japan (日本)\", \"jp\", \"81\" ], [ \"Jersey\", \"je\", \"44\", 3, [ \"1534\", \"7509\", \"7700\", \"7797\", \"7829\", \"7937\" ] ], [ \"Jordan (‫الأردن‬‎)\", \"jo\", \"962\" ], [ \"Kazakhstan (Казахстан)\", \"kz\", \"7\", 1, [ \"33\", \"7\" ] ], [ \"Kenya\", \"ke\", \"254\" ], [ \"Kiribati\", \"ki\", \"686\" ], [ \"Kosovo\", \"xk\", \"383\" ], [ \"Kuwait (‫الكويت‬‎)\", \"kw\", \"965\" ], [ \"Kyrgyzstan (Кыргызстан)\", \"kg\", \"996\" ], [ \"Laos (ລາວ)\", \"la\", \"856\" ], [ \"Latvia (Latvija)\", \"lv\", \"371\" ], [ \"Lebanon (‫لبنان‬‎)\", \"lb\", \"961\" ], [ \"Lesotho\", \"ls\", \"266\" ], [ \"Liberia\", \"lr\", \"231\" ], [ \"Libya (‫ليبيا‬‎)\", \"ly\", \"218\" ], [ \"Liechtenstein\", \"li\", \"423\" ], [ \"Lithuania (Lietuva)\", \"lt\", \"370\" ], [ \"Luxembourg\", \"lu\", \"352\" ], [ \"Macau (澳門)\", \"mo\", \"853\" ], [ \"Macedonia (FYROM) (Македонија)\", \"mk\", \"389\" ], [ \"Madagascar (Madagasikara)\", \"mg\", \"261\" ], [ \"Malawi\", \"mw\", \"265\" ], [ \"Malaysia\", \"my\", \"60\" ], [ \"Maldives\", \"mv\", \"960\" ], [ \"Mali\", \"ml\", \"223\" ], [ \"Malta\", \"mt\", \"356\" ], [ \"Marshall Islands\", \"mh\", \"692\" ], [ \"Martinique\", \"mq\", \"596\" ], [ \"Mauritania (‫موريتانيا‬‎)\", \"mr\", \"222\" ], [ \"Mauritius (Moris)\", \"mu\", \"230\" ], [ \"Mayotte\", \"yt\", \"262\", 1, [ \"269\", \"639\" ] ], [ \"Mexico (México)\", \"mx\", \"52\" ], [ \"Micronesia\", \"fm\", \"691\" ], [ \"Moldova (Republica Moldova)\", \"md\", \"373\" ], [ \"Monaco\", \"mc\", \"377\" ], [ \"Mongolia (Монгол)\", \"mn\", \"976\" ], [ \"Montenegro (Crna Gora)\", \"me\", \"382\" ], [ \"Montserrat\", \"ms\", \"1\", 16, [ \"664\" ] ], [ \"Morocco (‫المغرب‬‎)\", \"ma\", \"212\", 0 ], [ \"Mozambique (Moçambique)\", \"mz\", \"258\" ], [ \"Myanmar (Burma) (မြန်မာ)\", \"mm\", \"95\" ], [ \"Namibia (Namibië)\", \"na\", \"264\" ], [ \"Nauru\", \"nr\", \"674\" ], [ \"Nepal (नेपाल)\", \"np\", \"977\" ], [ \"Netherlands (Nederland)\", \"nl\", \"31\" ], [ \"New Caledonia (Nouvelle-Calédonie)\", \"nc\", \"687\" ], [ \"New Zealand\", \"nz\", \"64\" ], [ \"Nicaragua\", \"ni\", \"505\" ], [ \"Niger (Nijar)\", \"ne\", \"227\" ], [ \"Nigeria\", \"ng\", \"234\" ], [ \"Niue\", \"nu\", \"683\" ], [ \"Norfolk Island\", \"nf\", \"672\" ], [ \"North Korea (조선 민주주의 인민 공화국)\", \"kp\", \"850\" ], [ \"Northern Mariana Islands\", \"mp\", \"1\", 17, [ \"670\" ] ], [ \"Norway (Norge)\", \"no\", \"47\", 0 ], [ \"Oman (‫عُمان‬‎)\", \"om\", \"968\" ], [ \"Pakistan (‫پاکستان‬‎)\", \"pk\", \"92\" ], [ \"Palau\", \"pw\", \"680\" ], [ \"Palestine (‫فلسطين‬‎)\", \"ps\", \"970\" ], [ \"Panama (Panamá)\", \"pa\", \"507\" ], [ \"Papua New Guinea\", \"pg\", \"675\" ], [ \"Paraguay\", \"py\", \"595\" ], [ \"Peru (Perú)\", \"pe\", \"51\" ], [ \"Philippines\", \"ph\", \"63\" ], [ \"Poland (Polska)\", \"pl\", \"48\" ], [ \"Portugal\", \"pt\", \"351\" ], [ \"Puerto Rico\", \"pr\", \"1\", 3, [ \"787\", \"939\" ] ], [ \"Qatar (‫قطر‬‎)\", \"qa\", \"974\" ], [ \"Réunion (La Réunion)\", \"re\", \"262\", 0 ], [ \"Romania (România)\", \"ro\", \"40\" ], [ \"Russia (Россия)\", \"ru\", \"7\", 0 ], [ \"Rwanda\", \"rw\", \"250\" ], [ \"Saint Barthélemy\", \"bl\", \"590\", 1 ], [ \"Saint Helena\", \"sh\", \"290\" ], [ \"Saint Kitts and Nevis\", \"kn\", \"1\", 18, [ \"869\" ] ], [ \"Saint Lucia\", \"lc\", \"1\", 19, [ \"758\" ] ], [ \"Saint Martin (Saint-Martin (partie française))\", \"mf\", \"590\", 2 ], [ \"Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)\", \"pm\", \"508\" ], [ \"Saint Vincent and the Grenadines\", \"vc\", \"1\", 20, [ \"784\" ] ], [ \"Samoa\", \"ws\", \"685\" ], [ \"San Marino\", \"sm\", \"378\" ], [ \"São Tomé and Príncipe (São Tomé e Príncipe)\", \"st\", \"239\" ], [ \"Saudi Arabia (‫المملكة العربية السعودية‬‎)\", \"sa\", \"966\" ], [ \"Senegal (Sénégal)\", \"sn\", \"221\" ], [ \"Serbia (Србија)\", \"rs\", \"381\" ], [ \"Seychelles\", \"sc\", \"248\" ], [ \"Sierra Leone\", \"sl\", \"232\" ], [ \"Singapore\", \"sg\", \"65\" ], [ \"Sint Maarten\", \"sx\", \"1\", 21, [ \"721\" ] ], [ \"Slovakia (Slovensko)\", \"sk\", \"421\" ], [ \"Slovenia (Slovenija)\", \"si\", \"386\" ], [ \"Solomon Islands\", \"sb\", \"677\" ], [ \"Somalia (Soomaaliya)\", \"so\", \"252\" ], [ \"South Africa\", \"za\", \"27\" ], [ \"South Korea (대한민국)\", \"kr\", \"82\" ], [ \"South Sudan (‫جنوب السودان‬‎)\", \"ss\", \"211\" ], [ \"Spain (España)\", \"es\", \"34\" ], [ \"Sri Lanka (ශ්‍රී ලංකාව)\", \"lk\", \"94\" ], [ \"Sudan (‫السودان‬‎)\", \"sd\", \"249\" ], [ \"Suriname\", \"sr\", \"597\" ], [ \"Svalbard and Jan Mayen\", \"sj\", \"47\", 1, [ \"79\" ] ], [ \"Swaziland\", \"sz\", \"268\" ], [ \"Sweden (Sverige)\", \"se\", \"46\" ], [ \"Switzerland (Schweiz)\", \"ch\", \"41\" ], [ \"Syria (‫سوريا‬‎)\", \"sy\", \"963\" ], [ \"Taiwan (台灣)\", \"tw\", \"886\" ], [ \"Tajikistan\", \"tj\", \"992\" ], [ \"Tanzania\", \"tz\", \"255\" ], [ \"Thailand (ไทย)\", \"th\", \"66\" ], [ \"Timor-Leste\", \"tl\", \"670\" ], [ \"Togo\", \"tg\", \"228\" ], [ \"Tokelau\", \"tk\", \"690\" ], [ \"Tonga\", \"to\", \"676\" ], [ \"Trinidad and Tobago\", \"tt\", \"1\", 22, [ \"868\" ] ], [ \"Tunisia (‫تونس‬‎)\", \"tn\", \"216\" ], [ \"Turkey (Türkiye)\", \"tr\", \"90\" ], [ \"Turkmenistan\", \"tm\", \"993\" ], [ \"Turks and Caicos Islands\", \"tc\", \"1\", 23, [ \"649\" ] ], [ \"Tuvalu\", \"tv\", \"688\" ], [ \"U.S. Virgin Islands\", \"vi\", \"1\", 24, [ \"340\" ] ], [ \"Uganda\", \"ug\", \"256\" ], [ \"Ukraine (Україна)\", \"ua\", \"380\" ], [ \"United Arab Emirates (‫الإمارات العربية المتحدة‬‎)\", \"ae\", \"971\" ], [ \"United Kingdom\", \"gb\", \"44\", 0 ], [ \"United States\", \"us\", \"1\", 0 ], [ \"Uruguay\", \"uy\", \"598\" ], [ \"Uzbekistan (Oʻzbekiston)\", \"uz\", \"998\" ], [ \"Vanuatu\", \"vu\", \"678\" ], [ \"Vatican City (Città del Vaticano)\", \"va\", \"39\", 1, [ \"06698\" ] ], [ \"Venezuela\", \"ve\", \"58\" ], [ \"Vietnam (Việt Nam)\", \"vn\", \"84\" ], [ \"Wallis and Futuna (Wallis-et-Futuna)\", \"wf\", \"681\" ], [ \"Western Sahara (‫الصحراء الغربية‬‎)\", \"eh\", \"212\", 1, [ \"5288\", \"5289\" ] ], [ \"Yemen (‫اليمن‬‎)\", \"ye\", \"967\" ], [ \"Zambia\", \"zm\", \"260\" ], [ \"Zimbabwe\", \"zw\", \"263\" ], [ \"Åland Islands\", \"ax\", \"358\", 1, [ \"18\" ] ] ];\n        // loop over all of the countries above, restructuring the data to be objects with named keys\n        for (var i = 0; i < allCountries.length; i++) {\n            var c = allCountries[i];\n            allCountries[i] = {\n                name: c[0],\n                iso2: c[1],\n                dialCode: c[2],\n                priority: c[3] || 0,\n                areaCodes: c[4] || null\n            };\n        }\n        \"use strict\";\n        function _classCallCheck(instance, Constructor) {\n            if (!(instance instanceof Constructor)) {\n                throw new TypeError(\"Cannot call a class as a function\");\n            }\n        }\n        function _defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n                var descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n                if (\"value\" in descriptor) descriptor.writable = true;\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n        function _createClass(Constructor, protoProps, staticProps) {\n            if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) _defineProperties(Constructor, staticProps);\n            return Constructor;\n        }\n        window.intlTelInputGlobals = {\n            getInstance: function getInstance(input) {\n                var id = input.getAttribute(\"data-intl-tel-input-id\");\n                return window.intlTelInputGlobals.instances[id];\n            },\n            instances: {}\n        };\n        // these vars persist through all instances of the plugin\n        var id = 0;\n        var defaults = {\n            // whether or not to allow the dropdown\n            allowDropdown: true,\n            // if there is just a dial code in the input: remove it on blur\n            autoHideDialCode: true,\n            // add a placeholder in the input with an example number for the selected country\n            autoPlaceholder: \"polite\",\n            // modify the parentClass\n            customContainer: \"\",\n            // modify the auto placeholder\n            customPlaceholder: null,\n            // append menu to specified element\n            dropdownContainer: null,\n            // don't display these countries\n            excludeCountries: [],\n            // format the input value during initialisation and on setNumber\n            formatOnDisplay: true,\n            // geoIp lookup function\n            geoIpLookup: null,\n            // inject a hidden input with this name, and on submit, populate it with the result of getNumber\n            hiddenInput: \"\",\n            // initial country\n            initialCountry: \"\",\n            // localized country names e.g. { 'de': 'Deutschland' }\n            localizedCountries: null,\n            // don't insert international dial codes\n            nationalMode: true,\n            // display only these countries\n            onlyCountries: [],\n            // number type to use for placeholders\n            placeholderNumberType: \"MOBILE\",\n            // the countries at the top of the list. defaults to united states and united kingdom\n            preferredCountries: [ \"us\", \"gb\" ],\n            // display the country dial code next to the selected flag so it's not part of the typed number\n            separateDialCode: false,\n            // specify the path to the libphonenumber script to enable validation/formatting\n            utilsScript: \"\"\n        };\n        // https://en.wikipedia.org/wiki/List_of_North_American_Numbering_Plan_area_codes#Non-geographic_area_codes\n        var regionlessNanpNumbers = [ \"800\", \"822\", \"833\", \"844\", \"855\", \"866\", \"877\", \"880\", \"881\", \"882\", \"883\", \"884\", \"885\", \"886\", \"887\", \"888\", \"889\" ];\n        // keep track of if the window.load event has fired as impossible to check after the fact\n        window.addEventListener(\"load\", function() {\n            // UPDATE: use a public static field so we can fudge it in the tests\n            window.intlTelInputGlobals.windowLoaded = true;\n        });\n        // utility function to iterate over an object. can't use Object.entries or native forEach because\n        // of IE11\n        var forEachProp = function forEachProp(obj, callback) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                callback(keys[i], obj[keys[i]]);\n            }\n        };\n        // run a method on each instance of the plugin\n        var forEachInstance = function forEachInstance(method) {\n            forEachProp(window.intlTelInputGlobals.instances, function(key) {\n                window.intlTelInputGlobals.instances[key][method]();\n            });\n        };\n        // this is our plugin class that we will create an instance of\n        // eslint-disable-next-line no-unused-vars\n        var Iti = /*#__PURE__*/\n        function() {\n            function Iti(input, options) {\n                var _this = this;\n                _classCallCheck(this, Iti);\n                this.id = id++;\n                this.telInput = input;\n                this.activeItem = null;\n                this.highlightedItem = null;\n                // process specified options / defaults\n                // alternative to Object.assign, which isn't supported by IE11\n                var customOptions = options || {};\n                this.options = {};\n                forEachProp(defaults, function(key, value) {\n                    _this.options[key] = customOptions.hasOwnProperty(key) ? customOptions[key] : value;\n                });\n                this.hadInitialPlaceholder = Boolean(input.getAttribute(\"placeholder\"));\n            }\n            _createClass(Iti, [ {\n                key: \"_init\",\n                value: function _init() {\n                    var _this2 = this;\n                    // if in nationalMode, disable options relating to dial codes\n                    if (this.options.nationalMode) this.options.autoHideDialCode = false;\n                    // if separateDialCode then doesn't make sense to A) insert dial code into input\n                    // (autoHideDialCode), and B) display national numbers (because we're displaying the country\n                    // dial code next to them)\n                    if (this.options.separateDialCode) {\n                        this.options.autoHideDialCode = this.options.nationalMode = false;\n                    }\n                    // we cannot just test screen size as some smartphones/website meta tags will report desktop\n                    // resolutions\n                    // Note: for some reason jasmine breaks if you put this in the main Plugin function with the\n                    // rest of these declarations\n                    // Note: to target Android Mobiles (and not Tablets), we must find 'Android' and 'Mobile'\n                    this.isMobile = /Android.+Mobile|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n                    if (this.isMobile) {\n                        // trigger the mobile dropdown css\n                        document.body.classList.add(\"iti-mobile\");\n                        // on mobile, we want a full screen dropdown, so we must append it to the body\n                        if (!this.options.dropdownContainer) this.options.dropdownContainer = document.body;\n                    }\n                    // these promises get resolved when their individual requests complete\n                    // this way the dev can do something like iti.promise.then(...) to know when all requests are\n                    // complete\n                    if (typeof Promise !== \"undefined\") {\n                        var autoCountryPromise = new Promise(function(resolve, reject) {\n                            _this2.resolveAutoCountryPromise = resolve;\n                            _this2.rejectAutoCountryPromise = reject;\n                        });\n                        var utilsScriptPromise = new Promise(function(resolve, reject) {\n                            _this2.resolveUtilsScriptPromise = resolve;\n                            _this2.rejectUtilsScriptPromise = reject;\n                        });\n                        this.promise = Promise.all([ autoCountryPromise, utilsScriptPromise ]);\n                    } else {\n                        // prevent errors when Promise doesn't exist\n                        this.resolveAutoCountryPromise = this.rejectAutoCountryPromise = function() {};\n                        this.resolveUtilsScriptPromise = this.rejectUtilsScriptPromise = function() {};\n                    }\n                    // in various situations there could be no country selected initially, but we need to be able\n                    // to assume this variable exists\n                    this.selectedCountryData = {};\n                    // process all the data: onlyCountries, excludeCountries, preferredCountries etc\n                    this._processCountryData();\n                    // generate the markup\n                    this._generateMarkup();\n                    // set the initial state of the input value and the selected flag\n                    this._setInitialState();\n                    // start all of the event listeners: autoHideDialCode, input keydown, selectedFlag click\n                    this._initListeners();\n                    // utils script, and auto country\n                    this._initRequests();\n                }\n            }, {\n                key: \"_processCountryData\",\n                value: function _processCountryData() {\n                    // process onlyCountries or excludeCountries array if present\n                    this._processAllCountries();\n                    // process the countryCodes map\n                    this._processCountryCodes();\n                    // process the preferredCountries\n                    this._processPreferredCountries();\n                    // translate countries according to localizedCountries option\n                    if (this.options.localizedCountries) this._translateCountriesByLocale();\n                    // sort countries by name\n                    if (this.options.onlyCountries.length || this.options.localizedCountries) {\n                        this.countries.sort(this._countryNameSort);\n                    }\n                }\n            }, {\n                key: \"_addCountryCode\",\n                value: function _addCountryCode(iso2, dialCode, priority) {\n                    if (dialCode.length > this.dialCodeMaxLen) {\n                        this.dialCodeMaxLen = dialCode.length;\n                    }\n                    if (!this.countryCodes.hasOwnProperty(dialCode)) {\n                        this.countryCodes[dialCode] = [];\n                    }\n                    // bail if we already have this country for this dialCode\n                    for (var i = 0; i < this.countryCodes[dialCode].length; i++) {\n                        if (this.countryCodes[dialCode][i] === iso2) return;\n                    }\n                    // check for undefined as 0 is falsy\n                    var index = priority !== undefined ? priority : this.countryCodes[dialCode].length;\n                    this.countryCodes[dialCode][index] = iso2;\n                }\n            }, {\n                key: \"_processAllCountries\",\n                value: function _processAllCountries() {\n                    if (this.options.onlyCountries.length) {\n                        var lowerCaseOnlyCountries = this.options.onlyCountries.map(function(country) {\n                            return country.toLowerCase();\n                        });\n                        this.countries = allCountries.filter(function(country) {\n                            return lowerCaseOnlyCountries.indexOf(country.iso2) > -1;\n                        });\n                    } else if (this.options.excludeCountries.length) {\n                        var lowerCaseExcludeCountries = this.options.excludeCountries.map(function(country) {\n                            return country.toLowerCase();\n                        });\n                        this.countries = allCountries.filter(function(country) {\n                            return lowerCaseExcludeCountries.indexOf(country.iso2) === -1;\n                        });\n                    } else {\n                        this.countries = allCountries;\n                    }\n                }\n            }, {\n                key: \"_translateCountriesByLocale\",\n                value: function _translateCountriesByLocale() {\n                    for (var i = 0; i < this.countries.length; i++) {\n                        var iso = this.countries[i].iso2.toLowerCase();\n                        if (this.options.localizedCountries.hasOwnProperty(iso)) {\n                            this.countries[i].name = this.options.localizedCountries[iso];\n                        }\n                    }\n                }\n            }, {\n                key: \"_countryNameSort\",\n                value: function _countryNameSort(a, b) {\n                    return a.name.localeCompare(b.name);\n                }\n            }, {\n                key: \"_processCountryCodes\",\n                value: function _processCountryCodes() {\n                    this.dialCodeMaxLen = 0;\n                    this.countryCodes = {};\n                    // first: add dial codes\n                    for (var i = 0; i < this.countries.length; i++) {\n                        var c = this.countries[i];\n                        this._addCountryCode(c.iso2, c.dialCode, c.priority);\n                    }\n                    // next: add area codes\n                    // this is a second loop over countries, to make sure we have all of the \"root\" countries\n                    // already in the map, so that we can access them, as each time we add an area code substring\n                    // to the map, we also need to include the \"root\" country's code, as that also matches\n                    for (var _i = 0; _i < this.countries.length; _i++) {\n                        var _c = this.countries[_i];\n                        // area codes\n                        if (_c.areaCodes) {\n                            var rootCountryCode = this.countryCodes[_c.dialCode][0];\n                            // for each area code\n                            for (var j = 0; j < _c.areaCodes.length; j++) {\n                                var areaCode = _c.areaCodes[j];\n                                // for each digit in the area code to add all partial matches as well\n                                for (var k = 1; k < areaCode.length; k++) {\n                                    var partialDialCode = _c.dialCode + areaCode.substr(0, k);\n                                    // start with the root country, as that also matches this dial code\n                                    this._addCountryCode(rootCountryCode, partialDialCode);\n                                    this._addCountryCode(_c.iso2, partialDialCode);\n                                }\n                                // add the full area code\n                                this._addCountryCode(_c.iso2, _c.dialCode + areaCode);\n                            }\n                        }\n                    }\n                }\n            }, {\n                key: \"_processPreferredCountries\",\n                value: function _processPreferredCountries() {\n                    this.preferredCountries = [];\n                    for (var i = 0; i < this.options.preferredCountries.length; i++) {\n                        var countryCode = this.options.preferredCountries[i].toLowerCase();\n                        var countryData = this._getCountryData(countryCode, false, true);\n                        if (countryData) this.preferredCountries.push(countryData);\n                    }\n                }\n            }, {\n                key: \"_createEl\",\n                value: function _createEl(name, attrs, container) {\n                    var el = document.createElement(name);\n                    if (attrs) forEachProp(attrs, function(key, value) {\n                        return el.setAttribute(key, value);\n                    });\n                    if (container) container.appendChild(el);\n                    return el;\n                }\n            }, {\n                key: \"_generateMarkup\",\n                value: function _generateMarkup() {\n                    // prevent autocomplete as there's no safe, cross-browser event we can react to, so it can\n                    // easily put the plugin in an inconsistent state e.g. the wrong flag selected for the\n                    // autocompleted number, which on submit could mean wrong number is saved (esp in nationalMode)\n                    this.telInput.setAttribute(\"autocomplete\", \"off\");\n                    // containers (mostly for positioning)\n                    var parentClass = \"iti\";\n                    if (this.options.allowDropdown) parentClass += \" iti--allow-dropdown\";\n                    if (this.options.separateDialCode) parentClass += \" iti--separate-dial-code\";\n                    if (this.options.customContainer) {\n                        parentClass += \" \";\n                        parentClass += this.options.customContainer;\n                    }\n                    var wrapper = this._createEl(\"div\", {\n                        \"class\": parentClass\n                    });\n                    this.telInput.parentNode.insertBefore(wrapper, this.telInput);\n                    this.flagsContainer = this._createEl(\"div\", {\n                        \"class\": \"iti__flag-container\"\n                    }, wrapper);\n                    wrapper.appendChild(this.telInput);\n                    // selected flag (displayed to left of input)\n                    this.selectedFlag = this._createEl(\"div\", {\n                        \"class\": \"iti__selected-flag\",\n                        role: \"combobox\",\n                        \"aria-owns\": \"country-listbox\"\n                    }, this.flagsContainer);\n                    this.selectedFlagInner = this._createEl(\"div\", {\n                        \"class\": \"iti__flag\"\n                    }, this.selectedFlag);\n                    if (this.options.separateDialCode) {\n                        this.selectedDialCode = this._createEl(\"div\", {\n                            \"class\": \"iti__selected-dial-code\"\n                        }, this.selectedFlag);\n                    }\n                    if (this.options.allowDropdown) {\n                        // make element focusable and tab navigable\n                        this.selectedFlag.setAttribute(\"tabindex\", \"0\");\n                        this.dropdownArrow = this._createEl(\"div\", {\n                            \"class\": \"iti__arrow\"\n                        }, this.selectedFlag);\n                        // country dropdown: preferred countries, then divider, then all countries\n                        this.countryList = this._createEl(\"ul\", {\n                            \"class\": \"iti__country-list iti__hide\",\n                            id: \"country-listbox\",\n                            \"aria-expanded\": \"false\",\n                            role: \"listbox\"\n                        });\n                        if (this.preferredCountries.length) {\n                            this._appendListItems(this.preferredCountries, \"iti__preferred\");\n                            this._createEl(\"li\", {\n                                \"class\": \"iti__divider\",\n                                role: \"separator\",\n                                \"aria-disabled\": \"true\"\n                            }, this.countryList);\n                        }\n                        this._appendListItems(this.countries, \"iti__standard\");\n                        // create dropdownContainer markup\n                        if (this.options.dropdownContainer) {\n                            this.dropdown = this._createEl(\"div\", {\n                                \"class\": \"iti iti--container\"\n                            });\n                            this.dropdown.appendChild(this.countryList);\n                        } else {\n                            this.flagsContainer.appendChild(this.countryList);\n                        }\n                    }\n                    if (this.options.hiddenInput) {\n                        var hiddenInputName = this.options.hiddenInput;\n                        var name = this.telInput.getAttribute(\"name\");\n                        if (name) {\n                            var i = name.lastIndexOf(\"[\");\n                            // if input name contains square brackets, then give the hidden input the same name,\n                            // replacing the contents of the last set of brackets with the given hiddenInput name\n                            if (i !== -1) hiddenInputName = \"\".concat(name.substr(0, i), \"[\").concat(hiddenInputName, \"]\");\n                        }\n                        this.hiddenInput = this._createEl(\"input\", {\n                            type: \"hidden\",\n                            name: hiddenInputName\n                        });\n                        wrapper.appendChild(this.hiddenInput);\n                    }\n                }\n            }, {\n                key: \"_appendListItems\",\n                value: function _appendListItems(countries, className) {\n                    // we create so many DOM elements, it is faster to build a temp string\n                    // and then add everything to the DOM in one go at the end\n                    var tmp = \"\";\n                    // for each country\n                    for (var i = 0; i < countries.length; i++) {\n                        var c = countries[i];\n                        // open the list item\n                        tmp += \"<li class='iti__country \".concat(className, \"' tabIndex='-1' id='iti-item-\").concat(c.iso2, \"' role='option' data-dial-code='\").concat(c.dialCode, \"' data-country-code='\").concat(c.iso2, \"'>\");\n                        // add the flag\n                        tmp += \"<div class='iti__flag-box'><div class='iti__flag iti__\".concat(c.iso2, \"'></div></div>\");\n                        // and the country name and dial code\n                        tmp += \"<span class='iti__country-name'>\".concat(c.name, \"</span>\");\n                        tmp += \"<span class='iti__dial-code'>+\".concat(c.dialCode, \"</span>\");\n                        // close the list item\n                        tmp += \"</li>\";\n                    }\n                    this.countryList.insertAdjacentHTML(\"beforeend\", tmp);\n                }\n            }, {\n                key: \"_setInitialState\",\n                value: function _setInitialState() {\n                    var val = this.telInput.value;\n                    var dialCode = this._getDialCode(val);\n                    var isRegionlessNanp = this._isRegionlessNanp(val);\n                    var _this$options = this.options, initialCountry = _this$options.initialCountry, nationalMode = _this$options.nationalMode, autoHideDialCode = _this$options.autoHideDialCode, separateDialCode = _this$options.separateDialCode;\n                    // if we already have a dial code, and it's not a regionlessNanp, we can go ahead and set the\n                    // flag, else fall back to the default country\n                    if (dialCode && !isRegionlessNanp) {\n                        this._updateFlagFromNumber(val);\n                    } else if (initialCountry !== \"auto\") {\n                        // see if we should select a flag\n                        if (initialCountry) {\n                            this._setFlag(initialCountry.toLowerCase());\n                        } else {\n                            if (dialCode && isRegionlessNanp) {\n                                // has intl dial code, is regionless nanp, and no initialCountry, so default to US\n                                this._setFlag(\"us\");\n                            } else {\n                                // no dial code and no initialCountry, so default to first in list\n                                this.defaultCountry = this.preferredCountries.length ? this.preferredCountries[0].iso2 : this.countries[0].iso2;\n                                if (!val) {\n                                    this._setFlag(this.defaultCountry);\n                                }\n                            }\n                        }\n                        // if empty and no nationalMode and no autoHideDialCode then insert the default dial code\n                        if (!val && !nationalMode && !autoHideDialCode && !separateDialCode) {\n                            this.telInput.value = \"+\".concat(this.selectedCountryData.dialCode);\n                        }\n                    }\n                    // NOTE: if initialCountry is set to auto, that will be handled separately\n                    // format - note this wont be run after _updateDialCode as that's only called if no val\n                    if (val) this._updateValFromNumber(val);\n                }\n            }, {\n                key: \"_initListeners\",\n                value: function _initListeners() {\n                    this._initKeyListeners();\n                    if (this.options.autoHideDialCode) this._initBlurListeners();\n                    if (this.options.allowDropdown) this._initDropdownListeners();\n                    if (this.hiddenInput) this._initHiddenInputListener();\n                }\n            }, {\n                key: \"_initHiddenInputListener\",\n                value: function _initHiddenInputListener() {\n                    var _this3 = this;\n                    this._handleHiddenInputSubmit = function() {\n                        _this3.hiddenInput.value = _this3.getNumber();\n                    };\n                    if (this.telInput.form) this.telInput.form.addEventListener(\"submit\", this._handleHiddenInputSubmit);\n                }\n            }, {\n                key: \"_getClosestLabel\",\n                value: function _getClosestLabel() {\n                    var el = this.telInput;\n                    while (el && el.tagName !== \"LABEL\") {\n                        el = el.parentNode;\n                    }\n                    return el;\n                }\n            }, {\n                key: \"_initDropdownListeners\",\n                value: function _initDropdownListeners() {\n                    var _this4 = this;\n                    // hack for input nested inside label (which is valid markup): clicking the selected-flag to\n                    // open the dropdown would then automatically trigger a 2nd click on the input which would\n                    // close it again\n                    this._handleLabelClick = function(e) {\n                        // if the dropdown is closed, then focus the input, else ignore the click\n                        if (_this4.countryList.classList.contains(\"iti__hide\")) _this4.telInput.focus(); else e.preventDefault();\n                    };\n                    var label = this._getClosestLabel();\n                    if (label) label.addEventListener(\"click\", this._handleLabelClick);\n                    // toggle country dropdown on click\n                    this._handleClickSelectedFlag = function() {\n                        // only intercept this event if we're opening the dropdown\n                        // else let it bubble up to the top (\"click-off-to-close\" listener)\n                        // we cannot just stopPropagation as it may be needed to close another instance\n                        if (_this4.countryList.classList.contains(\"iti__hide\") && !_this4.telInput.disabled && !_this4.telInput.readOnly) {\n                            _this4._showDropdown();\n                        }\n                    };\n                    this.selectedFlag.addEventListener(\"click\", this._handleClickSelectedFlag);\n                    // open dropdown list if currently focused\n                    this._handleFlagsContainerKeydown = function(e) {\n                        var isDropdownHidden = _this4.countryList.classList.contains(\"iti__hide\");\n                        if (isDropdownHidden && [ \"ArrowUp\", \"Up\", \"ArrowDown\", \"Down\", \" \", \"Enter\" ].indexOf(e.key) !== -1) {\n                            // prevent form from being submitted if \"ENTER\" was pressed\n                            e.preventDefault();\n                            // prevent event from being handled again by document\n                            e.stopPropagation();\n                            _this4._showDropdown();\n                        }\n                        // allow navigation from dropdown to input on TAB\n                        if (e.key === \"Tab\") _this4._closeDropdown();\n                    };\n                    this.flagsContainer.addEventListener(\"keydown\", this._handleFlagsContainerKeydown);\n                }\n            }, {\n                key: \"_initRequests\",\n                value: function _initRequests() {\n                    var _this5 = this;\n                    // if the user has specified the path to the utils script, fetch it on window.load, else resolve\n                    if (this.options.utilsScript && !window.intlTelInputUtils) {\n                        // if the plugin is being initialised after the window.load event has already been fired\n                        if (window.intlTelInputGlobals.windowLoaded) {\n                            window.intlTelInputGlobals.loadUtils(this.options.utilsScript);\n                        } else {\n                            // wait until the load event so we don't block any other requests e.g. the flags image\n                            window.addEventListener(\"load\", function() {\n                                window.intlTelInputGlobals.loadUtils(_this5.options.utilsScript);\n                            });\n                        }\n                    } else this.resolveUtilsScriptPromise();\n                    if (this.options.initialCountry === \"auto\") this._loadAutoCountry(); else this.resolveAutoCountryPromise();\n                }\n            }, {\n                key: \"_loadAutoCountry\",\n                value: function _loadAutoCountry() {\n                    // 3 options:\n                    // 1) already loaded (we're done)\n                    // 2) not already started loading (start)\n                    // 3) already started loading (do nothing - just wait for loading callback to fire)\n                    if (window.intlTelInputGlobals.autoCountry) {\n                        this.handleAutoCountry();\n                    } else if (!window.intlTelInputGlobals.startedLoadingAutoCountry) {\n                        // don't do this twice!\n                        window.intlTelInputGlobals.startedLoadingAutoCountry = true;\n                        if (typeof this.options.geoIpLookup === \"function\") {\n                            this.options.geoIpLookup(function(countryCode) {\n                                window.intlTelInputGlobals.autoCountry = countryCode.toLowerCase();\n                                // tell all instances the auto country is ready\n                                // TODO: this should just be the current instances\n                                // UPDATE: use setTimeout in case their geoIpLookup function calls this callback straight\n                                // away (e.g. if they have already done the geo ip lookup somewhere else). Using\n                                // setTimeout means that the current thread of execution will finish before executing\n                                // this, which allows the plugin to finish initialising.\n                                setTimeout(function() {\n                                    return forEachInstance(\"handleAutoCountry\");\n                                });\n                            }, function() {\n                                return forEachInstance(\"rejectAutoCountryPromise\");\n                            });\n                        }\n                    }\n                }\n            }, {\n                key: \"_initKeyListeners\",\n                value: function _initKeyListeners() {\n                    var _this6 = this;\n                    // update flag on keyup\n                    this._handleKeyupEvent = function() {\n                        if (_this6._updateFlagFromNumber(_this6.telInput.value)) {\n                            _this6._triggerCountryChange();\n                        }\n                    };\n                    this.telInput.addEventListener(\"keyup\", this._handleKeyupEvent);\n                    // update flag on cut/paste events (now supported in all major browsers)\n                    this._handleClipboardEvent = function() {\n                        // hack because \"paste\" event is fired before input is updated\n                        setTimeout(_this6._handleKeyupEvent);\n                    };\n                    this.telInput.addEventListener(\"cut\", this._handleClipboardEvent);\n                    this.telInput.addEventListener(\"paste\", this._handleClipboardEvent);\n                }\n            }, {\n                key: \"_cap\",\n                value: function _cap(number) {\n                    var max = this.telInput.getAttribute(\"maxlength\");\n                    return max && number.length > max ? number.substr(0, max) : number;\n                }\n            }, {\n                key: \"_initBlurListeners\",\n                value: function _initBlurListeners() {\n                    var _this7 = this;\n                    // on blur or form submit: if just a dial code then remove it\n                    this._handleSubmitOrBlurEvent = function() {\n                        _this7._removeEmptyDialCode();\n                    };\n                    if (this.telInput.form) this.telInput.form.addEventListener(\"submit\", this._handleSubmitOrBlurEvent);\n                    this.telInput.addEventListener(\"blur\", this._handleSubmitOrBlurEvent);\n                }\n            }, {\n                key: \"_removeEmptyDialCode\",\n                value: function _removeEmptyDialCode() {\n                    if (this.telInput.value.charAt(0) === \"+\") {\n                        var numeric = this._getNumeric(this.telInput.value);\n                        // if just a plus, or if just a dial code\n                        if (!numeric || this.selectedCountryData.dialCode === numeric) {\n                            this.telInput.value = \"\";\n                        }\n                    }\n                }\n            }, {\n                key: \"_getNumeric\",\n                value: function _getNumeric(s) {\n                    return s.replace(/\\D/g, \"\");\n                }\n            }, {\n                key: \"_trigger\",\n                value: function _trigger(name) {\n                    // have to use old school document.createEvent as IE11 doesn't support `new Event()` syntax\n                    var e = document.createEvent(\"Event\");\n                    e.initEvent(name, true, true);\n                    // can bubble, and is cancellable\n                    this.telInput.dispatchEvent(e);\n                }\n            }, {\n                key: \"_showDropdown\",\n                value: function _showDropdown() {\n                    this.countryList.classList.remove(\"iti__hide\");\n                    this.countryList.setAttribute(\"aria-expanded\", \"true\");\n                    this._setDropdownPosition();\n                    // update highlighting and scroll to active list item\n                    if (this.activeItem) {\n                        this._highlightListItem(this.activeItem, false);\n                        this._scrollTo(this.activeItem, true);\n                    }\n                    // bind all the dropdown-related listeners: mouseover, click, click-off, keydown\n                    this._bindDropdownListeners();\n                    // update the arrow\n                    this.dropdownArrow.classList.add(\"iti__arrow--up\");\n                    this._trigger(\"open:countrydropdown\");\n                }\n            }, {\n                key: \"_toggleClass\",\n                value: function _toggleClass(el, className, shouldHaveClass) {\n                    if (shouldHaveClass && !el.classList.contains(className)) el.classList.add(className); else if (!shouldHaveClass && el.classList.contains(className)) el.classList.remove(className);\n                }\n            }, {\n                key: \"_setDropdownPosition\",\n                value: function _setDropdownPosition() {\n                    var _this8 = this;\n                    if (this.options.dropdownContainer) {\n                        this.options.dropdownContainer.appendChild(this.dropdown);\n                    }\n                    if (!this.isMobile) {\n                        var pos = this.telInput.getBoundingClientRect();\n                        // windowTop from https://stackoverflow.com/a/14384091/217866\n                        var windowTop = window.pageYOffset || document.documentElement.scrollTop;\n                        var inputTop = pos.top + windowTop;\n                        var dropdownHeight = this.countryList.offsetHeight;\n                        // dropdownFitsBelow = (dropdownBottom < windowBottom)\n                        var dropdownFitsBelow = inputTop + this.telInput.offsetHeight + dropdownHeight < windowTop + window.innerHeight;\n                        var dropdownFitsAbove = inputTop - dropdownHeight > windowTop;\n                        // by default, the dropdown will be below the input. If we want to position it above the\n                        // input, we add the dropup class.\n                        this._toggleClass(this.countryList, \"iti__country-list--dropup\", !dropdownFitsBelow && dropdownFitsAbove);\n                        // if dropdownContainer is enabled, calculate postion\n                        if (this.options.dropdownContainer) {\n                            // by default the dropdown will be directly over the input because it's not in the flow.\n                            // If we want to position it below, we need to add some extra top value.\n                            var extraTop = !dropdownFitsBelow && dropdownFitsAbove ? 0 : this.telInput.offsetHeight;\n                            // calculate placement\n                            this.dropdown.style.top = \"\".concat(inputTop + extraTop, \"px\");\n                            this.dropdown.style.left = \"\".concat(pos.left + document.body.scrollLeft, \"px\");\n                            // close menu on window scroll\n                            this._handleWindowScroll = function() {\n                                return _this8._closeDropdown();\n                            };\n                            window.addEventListener(\"scroll\", this._handleWindowScroll);\n                        }\n                    }\n                }\n            }, {\n                key: \"_getClosestListItem\",\n                value: function _getClosestListItem(target) {\n                    var el = target;\n                    while (el && el !== this.countryList && !el.classList.contains(\"iti__country\")) {\n                        el = el.parentNode;\n                    }\n                    // if we reached the countryList element, then return null\n                    return el === this.countryList ? null : el;\n                }\n            }, {\n                key: \"_bindDropdownListeners\",\n                value: function _bindDropdownListeners() {\n                    var _this9 = this;\n                    // when mouse over a list item, just highlight that one\n                    // we add the class \"highlight\", so if they hit \"enter\" we know which one to select\n                    this._handleMouseoverCountryList = function(e) {\n                        // handle event delegation, as we're listening for this event on the countryList\n                        var listItem = _this9._getClosestListItem(e.target);\n                        if (listItem) _this9._highlightListItem(listItem, false);\n                    };\n                    this.countryList.addEventListener(\"mouseover\", this._handleMouseoverCountryList);\n                    // listen for country selection\n                    this._handleClickCountryList = function(e) {\n                        var listItem = _this9._getClosestListItem(e.target);\n                        if (listItem) _this9._selectListItem(listItem);\n                    };\n                    this.countryList.addEventListener(\"click\", this._handleClickCountryList);\n                    // click off to close\n                    // (except when this initial opening click is bubbling up)\n                    // we cannot just stopPropagation as it may be needed to close another instance\n                    var isOpening = true;\n                    this._handleClickOffToClose = function() {\n                        if (!isOpening) _this9._closeDropdown();\n                        isOpening = false;\n                    };\n                    document.documentElement.addEventListener(\"click\", this._handleClickOffToClose);\n                    // listen for up/down scrolling, enter to select, or letters to jump to country name.\n                    // use keydown as keypress doesn't fire for non-char keys and we want to catch if they\n                    // just hit down and hold it to scroll down (no keyup event).\n                    // listen on the document because that's where key events are triggered if no input has focus\n                    var query = \"\";\n                    var queryTimer = null;\n                    this._handleKeydownOnDropdown = function(e) {\n                        // prevent down key from scrolling the whole page,\n                        // and enter key from submitting a form etc\n                        e.preventDefault();\n                        // up and down to navigate\n                        if (e.key === \"ArrowUp\" || e.key === \"Up\" || e.key === \"ArrowDown\" || e.key === \"Down\") _this9._handleUpDownKey(e.key); else if (e.key === \"Enter\") _this9._handleEnterKey(); else if (e.key === \"Escape\") _this9._closeDropdown(); else if (/^[a-zA-ZÀ-ÿ ]$/.test(e.key)) {\n                            // jump to countries that start with the query string\n                            if (queryTimer) clearTimeout(queryTimer);\n                            query += e.key.toLowerCase();\n                            _this9._searchForCountry(query);\n                            // if the timer hits 1 second, reset the query\n                            queryTimer = setTimeout(function() {\n                                query = \"\";\n                            }, 1e3);\n                        }\n                    };\n                    document.addEventListener(\"keydown\", this._handleKeydownOnDropdown);\n                }\n            }, {\n                key: \"_handleUpDownKey\",\n                value: function _handleUpDownKey(key) {\n                    var next = key === \"ArrowUp\" || key === \"Up\" ? this.highlightedItem.previousElementSibling : this.highlightedItem.nextElementSibling;\n                    if (next) {\n                        // skip the divider\n                        if (next.classList.contains(\"iti__divider\")) {\n                            next = key === \"ArrowUp\" || key === \"Up\" ? next.previousElementSibling : next.nextElementSibling;\n                        }\n                        this._highlightListItem(next, true);\n                    }\n                }\n            }, {\n                key: \"_handleEnterKey\",\n                value: function _handleEnterKey() {\n                    if (this.highlightedItem) this._selectListItem(this.highlightedItem);\n                }\n            }, {\n                key: \"_searchForCountry\",\n                value: function _searchForCountry(query) {\n                    for (var i = 0; i < this.countries.length; i++) {\n                        if (this._startsWith(this.countries[i].name, query)) {\n                            var listItem = this.countryList.querySelector(\"#iti-item-\".concat(this.countries[i].iso2));\n                            // update highlighting and scroll\n                            this._highlightListItem(listItem, false);\n                            this._scrollTo(listItem, true);\n                            break;\n                        }\n                    }\n                }\n            }, {\n                key: \"_startsWith\",\n                value: function _startsWith(a, b) {\n                    return a.substr(0, b.length).toLowerCase() === b;\n                }\n            }, {\n                key: \"_updateValFromNumber\",\n                value: function _updateValFromNumber(originalNumber) {\n                    var number = originalNumber;\n                    if (this.options.formatOnDisplay && window.intlTelInputUtils && this.selectedCountryData) {\n                        var useNational = !this.options.separateDialCode && (this.options.nationalMode || number.charAt(0) !== \"+\");\n                        var _intlTelInputUtils$nu = intlTelInputUtils.numberFormat, NATIONAL = _intlTelInputUtils$nu.NATIONAL, INTERNATIONAL = _intlTelInputUtils$nu.INTERNATIONAL;\n                        var format = useNational ? NATIONAL : INTERNATIONAL;\n                        number = intlTelInputUtils.formatNumber(number, this.selectedCountryData.iso2, format);\n                    }\n                    number = this._beforeSetNumber(number);\n                    this.telInput.value = number;\n                }\n            }, {\n                key: \"_updateFlagFromNumber\",\n                value: function _updateFlagFromNumber(originalNumber) {\n                    // if we're in nationalMode and we already have US/Canada selected, make sure the number starts\n                    // with a +1 so _getDialCode will be able to extract the area code\n                    // update: if we dont yet have selectedCountryData, but we're here (trying to update the flag\n                    // from the number), that means we're initialising the plugin with a number that already has a\n                    // dial code, so fine to ignore this bit\n                    var number = originalNumber;\n                    var selectedDialCode = this.selectedCountryData.dialCode;\n                    var isNanp = selectedDialCode === \"1\";\n                    if (number && this.options.nationalMode && isNanp && number.charAt(0) !== \"+\") {\n                        if (number.charAt(0) !== \"1\") number = \"1\".concat(number);\n                        number = \"+\".concat(number);\n                    }\n                    // update flag if user types area code for another country\n                    if (this.options.separateDialCode && selectedDialCode && number.charAt(0) !== \"+\") {\n                        number = \"+\".concat(selectedDialCode).concat(number);\n                    }\n                    // try and extract valid dial code from input\n                    var dialCode = this._getDialCode(number);\n                    var numeric = this._getNumeric(number);\n                    var countryCode = null;\n                    if (dialCode) {\n                        var countryCodes = this.countryCodes[this._getNumeric(dialCode)];\n                        // check if the right country is already selected. this should be false if the number is\n                        // longer than the matched dial code because in this case we need to make sure that if\n                        // there are multiple country matches, that the first one is selected (note: we could\n                        // just check that here, but it requires the same loop that we already have later)\n                        var alreadySelected = countryCodes.indexOf(this.selectedCountryData.iso2) !== -1 && numeric.length <= dialCode.length - 1;\n                        var isRegionlessNanpNumber = selectedDialCode === \"1\" && this._isRegionlessNanp(numeric);\n                        // only update the flag if:\n                        // A) NOT (we currently have a NANP flag selected, and the number is a regionlessNanp)\n                        // AND\n                        // B) the right country is not already selected\n                        if (!isRegionlessNanpNumber && !alreadySelected) {\n                            // if using onlyCountries option, countryCodes[0] may be empty, so we must find the first\n                            // non-empty index\n                            for (var j = 0; j < countryCodes.length; j++) {\n                                if (countryCodes[j]) {\n                                    countryCode = countryCodes[j];\n                                    break;\n                                }\n                            }\n                        }\n                    } else if (number.charAt(0) === \"+\" && numeric.length) {\n                        // invalid dial code, so empty\n                        // Note: use getNumeric here because the number has not been formatted yet, so could contain\n                        // bad chars\n                        countryCode = \"\";\n                    } else if (!number || number === \"+\") {\n                        // empty, or just a plus, so default\n                        countryCode = this.defaultCountry;\n                    }\n                    if (countryCode !== null) {\n                        return this._setFlag(countryCode);\n                    }\n                    return false;\n                }\n            }, {\n                key: \"_isRegionlessNanp\",\n                value: function _isRegionlessNanp(number) {\n                    var numeric = this._getNumeric(number);\n                    if (numeric.charAt(0) === \"1\") {\n                        var areaCode = numeric.substr(1, 3);\n                        return regionlessNanpNumbers.indexOf(areaCode) !== -1;\n                    }\n                    return false;\n                }\n            }, {\n                key: \"_highlightListItem\",\n                value: function _highlightListItem(listItem, shouldFocus) {\n                    var prevItem = this.highlightedItem;\n                    if (prevItem) prevItem.classList.remove(\"iti__highlight\");\n                    this.highlightedItem = listItem;\n                    this.highlightedItem.classList.add(\"iti__highlight\");\n                    if (shouldFocus) this.highlightedItem.focus();\n                }\n            }, {\n                key: \"_getCountryData\",\n                value: function _getCountryData(countryCode, ignoreOnlyCountriesOption, allowFail) {\n                    var countryList = ignoreOnlyCountriesOption ? allCountries : this.countries;\n                    for (var i = 0; i < countryList.length; i++) {\n                        if (countryList[i].iso2 === countryCode) {\n                            return countryList[i];\n                        }\n                    }\n                    if (allowFail) {\n                        return null;\n                    }\n                    throw new Error(\"No country data for '\".concat(countryCode, \"'\"));\n                }\n            }, {\n                key: \"_setFlag\",\n                value: function _setFlag(countryCode) {\n                    var prevCountry = this.selectedCountryData.iso2 ? this.selectedCountryData : {};\n                    // do this first as it will throw an error and stop if countryCode is invalid\n                    this.selectedCountryData = countryCode ? this._getCountryData(countryCode, false, false) : {};\n                    // update the defaultCountry - we only need the iso2 from now on, so just store that\n                    if (this.selectedCountryData.iso2) {\n                        this.defaultCountry = this.selectedCountryData.iso2;\n                    }\n                    this.selectedFlagInner.setAttribute(\"class\", \"iti__flag iti__\".concat(countryCode));\n                    // update the selected country's title attribute\n                    var title = countryCode ? \"\".concat(this.selectedCountryData.name, \": +\").concat(this.selectedCountryData.dialCode) : \"Unknown\";\n                    this.selectedFlag.setAttribute(\"title\", title);\n                    if (this.options.separateDialCode) {\n                        var dialCode = this.selectedCountryData.dialCode ? \"+\".concat(this.selectedCountryData.dialCode) : \"\";\n                        this.selectedDialCode.innerHTML = dialCode;\n                        // offsetWidth is zero if input is in a hidden container during initialisation\n                        var selectedFlagWidth = this.selectedFlag.offsetWidth || this._getHiddenSelectedFlagWidth();\n                        // add 6px of padding after the grey selected-dial-code box, as this is what we use in the css\n                        this.telInput.style.paddingLeft = \"\".concat(selectedFlagWidth + 6, \"px\");\n                    }\n                    // and the input's placeholder\n                    this._updatePlaceholder();\n                    // update the active list item\n                    if (this.options.allowDropdown) {\n                        var prevItem = this.activeItem;\n                        if (prevItem) {\n                            prevItem.classList.remove(\"iti__active\");\n                            prevItem.setAttribute(\"aria-selected\", \"false\");\n                        }\n                        if (countryCode) {\n                            var nextItem = this.countryList.querySelector(\"#iti-item-\".concat(countryCode));\n                            nextItem.setAttribute(\"aria-selected\", \"true\");\n                            nextItem.classList.add(\"iti__active\");\n                            this.activeItem = nextItem;\n                            this.countryList.setAttribute(\"aria-activedescendant\", nextItem.getAttribute(\"id\"));\n                        }\n                    }\n                    // return if the flag has changed or not\n                    return prevCountry.iso2 !== countryCode;\n                }\n            }, {\n                key: \"_getHiddenSelectedFlagWidth\",\n                value: function _getHiddenSelectedFlagWidth() {\n                    // to get the right styling to apply, all we need is a shallow clone of the container,\n                    // and then to inject a deep clone of the selectedFlag element\n                    var containerClone = this.telInput.parentNode.cloneNode();\n                    containerClone.style.visibility = \"hidden\";\n                    document.body.appendChild(containerClone);\n                    var selectedFlagClone = this.selectedFlag.cloneNode(true);\n                    containerClone.appendChild(selectedFlagClone);\n                    var width = selectedFlagClone.offsetWidth;\n                    containerClone.parentNode.removeChild(containerClone);\n                    return width;\n                }\n            }, {\n                key: \"_updatePlaceholder\",\n                value: function _updatePlaceholder() {\n                    var shouldSetPlaceholder = this.options.autoPlaceholder === \"aggressive\" || !this.hadInitialPlaceholder && this.options.autoPlaceholder === \"polite\";\n                    if (window.intlTelInputUtils && shouldSetPlaceholder) {\n                        var numberType = intlTelInputUtils.numberType[this.options.placeholderNumberType];\n                        var placeholder = this.selectedCountryData.iso2 ? intlTelInputUtils.getExampleNumber(this.selectedCountryData.iso2, this.options.nationalMode, numberType) : \"\";\n                        placeholder = this._beforeSetNumber(placeholder);\n                        if (typeof this.options.customPlaceholder === \"function\") {\n                            placeholder = this.options.customPlaceholder(placeholder, this.selectedCountryData);\n                        }\n                        this.telInput.setAttribute(\"placeholder\", placeholder);\n                    }\n                }\n            }, {\n                key: \"_selectListItem\",\n                value: function _selectListItem(listItem) {\n                    // update selected flag and active list item\n                    var flagChanged = this._setFlag(listItem.getAttribute(\"data-country-code\"));\n                    this._closeDropdown();\n                    this._updateDialCode(listItem.getAttribute(\"data-dial-code\"), true);\n                    // focus the input\n                    this.telInput.focus();\n                    // put cursor at end - this fix is required for FF and IE11 (with nationalMode=false i.e. auto\n                    // inserting dial code), who try to put the cursor at the beginning the first time\n                    var len = this.telInput.value.length;\n                    this.telInput.setSelectionRange(len, len);\n                    if (flagChanged) {\n                        this._triggerCountryChange();\n                    }\n                }\n            }, {\n                key: \"_closeDropdown\",\n                value: function _closeDropdown() {\n                    this.countryList.classList.add(\"iti__hide\");\n                    this.countryList.setAttribute(\"aria-expanded\", \"false\");\n                    // update the arrow\n                    this.dropdownArrow.classList.remove(\"iti__arrow--up\");\n                    // unbind key events\n                    document.removeEventListener(\"keydown\", this._handleKeydownOnDropdown);\n                    document.documentElement.removeEventListener(\"click\", this._handleClickOffToClose);\n                    this.countryList.removeEventListener(\"mouseover\", this._handleMouseoverCountryList);\n                    this.countryList.removeEventListener(\"click\", this._handleClickCountryList);\n                    // remove menu from container\n                    if (this.options.dropdownContainer) {\n                        if (!this.isMobile) window.removeEventListener(\"scroll\", this._handleWindowScroll);\n                        if (this.dropdown.parentNode) this.dropdown.parentNode.removeChild(this.dropdown);\n                    }\n                    this._trigger(\"close:countrydropdown\");\n                }\n            }, {\n                key: \"_scrollTo\",\n                value: function _scrollTo(element, middle) {\n                    var container = this.countryList;\n                    // windowTop from https://stackoverflow.com/a/14384091/217866\n                    var windowTop = window.pageYOffset || document.documentElement.scrollTop;\n                    var containerHeight = container.offsetHeight;\n                    var containerTop = container.getBoundingClientRect().top + windowTop;\n                    var containerBottom = containerTop + containerHeight;\n                    var elementHeight = element.offsetHeight;\n                    var elementTop = element.getBoundingClientRect().top + windowTop;\n                    var elementBottom = elementTop + elementHeight;\n                    var newScrollTop = elementTop - containerTop + container.scrollTop;\n                    var middleOffset = containerHeight / 2 - elementHeight / 2;\n                    if (elementTop < containerTop) {\n                        // scroll up\n                        if (middle) newScrollTop -= middleOffset;\n                        container.scrollTop = newScrollTop;\n                    } else if (elementBottom > containerBottom) {\n                        // scroll down\n                        if (middle) newScrollTop += middleOffset;\n                        var heightDifference = containerHeight - elementHeight;\n                        container.scrollTop = newScrollTop - heightDifference;\n                    }\n                }\n            }, {\n                key: \"_updateDialCode\",\n                value: function _updateDialCode(newDialCodeBare, hasSelectedListItem) {\n                    var inputVal = this.telInput.value;\n                    // save having to pass this every time\n                    var newDialCode = \"+\".concat(newDialCodeBare);\n                    var newNumber;\n                    if (inputVal.charAt(0) === \"+\") {\n                        // there's a plus so we're dealing with a replacement (doesn't matter if nationalMode or not)\n                        var prevDialCode = this._getDialCode(inputVal);\n                        if (prevDialCode) {\n                            // current number contains a valid dial code, so replace it\n                            newNumber = inputVal.replace(prevDialCode, newDialCode);\n                        } else {\n                            // current number contains an invalid dial code, so ditch it\n                            // (no way to determine where the invalid dial code ends and the rest of the number begins)\n                            newNumber = newDialCode;\n                        }\n                    } else if (this.options.nationalMode || this.options.separateDialCode) {\n                        // don't do anything\n                        return;\n                    } else {\n                        // nationalMode is disabled\n                        if (inputVal) {\n                            // there is an existing value with no dial code: prefix the new dial code\n                            newNumber = newDialCode + inputVal;\n                        } else if (hasSelectedListItem || !this.options.autoHideDialCode) {\n                            // no existing value and either they've just selected a list item, or autoHideDialCode is\n                            // disabled: insert new dial code\n                            newNumber = newDialCode;\n                        } else {\n                            return;\n                        }\n                    }\n                    this.telInput.value = newNumber;\n                }\n            }, {\n                key: \"_getDialCode\",\n                value: function _getDialCode(number) {\n                    var dialCode = \"\";\n                    // only interested in international numbers (starting with a plus)\n                    if (number.charAt(0) === \"+\") {\n                        var numericChars = \"\";\n                        // iterate over chars\n                        for (var i = 0; i < number.length; i++) {\n                            var c = number.charAt(i);\n                            // if char is number (https://stackoverflow.com/a/8935649/217866)\n                            if (!isNaN(parseInt(c, 10))) {\n                                numericChars += c;\n                                // if current numericChars make a valid dial code\n                                if (this.countryCodes[numericChars]) {\n                                    // store the actual raw string (useful for matching later)\n                                    dialCode = number.substr(0, i + 1);\n                                }\n                                if (numericChars.length === this.dialCodeMaxLen) {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    return dialCode;\n                }\n            }, {\n                key: \"_getFullNumber\",\n                value: function _getFullNumber() {\n                    var val = this.telInput.value.trim();\n                    var dialCode = this.selectedCountryData.dialCode;\n                    var prefix;\n                    var numericVal = this._getNumeric(val);\n                    if (this.options.separateDialCode && val.charAt(0) !== \"+\" && dialCode && numericVal) {\n                        // when using separateDialCode, it is visible so is effectively part of the typed number\n                        prefix = \"+\".concat(dialCode);\n                    } else {\n                        prefix = \"\";\n                    }\n                    return prefix + val;\n                }\n            }, {\n                key: \"_beforeSetNumber\",\n                value: function _beforeSetNumber(originalNumber) {\n                    var number = originalNumber;\n                    if (this.options.separateDialCode) {\n                        var dialCode = this._getDialCode(number);\n                        // if there is a valid dial code\n                        if (dialCode) {\n                            // in case _getDialCode returned an area code as well\n                            dialCode = \"+\".concat(this.selectedCountryData.dialCode);\n                            // a lot of numbers will have a space separating the dial code and the main number, and\n                            // some NANP numbers will have a hyphen e.g. +1 684-733-1234 - in both cases we want to get\n                            // rid of it\n                            // NOTE: don't just trim all non-numerics as may want to preserve an open parenthesis etc\n                            var start = number[dialCode.length] === \" \" || number[dialCode.length] === \"-\" ? dialCode.length + 1 : dialCode.length;\n                            number = number.substr(start);\n                        }\n                    }\n                    return this._cap(number);\n                }\n            }, {\n                key: \"_triggerCountryChange\",\n                value: function _triggerCountryChange() {\n                    this._trigger(\"countrychange\");\n                }\n            }, {\n                key: \"handleAutoCountry\",\n                value: function handleAutoCountry() {\n                    if (this.options.initialCountry === \"auto\") {\n                        // we must set this even if there is an initial val in the input: in case the initial val is\n                        // invalid and they delete it - they should see their auto country\n                        this.defaultCountry = window.intlTelInputGlobals.autoCountry;\n                        // if there's no initial value in the input, then update the flag\n                        if (!this.telInput.value) {\n                            this.setCountry(this.defaultCountry);\n                        }\n                        this.resolveAutoCountryPromise();\n                    }\n                }\n            }, {\n                key: \"handleUtils\",\n                value: function handleUtils() {\n                    // if the request was successful\n                    if (window.intlTelInputUtils) {\n                        // if there's an initial value in the input, then format it\n                        if (this.telInput.value) {\n                            this._updateValFromNumber(this.telInput.value);\n                        }\n                        this._updatePlaceholder();\n                    }\n                    this.resolveUtilsScriptPromise();\n                }\n            }, {\n                key: \"destroy\",\n                value: function destroy() {\n                    var form = this.telInput.form;\n                    if (this.options.allowDropdown) {\n                        // make sure the dropdown is closed (and unbind listeners)\n                        this._closeDropdown();\n                        this.selectedFlag.removeEventListener(\"click\", this._handleClickSelectedFlag);\n                        this.flagsContainer.removeEventListener(\"keydown\", this._handleFlagsContainerKeydown);\n                        // label click hack\n                        var label = this._getClosestLabel();\n                        if (label) label.removeEventListener(\"click\", this._handleLabelClick);\n                    }\n                    // unbind hiddenInput listeners\n                    if (this.hiddenInput && form) form.removeEventListener(\"submit\", this._handleHiddenInputSubmit);\n                    // unbind autoHideDialCode listeners\n                    if (this.options.autoHideDialCode) {\n                        if (form) form.removeEventListener(\"submit\", this._handleSubmitOrBlurEvent);\n                        this.telInput.removeEventListener(\"blur\", this._handleSubmitOrBlurEvent);\n                    }\n                    // unbind key events, and cut/paste events\n                    this.telInput.removeEventListener(\"keyup\", this._handleKeyupEvent);\n                    this.telInput.removeEventListener(\"cut\", this._handleClipboardEvent);\n                    this.telInput.removeEventListener(\"paste\", this._handleClipboardEvent);\n                    // remove attribute of id instance: data-intl-tel-input-id\n                    this.telInput.removeAttribute(\"data-intl-tel-input-id\");\n                    // remove markup (but leave the original input)\n                    var wrapper = this.telInput.parentNode;\n                    wrapper.parentNode.insertBefore(this.telInput, wrapper);\n                    wrapper.parentNode.removeChild(wrapper);\n                    delete window.intlTelInputGlobals.instances[this.id];\n                }\n            }, {\n                key: \"getExtension\",\n                value: function getExtension() {\n                    if (window.intlTelInputUtils) {\n                        return intlTelInputUtils.getExtension(this._getFullNumber(), this.selectedCountryData.iso2);\n                    }\n                    return \"\";\n                }\n            }, {\n                key: \"getNumber\",\n                value: function getNumber(format) {\n                    if (window.intlTelInputUtils) {\n                        var iso2 = this.selectedCountryData.iso2;\n                        return intlTelInputUtils.formatNumber(this._getFullNumber(), iso2, format);\n                    }\n                    return \"\";\n                }\n            }, {\n                key: \"getNumberType\",\n                value: function getNumberType() {\n                    if (window.intlTelInputUtils) {\n                        return intlTelInputUtils.getNumberType(this._getFullNumber(), this.selectedCountryData.iso2);\n                    }\n                    return -99;\n                }\n            }, {\n                key: \"getSelectedCountryData\",\n                value: function getSelectedCountryData() {\n                    return this.selectedCountryData;\n                }\n            }, {\n                key: \"getValidationError\",\n                value: function getValidationError() {\n                    if (window.intlTelInputUtils) {\n                        var iso2 = this.selectedCountryData.iso2;\n                        return intlTelInputUtils.getValidationError(this._getFullNumber(), iso2);\n                    }\n                    return -99;\n                }\n            }, {\n                key: \"isValidNumber\",\n                value: function isValidNumber() {\n                    var val = this._getFullNumber().trim();\n                    var countryCode = this.options.nationalMode ? this.selectedCountryData.iso2 : \"\";\n                    return window.intlTelInputUtils ? intlTelInputUtils.isValidNumber(val, countryCode) : null;\n                }\n            }, {\n                key: \"setCountry\",\n                value: function setCountry(originalCountryCode) {\n                    var countryCode = originalCountryCode.toLowerCase();\n                    // check if already selected\n                    if (!this.selectedFlagInner.classList.contains(\"iti__\".concat(countryCode))) {\n                        this._setFlag(countryCode);\n                        this._updateDialCode(this.selectedCountryData.dialCode, false);\n                        this._triggerCountryChange();\n                    }\n                }\n            }, {\n                key: \"setNumber\",\n                value: function setNumber(number) {\n                    // we must update the flag first, which updates this.selectedCountryData, which is used for\n                    // formatting the number before displaying it\n                    var flagChanged = this._updateFlagFromNumber(number);\n                    this._updateValFromNumber(number);\n                    if (flagChanged) {\n                        this._triggerCountryChange();\n                    }\n                }\n            }, {\n                key: \"setPlaceholderNumberType\",\n                value: function setPlaceholderNumberType(type) {\n                    this.options.placeholderNumberType = type;\n                    this._updatePlaceholder();\n                }\n            } ]);\n            return Iti;\n        }();\n        /********************\n *  STATIC METHODS\n ********************/\n        // get the country data object\n        window.intlTelInputGlobals.getCountryData = function() {\n            return allCountries;\n        };\n        // inject a <script> element to load utils.js\n        var injectScript = function injectScript(path, handleSuccess, handleFailure) {\n            // inject a new script element into the page\n            var script = document.createElement(\"script\");\n            script.onload = function() {\n                forEachInstance(\"handleUtils\");\n                if (handleSuccess) handleSuccess();\n            };\n            script.onerror = function() {\n                forEachInstance(\"rejectUtilsScriptPromise\");\n                if (handleFailure) handleFailure();\n            };\n            script.className = \"iti-load-utils\";\n            script.async = true;\n            script.src = path;\n            document.body.appendChild(script);\n        };\n        // load the utils script\n        window.intlTelInputGlobals.loadUtils = function(path) {\n            // 2 options:\n            // 1) not already started loading (start)\n            // 2) already started loading (do nothing - just wait for the onload callback to fire, which will\n            // trigger handleUtils on all instances, invoking their resolveUtilsScriptPromise functions)\n            if (!window.intlTelInputUtils && !window.intlTelInputGlobals.startedLoadingUtilsScript) {\n                // only do this once\n                window.intlTelInputGlobals.startedLoadingUtilsScript = true;\n                // if we have promises, then return a promise\n                if (typeof Promise !== \"undefined\") {\n                    return new Promise(function(resolve, reject) {\n                        return injectScript(path, resolve, reject);\n                    });\n                }\n                injectScript(path);\n            }\n            return null;\n        };\n        // default options\n        window.intlTelInputGlobals.defaults = defaults;\n        // version\n        window.intlTelInputGlobals.version = \"16.0.7\";\n        // convenience wrapper\n        return function(input, options) {\n            var iti = new Iti(input, options);\n            iti._init();\n            input.setAttribute(\"data-intl-tel-input-id\", iti.id);\n            window.intlTelInputGlobals.instances[iti.id] = iti;\n            return iti;\n        };\n    }();\n});","export var cellProps = {\n  icon: String,\n  size: String,\n  center: Boolean,\n  isLink: Boolean,\n  required: Boolean,\n  clickable: Boolean,\n  titleStyle: null,\n  titleClass: null,\n  valueClass: null,\n  labelClass: null,\n  title: [Number, String],\n  value: [Number, String],\n  label: [Number, String],\n  arrowDirection: String,\n  border: {\n    type: Boolean,\n    default: true\n  }\n};","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhoneLogin.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhoneLogin.vue?vue&type=style&index=0&lang=less&\""],"sourceRoot":""}